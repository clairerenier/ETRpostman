{
  "variables": [],
  "info": {
    "name": "[020000000]PRO-SOC-02",
    "_postman_id": "4188cf11-5991-0675-e72b-d8f719b09763",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "30227c59-ea06-d110-2288-2d2ee79116f4",
      "name": "[020001201]PRO_SOC_02_SOC_012_PCEPROTNR1",
      "description": "",
      "item": [
        {
          "_postman_id": "c95de358-82a3-7bf6-c921-19cd4986bc21",
          "name": "[020100100]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteCoeffACalcule\":",
                  "                tests[\"Delete Coeff_a_calcule Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Coeff_a_calcule Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[020100100]Insert data\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from POINT where uidpoint in (select P.UIDPOINT from PWRLINE.POINT P INNER JOIN PWRLINE.GRANDEUR G ON G.UIDGRANDEUR = P.UIDGRANDEUR INNER JOIN PWRLINE.PCE ON PCE.UIDGRANDEURS_OBJET = G.UIDGRANDEURS_OBJET WHERE PCE.IDPCE In('PCEPROTNR2', 'PCEPROTNR3','PCEPROTNR1') AND G.TYPE_GRANDEUR = 'VOLPEC')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteCoeffACalcule\",\r\n         \"requestContent\":\"delete from COEFF_A_CALCULE where uidcoeff_a_calcule in (select ca.uidcoeff_a_calcule from COEFF_A_CALCULE ca inner join pce on pce.uidpce = ca.uidpce where HORODATE >= to_date('01/04/2017 06:00:00','dd/mm/yyyy hh24:mi:ss') and HORODATE <= to_date('31/10/2017 06:00:00','dd/mm/yyyy hh24:mi:ss') and pce.idpce = 'PCEPROTNR1')\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c50b6e4a-bd1e-2450-a8f5-99e3e55ee1b7",
          "name": "[020100100]Insert data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"InsertPoint1\":",
                  "                tests[\"Insert Point Data1\"] = true;",
                  "                break;",
                  "            case \"InsertPoint2\":",
                  "                tests[\"Insert Point Data2\"] = true;",
                  "                break;",
                  "            case \"InsertPoint3\":",
                  "                tests[\"Insert Point Data3\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Insert Point Data1\"] && tests[\"Insert Point Data2\"] && tests[\"Insert Point Data3\"]){",
                  "        tests[\"Insert data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[020100100]Launch process\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"InsertPoint1\",\r\n         \"requestContent\":\"insert into POINT (UIDPOINT, UIDQUALITE_POINT, UIDGRANDEUR, HORODATE, VALEUR) Values (LS_SEQ_POINT.nextval, (SELECT UIDQUALITE_POINT FROM QUALITE_POINT where libelle = 'AF'), (select g.uidgrandeur from grandeur g inner join pce p on p.uidgrandeurs_objet = g.uidgrandeurs_objet where p.idpce in ('PCEPROTNR1') and g.pas = '86400' and g.type_grandeur = 'VOLPEC'), TRUNC(sysdate)+1/4-365, 1000)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"InsertPoint2\",\r\n         \"requestContent\":\"insert into POINT (UIDPOINT, UIDQUALITE_POINT, UIDGRANDEUR, HORODATE, VALEUR) Values (LS_SEQ_POINT.nextval, (SELECT UIDQUALITE_POINT FROM QUALITE_POINT where libelle = 'AF'), (select g.uidgrandeur from grandeur g inner join pce p on p.uidgrandeurs_objet = g.uidgrandeurs_objet where p.idpce in ('PCEPROTNR2') and g.pas = '86400' and g.type_grandeur = 'VOLPEC'), TRUNC(sysdate)+1/4-365, 1000)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"InsertPoint3\",\r\n         \"requestContent\":\"insert into POINT (UIDPOINT, UIDQUALITE_POINT, UIDGRANDEUR, HORODATE, VALEUR) Values (LS_SEQ_POINT.nextval, (SELECT UIDQUALITE_POINT FROM QUALITE_POINT where libelle = 'AF'), (select g.uidgrandeur from grandeur g inner join pce p on p.uidgrandeurs_objet = g.uidgrandeurs_objet where p.idpce in ('PCEPROTNR3') and g.pas = '86400' and g.type_grandeur = 'VOLPEC'), TRUNC(sysdate)+1/4-365, 1000)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8a1ef4ac-ec33-7fda-e93a-97a2ac332178",
          "name": "[020100100]Launch process",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "function pausecomp(millis)",
                  "         {",
                  "          var date = new Date();",
                  "          var curDate = null;",
                  "          do { curDate = new Date(); }",
                  "          while(curDate-date < millis);",
                  "        }",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "",
                  "if (tests[\"Status code is 200\"]){",
                  "        ",
                  "        ",
                  "        pausecomp(3000);",
                  "       postman.setNextRequest(\"[020100100]Check data\");",
                  "    }",
                  "",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_SOC_02/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"IDPCE\":\"PCEPROTNR1\",\"UIDVPCE\":\"181002\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "21cf959b-6dc8-9f79-4760-ad5c5755fb55",
          "name": "[020100100]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "            if(sqlResult[0].results !== null){",
                  "                    tests[\"Check status in COEFF_A_CALCULE\"] = sqlResult[0].results[0].COUNT == 7;",
                  "                    console.log (sqlResult[0].results[0].COUNT)",
                  "                }",
                  "            }",
                  "        ",
                  "    ",
                  "   // postman.setNextRequest(\"[010100101FGA]Drop file FGA\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckCoeffACalcule\",\r\n         \"requestContent\":\"select count(*) AS COUNT from COEFF_A_CALCULE ca inner join pce on pce.uidpce = ca.uidpce where HORODATE >= to_date('01/04/2017 06:00:00','dd/mm/yyyy hh24:mi:ss') and HORODATE <= to_date('31/10/2017 06:00:00','dd/mm/yyyy hh24:mi:ss') and pce.idpce = 'PCEPROTNR1'\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    }
  ]
}