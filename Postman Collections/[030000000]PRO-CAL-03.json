{
  "variables": [],
  "info": {
    "name": "[030000000]PRO-CAL-03",
    "_postman_id": "8afc3d50-65d3-676b-f59a-c99a6c428cfa",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "6d2f3ff7-2adf-094f-c240-abbbec428848",
      "name": "[030301900PCE]PRO_CAL_03_PCE_ORC_019_SGRPS1I10A",
      "description": "o  0 - TYPE_GRANDEUR_MODIFIE='' - one PCE creates 3 dmd_calcul at 3 level through ORC_19 (1,2,3)\r\no  1 - TYPE_GRANDEUR_MODIFIE='PCSMOY' - one PCE creates call of PRO_CAL_10 for 3 PCE\r\no  2 - TYPE_GRANDEUR_MODIFIE='QG' - ",
      "item": [
        {
          "_postman_id": "ad086fac-60a7-ba4a-ed98-92180c391755",
          "name": "[030301900PCE]Generation PRO-CAL-02 and TYPE_GRANDEUR_MODIFIEE=''",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 20000);",
                  "    /*setTimeout(function(){}, 10000);*/",
                  "    ",
                  "    postman.setNextRequest(\"[030301900PCE]Check data\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://172.30.1.60:48030/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":\r\n{\"idObjet\":\"SGRPS1I10A\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2016-08-02 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"\"}\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "84cf964a-d1b6-e0ff-6bfc-f982ffd328a8",
          "name": "[030301900PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckNumberDmdCalcul\":",
                  "                    tests[\"Check Number DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"3\";",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301901PCE]3 fathers and TYPE_GRANDEUR_MODIFIEE='PCSMOY'\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckNumberDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where source_processid in (select id_correlation from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only) and statut='CM' and code_objet in ('SGRPS1I10D','SGRPS1I10C','SGRPS1I10B')\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "5aa99e0a-9500-5f7f-f62b-7d805d595eec",
          "name": "[030301901PCE]3 fathers and TYPE_GRANDEUR_MODIFIEE='PCSMOY'",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 10000);",
                  "    /*setTimeout(function(){}, 10000); */",
                  "    postman.setNextRequest(\"[030301901PCE]Get Processid\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Another PCE LDPBG024 having 22 fathers"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"SGRPS1I10A\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2016-02-01 06:00:00\",\"listeHoursSt\":\"06;08;09;10;11;15\",\"typePeriode\":\"H\",\"typeGrandeur\":\"PCSMOY\"}}\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "bcacc715-d5bc-37c5-939d-b806caafc4a3",
          "name": "[030301901PCE]Get Processid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"GetProcessid\":",
                  "                    postman.setEnvironmentVariable(\"[030301901PCE]PRO_CAL_03_PCE_ORC_019_SGRPS1I10A\",sqlResult[i].results[0].ID_CORRELATION);",
                  "                    console.log(sqlResult[i].results[0].ID_CORRELATION);",
                  "                    console.log(\"[030301901PCE]PRO_CAL_03_PCE_ORC_019_SGRPS1I10A\");",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301901PCE]Check data\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"GetProcessid\",\r\n         \"requestContent\":\"select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "fef6c366-ee18-6952-557f-4cc683c30dc0",
          "name": "[030301901PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[030301901PCE]PRO_CAL_03_PCE_ORC_019_SGRPS1I10A\");",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckPayloadContent\":",
                  "                    console.log(\"processid\");",
                  "                    var payload = xml2Json(sqlResult[i].results[0].PAYLOAD).BPMREQUEST.REPORT;",
                  "                    var inputParams = payload.INPUTPARAMS.INPUTPARAM;",
                  "                    tests[\"Check REQUESTID\"] = payload.REQUESTID == processid+\"CAL_03_PRO_CAL_10\";",
                  "                    tests[\"Check CORRELATIONID\"] = payload.CORRELATIONID == processid;",
                  "                    tests[\"Check PROCESSID\"] = payload.CORRELATIONID == processid;",
                  "                    tests[\"Check STEPID\"] = payload.STEPID == \"CAL_03_PRO_CAL_10\";",
                  "                    tests[\"Check RPTNAME\"] = payload.RPTNAME == \"RS_PRO_CAL_10_WM\";",
                  "                    tests[\"Check I419STR_HORODATE_1\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_1\";}).$.VALUE == \"2016-02-01 06:00:00\"; ",
                  "                    tests[\"Check I419STR_HORODATE_2\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_2\";}).$.VALUE == \"2016-02-01 08:00:00\";",
                  "                    tests[\"Check I419STR_HORODATE_3\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_3\";}).$.VALUE == \"2016-02-01 09:00:00\";",
                  "                    tests[\"Check I419STR_HORODATE_4\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_4\";}).$.VALUE == \"2016-02-01 10:00:00\";",
                  "                    tests[\"Check I419STR_HORODATE_5\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_5\";}).$.VALUE == \"2016-02-01 11:00:00\";",
                  "                    tests[\"Check I419STR_HORODATE_6\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_6\";}).$.VALUE == \"2016-02-01 15:00:00\";",
                  "                    ",
                  "                    tests[\"Check I419STR_TYPE_GESTION_1\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_TYPE_GESTION_1\";}).$.VALUE == \"E\";",
                  "                    tests[\"Check I419STR_IDPCE_1\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_IDPCE_1\";}).$.VALUE == \"SGRPS1I10B\";",
                  "                    tests[\"Check I419STR_TYPE_GESTION_2\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_TYPE_GESTION_2\";}).$.VALUE == \"T\";",
                  "                    tests[\"Check I419STR_IDPCE_2\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_IDPCE_2\";}).$.VALUE == \"SGRPS1I10C\";",
                  "                    tests[\"Check I419STR_TYPE_GESTION_3\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_TYPE_GESTION_3\";}).$.VALUE == \"T\";",
                  "                    tests[\"Check I419STR_IDPCE_3\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_IDPCE_3\";}).$.VALUE == \"SGRPS1I10D\";",
                  "                    ",
                  "                    tests[\"Check I419STR_PAS\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_PAS\";}).$.VALUE == \"3600\";",
                  "                    tests[\"Check I419INT_NB_OBJET\"] = inputParams.find(function (d) { return d.$.NAME == \"I419INT_NB_OBJET\";}).$.VALUE == \"3\";",
                  "                    tests[\"Check I419INT_NB_HOURS\"] = inputParams.find(function (d) { return d.$.NAME == \"I419INT_NB_HOURS\";}).$.VALUE == \"6\";",
                  "                    ",
                  "                    break;   ",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301902PCE]3 fathers and TYPE_GRANDEUR_MODIFIEE='QG'\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckPayloadContent\",\r\n         \"requestContent\":\"select dbms_lob.substr( PAYLOAD, 4000, 1 ) as PAYLOAD from icepayloadext where externalid in (select id_correlation from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "2a05d4ec-1125-0d1a-38e1-a69e29bfadb9",
          "name": "[030301902PCE]3 fathers and TYPE_GRANDEUR_MODIFIEE='QG'",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 10000);",
                  "    /*setTimeout(function(){}, 10000); */",
                  "    postman.setNextRequest(\"[030301902PCE]Get Processid\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Another PCE LDPBG024 having 22 fathers"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"SGRPS1I10A\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2016-08-02 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"QG\"}}\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7148a49b-003e-0550-d6c9-6d65c9144322",
          "name": "[030301902PCE]Get Processid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"GetProcessid\":",
                  "                    postman.setEnvironmentVariable(\"[030301902PCE]PRO_CAL_03_PCE_ORC_019_SGRPS1I10A\",sqlResult[i].results[0].ID_CORRELATION);",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301902PCE]Check data\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"GetProcessid\",\r\n         \"requestContent\":\"select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "b9a5577d-297f-8f05-9209-f23838e46a0f",
          "name": "[030301902PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[030301902PCE]PRO_CAL_03_PCE_ORC_019_SGRPS1I10A\");",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckPayloadContent\":",
                  "                    console.log(\"processid\");",
                  "                    var payload = xml2Json(sqlResult[i].results[0].PAYLOAD).BPMREQUEST.REPORT;",
                  "                    var inputParams = payload.INPUTPARAMS.INPUTPARAM;",
                  "                    tests[\"Check REQUESTID\"] = payload.REQUESTID == processid+\"CAL_03_PRO_CAL_10\";",
                  "                    tests[\"Check CORRELATIONID\"] = payload.CORRELATIONID == processid;",
                  "                    tests[\"Check PROCESSID\"] = payload.CORRELATIONID == processid;",
                  "                    tests[\"Check STEPID\"] = payload.STEPID == \"CAL_03_PRO_CAL_10\";",
                  "                    tests[\"Check RPTNAME\"] = payload.RPTNAME == \"RS_PRO_CAL_10_WM\";",
                  "                    tests[\"Check I419STR_HORODATE_1\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_1\";}).$.VALUE == \"2016-08-02 06:00:00\"; ",
                  "                    tests[\"Check I419STR_HORODATE_2\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_2\";}).$.VALUE == \"2016-08-02 08:00:00\";",
                  "                    tests[\"Check I419STR_HORODATE_3\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_3\";}).$.VALUE == \"2016-08-02 09:00:00\";",
                  "",
                  "                    tests[\"Check I419STR_TYPE_GESTION_1\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_TYPE_GESTION_1\";}).$.VALUE == \"E\";",
                  "                    tests[\"Check I419STR_IDPCE_1\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_IDPCE_1\";}).$.VALUE == \"SGRPS1I10B\";",
                  "                    tests[\"Check I419STR_TYPE_GESTION_2\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_TYPE_GESTION_2\";}).$.VALUE == \"T\";",
                  "                    tests[\"Check I419STR_IDPCE_2\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_IDPCE_2\";}).$.VALUE == \"SGRPS1I10C\";",
                  "                    tests[\"Check I419STR_TYPE_GESTION_3\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_TYPE_GESTION_3\";}).$.VALUE == \"T\";",
                  "                    tests[\"Check I419STR_IDPCE_3\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_IDPCE_3\";}).$.VALUE == \"SGRPS1I10D\";",
                  "                    ",
                  "                    tests[\"Check I419STR_PAS\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_PAS\";}).$.VALUE == \"3600\";",
                  "                    tests[\"Check I419INT_NB_OBJET\"] = inputParams.find(function (d) { return d.$.NAME == \"I419INT_NB_OBJET\";}).$.VALUE == \"3\";",
                  "                    tests[\"Check I419INT_NB_HOURS\"] = inputParams.find(function (d) { return d.$.NAME == \"I419INT_NB_HOURS\";}).$.VALUE == \"3\";",
                  "                    ",
                  "                    break;   ",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckPayloadContent\",\r\n         \"requestContent\":\"select dbms_lob.substr( PAYLOAD, 4000, 1 ) as PAYLOAD from icepayloadext where externalid in (select id_correlation from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "49a12c39-fb02-b0c1-f433-005260a8721c",
      "name": "[030000000PCE]PRO_CAL_03_PCE_ORC_019_SGRPS1I10A copy",
      "description": "",
      "item": [
        {
          "_postman_id": "c00bd6ab-1341-99b9-80c5-e5846c3d79e5",
          "name": "PRO-CAL-03 - Appel PRO-CAL-10",
          "request": {
            "url": "http://172.30.1.60:48030/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":\r\n{\"idObjet\":\"SGRPS1I10A\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2016-08-02 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"QG\"}\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "f56c6d15-db21-81e4-f312-dade3424bc30",
          "name": "PRO-CAL-03 - Hiérarchie",
          "request": {
            "url": "http://172.30.1.60:48030/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"SGPCETVPEC\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2017-03-20 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"\"}}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "2c26edf1-9224-0927-cefc-9de77fda561e",
          "name": "PRO-CAL-03 - Appel PRO-CAL-10 avec Hierarchie",
          "request": {
            "url": "http://172.30.1.60:48030/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":\r\n{\"idObjet\":\"SGPCETVPEC\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2017-04-01 06:00:00\",\"listeHoursSt\":\"06\",\"typePeriode\":\"H\",\"typeGrandeur\":\"QG\"}\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "4ef50ca9-baff-c1b7-5692-04f45a5b1b69",
      "name": "[030302000FGA]PRO_CAL_03_FGA_ORC_020_FGACRETNR1",
      "description": "",
      "item": [
        {
          "_postman_id": "be2b455d-04d9-be86-3de9-38a96aa8bf8f",
          "name": "[030302000FGA]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqFgaData\":",
                  "                tests[\"Delete Acq_Fga Data\"] = true;",
                  "                break;",
                  "            case \"DeletePubPointJmnFgaData\":",
                  "                tests[\"Delete Pub_Pont_Jmn Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Fga Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[030302000FGA]Drop file FGA\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('25/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('26/02/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idfga in ('FGACRETNR1'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqFgaData\",\r\n         \"requestContent\":\"delete from acq_fga_conservee where uidacq_fga_conservee in (select uidacq_fga_conservee from acq_fga_conservee where code_acquisition in ('FGACRETNR1') and jour_gazier= TO_DATE('25/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeletePubPointJmnFgaData\",\r\n         \"requestContent\":\"delete from pub_point_jmn_fga where uidgrandeur in (select pp.uidgrandeur from pub_point_jmn_fga pp, fga p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idfga='FGACRETNR1' and horodate between TO_DATE('2017-02-25 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-26 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "3714e613-4fa7-77cf-28c0-aff50603a292",
          "name": "[030302000FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[030302000FGA]PRO_CAL_03_FGA_ORC_020_FGACRETNR1_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[030302000FGA]PRO_CAL_03_FGA_ORC_020_FGACRETNR1_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file FGA\"] = true; ",
                  "       postman.setNextRequest(\"[030302000FGA]PRO-CAL-03 FGA\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "}",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170225_FGA_20170225105010_CHR02_SCALA_18-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "b1fa4087-91ed-9118-25a7-b88290ae2547",
          "name": "[030302000FGA]PRO-CAL-03 FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 10000);",
                  "    /*setTimeout(function(){}, 10000); */",
                  "    postman.setNextRequest(\"[030301902PCE]Get Processid\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Another PCE LDPBG024 having 22 fathers"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"SGRPS1I10A\",\"typeObjet\":\"FGA\",\"typeGestion\":\"\",\"horodate\":\"2017-02-25 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"QG\"}}\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "015d0828-48ed-acea-b694-ccab8b16a303",
          "name": "[030302000FGA]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[030301902PCE]PRO_CAL_03_PCE_ORC_019_SGRPS1I10A\");",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckPayloadContent\":",
                  "                    console.log(\"processid\");",
                  "                    var payload = xml2Json(sqlResult[i].results[0].PAYLOAD).BPMREQUEST.REPORT;",
                  "                    var inputParams = payload.INPUTPARAMS.INPUTPARAM;",
                  "                    tests[\"Check REQUESTID\"] = payload.REQUESTID == processid+\"CAL_03_PRO_CAL_10\";",
                  "                    tests[\"Check CORRELATIONID\"] = payload.CORRELATIONID == processid;",
                  "                    tests[\"Check PROCESSID\"] = payload.CORRELATIONID == processid;",
                  "                    tests[\"Check STEPID\"] = payload.STEPID == \"CAL_03_PRO_CAL_10\";",
                  "                    tests[\"Check RPTNAME\"] = payload.RPTNAME == \"RS_PRO_CAL_10_WM\";",
                  "                    tests[\"Check I419STR_HORODATE_1\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_1\";}).$.VALUE == \"2016-08-02 06:00:00\"; ",
                  "                    tests[\"Check I419STR_HORODATE_2\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_2\";}).$.VALUE == \"2016-08-02 08:00:00\";",
                  "                    tests[\"Check I419STR_HORODATE_3\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_3\";}).$.VALUE == \"2016-08-02 09:00:00\";",
                  "",
                  "                    tests[\"Check I419STR_TYPE_GESTION_1\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_TYPE_GESTION_1\";}).$.VALUE == \"E\";",
                  "                    tests[\"Check I419STR_IDPCE_1\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_IDPCE_1\";}).$.VALUE == \"SGRPS1I10B\";",
                  "                    tests[\"Check I419STR_TYPE_GESTION_2\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_TYPE_GESTION_2\";}).$.VALUE == \"T\";",
                  "                    tests[\"Check I419STR_IDPCE_2\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_IDPCE_2\";}).$.VALUE == \"SGRPS1I10C\";",
                  "                    tests[\"Check I419STR_TYPE_GESTION_3\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_TYPE_GESTION_3\";}).$.VALUE == \"T\";",
                  "                    tests[\"Check I419STR_IDPCE_3\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_IDPCE_3\";}).$.VALUE == \"SGRPS1I10D\";",
                  "                    ",
                  "                    tests[\"Check I419STR_PAS\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_PAS\";}).$.VALUE == \"3600\";",
                  "                    tests[\"Check I419INT_NB_OBJET\"] = inputParams.find(function (d) { return d.$.NAME == \"I419INT_NB_OBJET\";}).$.VALUE == \"3\";",
                  "                    tests[\"Check I419INT_NB_HOURS\"] = inputParams.find(function (d) { return d.$.NAME == \"I419INT_NB_HOURS\";}).$.VALUE == \"3\";",
                  "                    ",
                  "                    break;   ",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >=(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckPubJmnFga\",\r\n         \"requestContent\":\"select pp.uidgrandeur from pub_point_jmn_fga pp, fga p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idfga='FGACRETNR1' and horodate between TO_DATE('2017-02-25 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-26 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and  date_modif>=(sysdate -1/24/4)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    }
  ]
}