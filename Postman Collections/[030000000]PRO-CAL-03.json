{
  "variables": [],
  "info": {
    "name": "[030000000]PRO-CAL-03",
    "_postman_id": "8afc3d50-65d3-676b-f59a-c99a6c428cfa",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "6d2f3ff7-2adf-094f-c240-abbbec428848",
      "name": "[030301900PCE]PRO_CAL_03_PCE_ORC_019_SGRPS1I10A",
      "description": "o  0 - TYPE_GRANDEUR_MODIFIE='' - one PCE creates 3 dmd_calcul at 3 level through ORC_19 (1,2,3)\r\no  1 - TYPE_GRANDEUR_MODIFIE='PCSMOY' - one PCE creates call of PRO_CAL_10 for 3 PCE\r\no  2 - TYPE_GRANDEUR_MODIFIE='QG' - ",
      "item": [
        {
          "_postman_id": "ad086fac-60a7-ba4a-ed98-92180c391755",
          "name": "[030301900PCE]Generation PRO-CAL-02 and TYPE_GRANDEUR_MODIFIEE=''",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 20000);",
                  "    /*setTimeout(function(){}, 10000);*/",
                  "    ",
                  "    postman.setNextRequest(\"[030301900PCE]Check data\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://172.30.1.60:48030/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":\r\n{\"idObjet\":\"SGRPS1I10A\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2016-08-02 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"\"}\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "84cf964a-d1b6-e0ff-6bfc-f982ffd328a8",
          "name": "[030301900PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckNumberDmdCalcul\":",
                  "                    tests[\"Check Number DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"3\";",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301901PCE]3 fathers and TYPE_GRANDEUR_MODIFIEE='PCSMOY'\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckNumberDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where source_processid in (select id_correlation from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only) and statut='CM' and code_objet in ('SGRPS1I10D','SGRPS1I10C','SGRPS1I10B')\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "5aa99e0a-9500-5f7f-f62b-7d805d595eec",
          "name": "[030301901PCE]3 fathers and TYPE_GRANDEUR_MODIFIEE='PCSMOY'",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 10000);",
                  "    /*setTimeout(function(){}, 10000); */",
                  "    postman.setNextRequest(\"[030301901PCE]Get Processid\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Another PCE LDPBG024 having 22 fathers"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"SGRPS1I10A\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2016-02-01 06:00:00\",\"listeHoursSt\":\"06;08;09;10;11;15\",\"typePeriode\":\"H\",\"typeGrandeur\":\"PCSMOY\"}}\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "bcacc715-d5bc-37c5-939d-b806caafc4a3",
          "name": "[030301901PCE]Get Processid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"GetProcessid\":",
                  "                    postman.setEnvironmentVariable(\"[030301901PCE]PRO_CAL_03_PCE_ORC_019_SGRPS1I10A\",sqlResult[i].results[0].ID_CORRELATION);",
                  "                    console.log(sqlResult[i].results[0].ID_CORRELATION);",
                  "                    console.log(\"[030301901PCE]PRO_CAL_03_PCE_ORC_019_SGRPS1I10A\");",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301901PCE]Check data and payload\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"GetProcessid\",\r\n         \"requestContent\":\"select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "fef6c366-ee18-6952-557f-4cc683c30dc0",
          "name": "[030301901PCE]Check data and payload",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[030301901PCE]PRO_CAL_03_PCE_ORC_019_SGRPS1I10A\");",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckPayloadContent\":",
                  "                    console.log(\"processid\");",
                  "                    var payload = xml2Json(sqlResult[i].results[0].PAYLOAD).BPMREQUEST.REPORT;",
                  "                    var inputParams = payload.INPUTPARAMS.INPUTPARAM;",
                  "                    tests[\"Check REQUESTID\"] = payload.REQUESTID == processid+\"CAL_03_PRO_CAL_10\";",
                  "                    tests[\"Check CORRELATIONID\"] = payload.CORRELATIONID == processid;",
                  "                    tests[\"Check PROCESSID\"] = payload.CORRELATIONID == processid;",
                  "                    tests[\"Check STEPID\"] = payload.STEPID == \"CAL_03_PRO_CAL_10\";",
                  "                    tests[\"Check RPTNAME\"] = payload.RPTNAME == \"RS_PRO_CAL_10_WM\";",
                  "                    tests[\"Check I419STR_HORODATE_1\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_1\";}).$.VALUE == \"2016-02-01 06:00:00\"; ",
                  "                    tests[\"Check I419STR_HORODATE_2\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_2\";}).$.VALUE == \"2016-02-01 08:00:00\";",
                  "                    tests[\"Check I419STR_HORODATE_3\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_3\";}).$.VALUE == \"2016-02-01 09:00:00\";",
                  "                    tests[\"Check I419STR_HORODATE_4\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_4\";}).$.VALUE == \"2016-02-01 10:00:00\";",
                  "                    tests[\"Check I419STR_HORODATE_5\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_5\";}).$.VALUE == \"2016-02-01 11:00:00\";",
                  "                    tests[\"Check I419STR_HORODATE_6\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_6\";}).$.VALUE == \"2016-02-01 15:00:00\";",
                  "                    ",
                  "                    tests[\"Check I419STR_TYPE_GESTION_1\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_TYPE_GESTION_1\";}).$.VALUE == \"E\";",
                  "                    tests[\"Check I419STR_IDPCE_1\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_IDPCE_1\";}).$.VALUE == \"SGRPS1I10B\";",
                  "                    tests[\"Check I419STR_TYPE_GESTION_2\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_TYPE_GESTION_2\";}).$.VALUE == \"T\";",
                  "                    tests[\"Check I419STR_IDPCE_2\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_IDPCE_2\";}).$.VALUE == \"SGRPS1I10C\";",
                  "                    tests[\"Check I419STR_TYPE_GESTION_3\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_TYPE_GESTION_3\";}).$.VALUE == \"T\";",
                  "                    tests[\"Check I419STR_IDPCE_3\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_IDPCE_3\";}).$.VALUE == \"SGRPS1I10D\";",
                  "                    ",
                  "                    tests[\"Check I419STR_PAS\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_PAS\";}).$.VALUE == \"3600\";",
                  "                    tests[\"Check I419INT_NB_OBJET\"] = inputParams.find(function (d) { return d.$.NAME == \"I419INT_NB_OBJET\";}).$.VALUE == \"3\";",
                  "                    tests[\"Check I419INT_NB_HOURS\"] = inputParams.find(function (d) { return d.$.NAME == \"I419INT_NB_HOURS\";}).$.VALUE == \"6\";",
                  "                    ",
                  "                    break;   ",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301902PCE]3 fathers and TYPE_GRANDEUR_MODIFIEE='QG'\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckPayloadContent\",\r\n         \"requestContent\":\"select dbms_lob.substr( PAYLOAD, 4000, 1 ) as PAYLOAD from icepayloadext where externalid in (select id_correlation from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "2a05d4ec-1125-0d1a-38e1-a69e29bfadb9",
          "name": "[030301902PCE]3 fathers and TYPE_GRANDEUR_MODIFIEE='QG'",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 10000);",
                  "    /*setTimeout(function(){}, 10000); */",
                  "    postman.setNextRequest(\"[030301902PCE]Get Processid\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Another PCE LDPBG024 having 22 fathers"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"SGRPS1I10A\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2016-08-02 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"QG\"}}\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7148a49b-003e-0550-d6c9-6d65c9144322",
          "name": "[030301902PCE]Get Processid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"GetProcessid\":",
                  "                    postman.setEnvironmentVariable(\"[030301902PCE]PRO_CAL_03_PCE_ORC_019_SGRPS1I10A\",sqlResult[i].results[0].ID_CORRELATION);",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301902PCE]Check data and payload\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"GetProcessid\",\r\n         \"requestContent\":\"select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "b9a5577d-297f-8f05-9209-f23838e46a0f",
          "name": "[030301902PCE]Check data and payload",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[030301902PCE]PRO_CAL_03_PCE_ORC_019_SGRPS1I10A\");",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckPayloadContent\":",
                  "                    console.log(\"processid\");",
                  "                    var payload = xml2Json(sqlResult[i].results[0].PAYLOAD).BPMREQUEST.REPORT;",
                  "                    var inputParams = payload.INPUTPARAMS.INPUTPARAM;",
                  "                    tests[\"Check REQUESTID\"] = payload.REQUESTID == processid+\"CAL_03_PRO_CAL_10\";",
                  "                    tests[\"Check CORRELATIONID\"] = payload.CORRELATIONID == processid;",
                  "                    tests[\"Check PROCESSID\"] = payload.CORRELATIONID == processid;",
                  "                    tests[\"Check STEPID\"] = payload.STEPID == \"CAL_03_PRO_CAL_10\";",
                  "                    tests[\"Check RPTNAME\"] = payload.RPTNAME == \"RS_PRO_CAL_10_WM\";",
                  "                    tests[\"Check I419STR_HORODATE_1\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_1\";}).$.VALUE == \"2016-08-02 06:00:00\"; ",
                  "                    tests[\"Check I419STR_HORODATE_2\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_2\";}).$.VALUE == \"2016-08-02 08:00:00\";",
                  "                    tests[\"Check I419STR_HORODATE_3\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_HORODATE_3\";}).$.VALUE == \"2016-08-02 09:00:00\";",
                  "",
                  "                    tests[\"Check I419STR_TYPE_GESTION_1\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_TYPE_GESTION_1\";}).$.VALUE == \"E\";",
                  "                    tests[\"Check I419STR_IDPCE_1\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_IDPCE_1\";}).$.VALUE == \"SGRPS1I10B\";",
                  "                    tests[\"Check I419STR_TYPE_GESTION_2\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_TYPE_GESTION_2\";}).$.VALUE == \"T\";",
                  "                    tests[\"Check I419STR_IDPCE_2\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_IDPCE_2\";}).$.VALUE == \"SGRPS1I10C\";",
                  "                    tests[\"Check I419STR_TYPE_GESTION_3\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_TYPE_GESTION_3\";}).$.VALUE == \"T\";",
                  "                    tests[\"Check I419STR_IDPCE_3\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_IDPCE_3\";}).$.VALUE == \"SGRPS1I10D\";",
                  "                    ",
                  "                    tests[\"Check I419STR_PAS\"] = inputParams.find(function (d) { return d.$.NAME == \"I419STR_PAS\";}).$.VALUE == \"3600\";",
                  "                    tests[\"Check I419INT_NB_OBJET\"] = inputParams.find(function (d) { return d.$.NAME == \"I419INT_NB_OBJET\";}).$.VALUE == \"3\";",
                  "                    tests[\"Check I419INT_NB_HOURS\"] = inputParams.find(function (d) { return d.$.NAME == \"I419INT_NB_HOURS\";}).$.VALUE == \"3\";",
                  "                    ",
                  "                    break;   ",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckPayloadContent\",\r\n         \"requestContent\":\"select dbms_lob.substr( PAYLOAD, 4000, 1 ) as PAYLOAD from icepayloadext where externalid in (select id_correlation from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "49a12c39-fb02-b0c1-f433-005260a8721c",
      "name": "[030000000PCE]PRO_CAL_03_PCE_ORC_019_SGRPS1I10A copy",
      "description": "",
      "item": [
        {
          "_postman_id": "c00bd6ab-1341-99b9-80c5-e5846c3d79e5",
          "name": "PRO-CAL-03 - Appel PRO-CAL-10",
          "request": {
            "url": "http://172.30.1.60:48030/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":\r\n{\"idObjet\":\"SGRPS1I10A\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2016-08-02 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"QG\"}\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "f56c6d15-db21-81e4-f312-dade3424bc30",
          "name": "PRO-CAL-03 - Hiérarchie",
          "request": {
            "url": "http://172.30.1.60:48030/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"SGPCETVPEC\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2017-03-20 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"\"}}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "2c26edf1-9224-0927-cefc-9de77fda561e",
          "name": "PRO-CAL-03 - Appel PRO-CAL-10 avec Hierarchie",
          "request": {
            "url": "http://172.30.1.60:48030/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              },
              {
                "key": "authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":\r\n{\"idObjet\":\"SGPCETVPEC\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2017-04-01 06:00:00\",\"listeHoursSt\":\"06\",\"typePeriode\":\"H\",\"typeGrandeur\":\"QG\"}\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "4ef50ca9-baff-c1b7-5692-04f45a5b1b69",
      "name": "[030302000FGA]PRO_CAL_03_FGA_ORC_020_FGACRETNR1",
      "description": "",
      "item": [
        {
          "_postman_id": "be2b455d-04d9-be86-3de9-38a96aa8bf8f",
          "name": "[030302000FGA]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqFgaData\":",
                  "                tests[\"Delete Acq_Fga Data\"] = true;",
                  "                break;",
                  "            case \"DeletePubPointJmnFgaData\":",
                  "                tests[\"Delete Pub_Pont_Jmn Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Fga Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[030302000FGA]Drop file FGA\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('25/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('26/02/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idfga in ('FGACRETNR1'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqFgaData\",\r\n         \"requestContent\":\"delete from acq_fga_conservee where uidacq_fga_conservee in (select uidacq_fga_conservee from acq_fga_conservee where code_acquisition in ('FGACRETNR1') and jour_gazier= TO_DATE('25/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeletePubPointJmnFgaData\",\r\n         \"requestContent\":\"delete from pub_point_jmn_fga where uidgrandeur in (select pp.uidgrandeur from pub_point_jmn_fga pp, fga p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idfga='FGACRETNR1' and horodate between TO_DATE('2017-02-25 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-26 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "3714e613-4fa7-77cf-28c0-aff50603a292",
          "name": "[030302000FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[030302000FGA]PRO_CAL_03_FGA_ORC_020_FGACRETNR1_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[030302000FGA]PRO_CAL_03_FGA_ORC_020_FGACRETNR1_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file FGA\"] = true; ",
                  "       postman.setNextRequest(\"[030302000FGA]PRO-CAL-03 FGA\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "}",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170225_FGA_20170225105010_CHR02_SCALA_18-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "b1fa4087-91ed-9118-25a7-b88290ae2547",
          "name": "[030302000FGA]PRO-CAL-03 FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 10000);",
                  "    /*setTimeout(function(){}, 10000); */",
                  "    postman.setNextRequest(\"[030302000FGA]Check data\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Another PCE LDPBG024 having 22 fathers"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"NSTOUEN\",\"typeObjet\":\"FGA\",\"typeGestion\":\"\",\"horodate\":\"2017-06-01 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"\"}}\n"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "015d0828-48ed-acea-b694-ccab8b16a303",
          "name": "[030302000FGA]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[030301902PCE]PRO_CAL_03_PCE_ORC_019_SGRPS1I10A\");",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckPubJmnFga\":",
                  "                    tests[\"Check data in pub_point_jmn_fga\"] = sqlResult[i].results[0].COUNT == \"130\";",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >=(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckPubJmnFga\",\r\n         \"requestContent\":\"select count(*) as COUNT from pub_point_jmn_fga pp, fga p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idfga='FGACRETNR1' and horodate between TO_DATE('2017-02-25 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-26 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and  date_modif>=(sysdate -1/24/4)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "0e9cbe03-b4c6-a722-7a71-d92aed198a80",
      "name": "[030301500FGA]PRO_CAL_03_FGA_ORC_015_NSTOUEN",
      "description": "Check that the proper number of dmd_calcul is generated (due to ZQG and FGA) and process are ok",
      "item": [
        {
          "_postman_id": "fa3c47dd-3632-0521-cac4-89103a802dc4",
          "name": "[030301500FGA]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqFgaData\":",
                  "                tests[\"Delete Acq_Fga Data\"] = true;",
                  "                break;",
                  "            case \"DeletePubPointJmnFgaData\":",
                  "                tests[\"Delete Pub_Pont_Jmn Data\"] = true;",
                  "                break;",
                  "            case \"DeletePointDataPce\":",
                  "                tests[\"Delete Point Data Pce\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Fga Data\"] && tests[\"Delete Point Data Pce\"] && tests[\"Delete Acq_Pce Data\"]){",
                  "        tests[\"Delete data Sum up\"]  = true; ",
                  "        postman.setNextRequest(\"[030301500FGA]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('01/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('02/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') and Idfga in ('NSTOUEN','ACHAZ600','BMOBILE2'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqFgaData\",\r\n         \"requestContent\":\"delete from acq_fga_conservee where uidacq_fga_conservee in (select uidacq_fga_conservee from acq_fga_conservee where code_acquisition in ('NSTOUEN','ACHAZ600','BMOBILE2') and jour_gazier= TO_DATE('01/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeletePubPointJmnFgaData\",\r\n         \"requestContent\":\"delete from pub_point_jmn_fga where uidgrandeur in (select pp.uidgrandeur from pub_point_jmn_fga pp, fga p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idfga='FGACRETNR1' and horodate between TO_DATE('2017-06-01 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-06-02 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n      },            {  \r\n         \"requestId\":\"DeletePointDataPce\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('01/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('02/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('SGPCETVPEC','SGPCEEVPEC','SGPCETPIL'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('SGPCETVPEC','SGPCEEVPEC','SGPCETPIL') and jour_gazier= TO_DATE('01/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c1a4f7bc-0973-3af6-18ed-f7e458746995",
          "name": "[030301500FGA]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[030301500FGA]PRO_CAL_03_FGA_ORC_015_NSTOUEN_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[030301500FGA]PRO_CAL_03_FGA_ORC_015_NSTOUEN_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[030301500FGA]Drop file FGA\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "}",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170601_PCE_20170601103424_CHR02_SCALA_2-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "f2a57ed0-a1d0-85d5-8048-38b6a7866dca",
          "name": "[030301500FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[030301500FGA]PRO_CAL_03_FGA_ORC_015_NSTOUEN_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[030301500FGA]PRO_CAL_03_FGA_ORC_015_NSTOUEN_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file FGA\"] = true; ",
                  "       postman.setNextRequest(\"[030301500FGA]Check process cal end\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "}",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170601_FGA_20170601095001_CHR02_SCALA_18-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "19de9f7c-f2dc-4d80-43e9-4b3f3705cc6b",
          "name": "[030301500FGA]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "       postman.setNextRequest(\"[030301500FGA]PRO-CAL-03 FGA\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[030301500FGA]PRO_CAL_03_FGA_ORC_015_NSTOUEN_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "24ed61c0-c0a7-dbef-4399-7e7cfa9495ea",
          "name": "[030301500FGA]PRO-CAL-03 FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 10000);",
                  "    /*setTimeout(function(){}, 10000); */",
                  "    postman.setNextRequest(\"[030301500FGA]Get Processid\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Another PCE LDPBG024 having 22 fathers"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"NSTOUEN\",\"typeObjet\":\"FGA\",\"typeGestion\":\"\",\"horodate\":\"2017-06-01 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"QG\"}}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "61d6e55a-6736-4f08-8917-07ffb1ae84f1",
          "name": "[030301500FGA]Get Processid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"GetSourceProcessid\":",
                  "                    postman.setEnvironmentVariable(\"[030301500FGA]PRO_CAL_03_FGA_ORC_015_NSTOUEN\",sqlResult[i].results[0].ID_CORRELATION);",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301500FGA]Check process cal end PRO-CAL-03\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"GetSourceProcessid\",\r\n         \"requestContent\":\"select distinct source_processid from dmd_calcul where prec_processid in ( select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "4ab30d96-447a-b8ef-a41f-c40fcd5b7b66",
          "name": "[030301500FGA]Check process cal end PRO-CAL-03",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[030301502PCE]PRO_CAL_03_FGA_ORC_015_NSTOUEN\");",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    /* 13-07-2017 - as of now the PRO-CAL-02 id_correlation doesn't contain the source_processid of PRO-CAL-03, hence the test is always ko */",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "        postman.setNextRequest(\"[030301500FGA]Check data\");",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "       postman.setNextRequest(\"[030301500FGA]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null); ",
                  "        postman.setNextRequest(\"[030301500FGA]Check data\");",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[030301500FGA]PRO_CAL_03_FGA_ORC_015_NSTOUEN}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "46cf5b97-a500-9d50-6aba-74e440c26fec",
          "name": "[030301500FGA]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[030301902PCE]PRO_CAL_03_PCE_ORC_019_SGRPS1I10A\");",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckDmdCalcul\":",
                  "                    tests[\"Check Dmd_calcul creation\"] = sqlResult[i].results[0].COUNT == \"3\";",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >=(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where source_processid in (select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "e21bea2b-2f42-d1a0-3168-fc4331f2ee73",
      "name": "[030301500PCE]PRO_CAL_03_PCE_ORC_015_SGPCETVPEC",
      "description": "0 - Check that the proper number of dmd_calcul is generated due to PCE and process are ok\n1 - Check that the proper number of dmd_calcul is generated due to APIL and GDC and process are ok",
      "item": [
        {
          "_postman_id": "4ddc707d-f1f9-2231-30be-e1dacb4faa90",
          "name": "[030301500PCE]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointDataPce\":",
                  "                tests[\"Delete Point Data Pce\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data Pce\"] && tests[\"Delete Acq_Pce Data\"]){",
                  "        tests[\"Delete data Sum up\"]  = true; ",
                  "        postman.setNextRequest(\"[030301500PCE]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePointDataPce\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('01/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('03/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('SGPCETVPEC','SGPCEEVPEC','SGPCETPIL'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('SGPCETVPEC','SGPCEEVPEC','SGPCETPIL') and jour_gazier= TO_DATE('01/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "5bed9e5b-f3b1-e0d1-29a3-180fc46ab115",
          "name": "[030301500PCE]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[030301500PCE]PRO_CAL_03_PCE_ORC_015_SGPCETVPEC_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[030301500PCE]PRO_CAL_03_PCE_ORC_015_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[030301500PCE]Check process cal end\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "}",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170601_PCE_20170601103424_CHR02_SCALA_2-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "fb958b64-78fa-b14c-7cf5-5913d2a9463c",
          "name": "[030301500PCE]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "       postman.setNextRequest(\"[030301500PCE]PRO-CAL-03 PCE\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[030301500PCE]PRO_CAL_03_PCE_ORC_015_SGPCETVPEC_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "bb9c213f-7b3e-1d2c-4c67-30604397faf0",
          "name": "[030301500PCE]PRO-CAL-03 PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 10000);",
                  "    /*setTimeout(function(){}, 10000); */",
                  "    postman.setNextRequest(\"[030301500PCE]Get Processid\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Another PCE LDPBG024 having 22 fathers"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"SGPCETVPEC\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2017-06-01 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"\"}}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "d34948b9-1d26-677c-ce3f-aab9ef86659f",
          "name": "[030301500PCE]Get Processid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"GetSourceProcessid\":",
                  "                    postman.setEnvironmentVariable(\"[030301500PCE]PRO_CAL_03_PCE_ORC_015_SGPCETVPEC\",sqlResult[i].results[0].SOURCE_PROCESSID);",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301500PCE]Check process cal end PRO-CAL-03\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"GetSourceProcessid\",\r\n         \"requestContent\":\"select distinct SOURCE_PROCESSID from dmd_calcul where prec_processid in ( select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "6e32fee1-3269-31d9-e79e-78a7228038ed",
          "name": "[030301500PCE]Check process cal end PRO-CAL-03",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[030301500PCE]PRO_CAL_03_PCE_ORC_015_SGPCETVPEC\");",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    /* 13-07-2017 - as of now the PRO-CAL-02 id_correlation doesn't contain the source_processid of PRO-CAL-03, hence the test is always ko */",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        postman.setNextRequest(\"[030301500PCE]Check data\");",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "",
                  "       postman.setNextRequest(\"[030301500PCE]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = false;",
                  "        postman.setNextRequest(\"[030301500PCE]Check data\");  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[030301500PCE]PRO_CAL_03_PCE_ORC_015_SGPCETVPEC}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "54ddbe9c-dc48-c3e1-9af9-5fcefed5b648",
          "name": "[030301500PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckDmdCalcul\":",
                  "                    tests[\"Check Dmd_calcul creation\"] = sqlResult[i].results[0].COUNT == \"16\";",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301501PCE]PRO-CAL-03 PCE\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >=(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where source_processid in (select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ed258d73-14f1-39fa-e7f7-cac1cc947cd4",
          "name": "[030301501PCE]PRO-CAL-03 PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 10000);",
                  "    /*setTimeout(function(){}, 10000); */",
                  "    postman.setNextRequest(\"[030301501PCE]Get Processid\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Another PCE LDPBG024 having 22 fathers"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"SGPCETPIL\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2017-06-01 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"\"}}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "b25764f5-e07a-1487-8188-7e984ad80825",
          "name": "[030301501PCE]Get Processid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"GetSourceProcessid\":",
                  "                    postman.setEnvironmentVariable(\"[030301501PCE]PRO_CAL_03_PCE_ORC_015_SGPCETVPEC\",sqlResult[i].results[0].SOURCE_PROCESSID);",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301501PCE]Check process cal end PRO-CAL-03\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"GetSourceProcessid\",\r\n         \"requestContent\":\"select distinct SOURCE_PROCESSID from dmd_calcul where prec_processid in ( select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "780d34c7-ef66-ec7a-2d1e-5125a3f396a3",
          "name": "[030301501PCE]Check process cal end PRO-CAL-03",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[030301501PCE]PRO_CAL_03_PCE_ORC_015_SGPCETVPEC\");",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    /* 13-07-2017 - as of now the PRO-CAL-02 id_correlation doesn't contain the source_processid of PRO-CAL-03, hence the test is always ko */",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        postman.setNextRequest(\"[030301501PCE]Check data\");",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "",
                  "       postman.setNextRequest(\"[030301501PCE]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = false;",
                  "        postman.setNextRequest(\"[030301501PCE]Check data\");  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[030301501PCE]PRO_CAL_03_PCE_ORC_015_SGPCETVPEC}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "1cb2c677-6a17-8c8c-d859-a75072fcc3ce",
          "name": "[030301501PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckDmdCalcul\":",
                  "                    tests[\"Check Dmd_calcul creation\"] = sqlResult[i].results[0].COUNT == \"13\";",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >=(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where source_processid in (select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "51224ae3-bd87-65f8-1a0f-f6e01771771e",
      "name": "[030301600PCE]PRO_CAL_03_PCE_ORC_016_SGPCETVPEC",
      "description": "0 - Check that the proper number of dmd_calcul is generated due to PCE and process are ok\n1 - Check that the proper number of dmd_calcul is generated due to APIL and GDC and process are ok (we have completed the object SGPCETVPEC)",
      "item": [
        {
          "_postman_id": "db5d2509-ecd8-a29b-6a47-9f7ad577e292",
          "name": "[030301600PCE]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointDataPce\":",
                  "                tests[\"Delete Point Data Pce\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "            case \"DeleteWmCalcul\":",
                  "                tests[\"Delete WM_Calcul Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data Pce\"] && tests[\"Delete Acq_Pce Data\"] && tests[\"Delete WM_Calcul Data\"]){",
                  "        tests[\"Delete data Sum up\"]  = true; ",
                  "        postman.setNextRequest(\"[030301600PCE]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePointDataPce\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('03/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('04/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('SGPCETVPEC','SGPCEEVPEC','SGPCETPIL'))\"\r\n      },\r\n       {  \r\n         \"requestId\":\"DeleteWmCalcul\",\r\n         \"requestContent\":\"delete from wm_calcul where wm_calcul.IDOBJECT in ('SGPCECPEC','SGPCECVOL0','SGPCECNEG','SGPCEZPEC','SGPCECZZZ','SGPCECAAZ','MASTER','BIGMASTER','SGPCECORC19') and HORODATE >= TO_DATE('03/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and HORODATE <= TO_DATE('04/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('SGPCETVPEC','SGPCEEVPEC','SGPCETPIL') and jour_gazier= TO_DATE('03/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "79cb09cb-8621-3b09-0171-c5e566391da2",
          "name": "[030301600PCE]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[030301600PCE]PRO_CAL_03_PCE_ORC_016_SGPCETVPEC_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[030301600PCE]PRO_CAL_03_PCE_ORC_016_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[030301600PCE]Check process cal end\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "}",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170603_PCE_20170603103424_CHR02_SCALA_2-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "4133dc08-398f-f97f-1e1b-183b62613637",
          "name": "[030301600PCE]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "       postman.setNextRequest(\"[030301600PCE]PRO-CAL-03 PCE\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[030301600PCE]PRO_CAL_03_PCE_ORC_016_SGPCETVPEC_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "62b7d354-1e1b-4b3b-e044-071d7010ca6b",
          "name": "[030301600PCE]PRO-CAL-03 PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 10000);",
                  "    /*setTimeout(function(){}, 10000); */",
                  "    postman.setNextRequest(\"[030301600PCE]Get Processid\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Another PCE LDPBG024 having 22 fathers"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"SGPCETVPEC\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2017-06-03 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"\"}}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "f47a5b0f-77a1-9927-f068-93f2b691ee08",
          "name": "[030301600PCE]Get Processid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"GetSourceProcessid\":",
                  "                    postman.setEnvironmentVariable(\"[030301600PCE]PRO_CAL_03_PCE_ORC_016_SGPCETVPEC\",sqlResult[i].results[0].SOURCE_PROCESSID);",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301600PCE]Check process cal end PRO-CAL-03\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"GetSourceProcessid\",\r\n         \"requestContent\":\"select distinct SOURCE_PROCESSID from dmd_calcul where prec_processid in ( select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "385deea5-468d-8aed-e27a-116f08ffd0b7",
          "name": "[030301600PCE]Check process cal end PRO-CAL-03",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[030301600PCE]PRO_CAL_03_PCE_ORC_016_SGPCETVPEC\");",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    /* 13-07-2017 - as of now the PRO-CAL-02 id_correlation doesn't contain the source_processid of PRO-CAL-03, hence the test is always ko */",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        postman.setNextRequest(\"[030301600PCE]Check data\");",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "",
                  "       postman.setNextRequest(\"[030301600PCE]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = true;",
                  "        postman.setNextRequest(\"[030301600PCE]Check data\");  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[030301600PCE]PRO_CAL_03_PCE_ORC_016_SGPCETVPEC}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "2790dd44-f009-979e-1ded-4cb9ad756156",
          "name": "[030301600PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckDmdCalcul\":",
                  "                    tests[\"Check Dmd_calcul creation\"] = sqlResult[i].results[0].COUNT == \"4\";",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301601PCE]Drop file PCE\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >=(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where source_processid in (select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "75131498-a16a-b121-63cf-72b9561b5e03",
          "name": "[030301601PCE]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[030301601PCE]PRO_CAL_03_PCE_ORC_016_SGPCETVPEC_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[030301601PCE]PRO_CAL_03_PCE_ORC_016_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[030301601PCE]Check process cal end\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "}",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170603_PCE_20170603103425_CHR02_SCALA_2-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "f39a7e93-a597-0fd8-6e2d-f9c765f35a9c",
          "name": "[030301601PCE]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "       postman.setNextRequest(\"[030301601PCE]PRO-CAL-03 PCE\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[030301601PCE]PRO_CAL_03_PCE_ORC_016_SGPCETVPEC_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "d9c297b2-6f1e-df38-7073-631633b607f5",
          "name": "[030301601PCE]PRO-CAL-03 PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 10000);",
                  "    /*setTimeout(function(){}, 10000); */",
                  "    postman.setNextRequest(\"[030301601PCE]Get Processid\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Another PCE LDPBG024 having 22 fathers"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"SGPCETVPEC\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2017-06-03 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"\"}}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ccc3f01a-2eaf-79a8-45a3-01434546130c",
          "name": "[030301601PCE]Get Processid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"GetSourceProcessid\":",
                  "                    postman.setEnvironmentVariable(\"[030301601PCE]PRO_CAL_03_PCE_ORC_016_SGPCETVPEC\",sqlResult[i].results[0].SOURCE_PROCESSID);",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301601PCE]Check process cal end PRO-CAL-03\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"GetSourceProcessid\",\r\n         \"requestContent\":\"select distinct SOURCE_PROCESSID from dmd_calcul where prec_processid in ( select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "900392b0-1b5c-91e8-bbfd-00a7c9e9a120",
          "name": "[030301601PCE]Check process cal end PRO-CAL-03",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[030301601PCE]PRO_CAL_03_PCE_ORC_016_SGPCETVPEC\");",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    /* 13-07-2017 - as of now the PRO-CAL-02 id_correlation doesn't contain the source_processid of PRO-CAL-03, hence the test is always ko */",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        postman.setNextRequest(\"[030301601PCE]Check data\");",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "",
                  "       postman.setNextRequest(\"[030301601PCE]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = true;",
                  "        postman.setNextRequest(\"[030301601PCE]Check data\");  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[030301601PCE]PRO_CAL_03_PCE_ORC_016_SGPCETVPEC}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "1b188719-7388-e8f9-7778-de17207bb639",
          "name": "[030301601PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckDmdCalcul\":",
                  "                    tests[\"Check Dmd_calcul creation\"] = sqlResult[i].results[0].COUNT == \"6\";",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >=(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where source_processid in (select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "1660e3a9-4459-27ad-0793-ed21fb6de6a9",
      "name": "[030301700PCE]PRO_CAL_03_PCE_ORC_017_SGPCETVPEC",
      "description": "0 - Check that the proper number of dmd_calcul is generated due to PCE and process are ok\n1 - Check that the proper number of dmd_calcul is generated due to APIL and GDC, WM_CALCUL table is updated accordingly (07AM missing) and process are ok (we have completed the object SGPCETVPEC)",
      "item": [
        {
          "_postman_id": "1fc344ad-95b4-5b92-1822-36f2f8edc971",
          "name": "[030301700PCE]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointDataPce\":",
                  "                tests[\"Delete Point Data Pce\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "            case \"DeleteWmCalcul\":",
                  "                tests[\"Delete WM_Calcul Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data Pce\"] && tests[\"Delete Acq_Pce Data\"] && tests[\"Delete WM_Calcul Data\"]){",
                  "        tests[\"Delete data Sum up\"]  = true; ",
                  "        postman.setNextRequest(\"[030301700PCE]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePointDataPce\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('04/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('05/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('SGPCETVPEC','SGPCEEVPEC','SGPCETPIL'))\"\r\n      },\r\n       {  \r\n         \"requestId\":\"DeleteWmCalcul\",\r\n         \"requestContent\":\"delete from wm_calcul where wm_calcul.IDOBJECT in ('SGPCECPEC','SGPCECVOL0','SGPCECNEG','SGPCEZPEC','SGPCECZZZ','SGPCECAAZ','MASTER','BIGMASTER','SGPCECORC19') and HORODATE >= TO_DATE('04/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and HORODATE <= TO_DATE('05/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('SGPCETVPEC','SGPCEEVPEC','SGPCETPIL') and jour_gazier= TO_DATE('04/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7258f627-fee2-0a7a-ed83-dd35e0ed8f51",
          "name": "[030301700PCE]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[030301700PCE]PRO_CAL_03_PCE_ORC_017_SGPCETVPEC_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[030301700PCE]PRO_CAL_03_PCE_ORC_017_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[030301700PCE]Check process cal end\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "}",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170604_PCE_20170604103424_CHR02_SCALA_2-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "66e2af6b-bfcf-4497-ca52-f9c9949ba285",
          "name": "[030301700PCE]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "       postman.setNextRequest(\"[030301700PCE]PRO-CAL-03 PCE\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[030301700PCE]PRO_CAL_03_PCE_ORC_017_SGPCETVPEC_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "5be275c5-cf32-425e-f541-096554e0e534",
          "name": "[030301700PCE]PRO-CAL-03 PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 10000);",
                  "    /*setTimeout(function(){}, 10000); */",
                  "    postman.setNextRequest(\"[030301700PCE]Get Processid\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Another PCE LDPBG024 having 22 fathers"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"SGPCETVPEC\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2017-06-04 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"\"}}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "9736b06b-391e-44e0-aa9e-60010bd0fa6b",
          "name": "[030301700PCE]Get Processid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"GetSourceProcessid\":",
                  "                    postman.setEnvironmentVariable(\"[030301700PCE]PRO_CAL_03_PCE_ORC_017_SGPCETVPEC\",sqlResult[i].results[0].SOURCE_PROCESSID);",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301700PCE]Check process cal end PRO-CAL-03\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"GetSourceProcessid\",\r\n         \"requestContent\":\"select distinct SOURCE_PROCESSID from dmd_calcul where prec_processid in ( select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c66b46bc-c3f2-d642-1c4b-2e60bb5b7366",
          "name": "[030301700PCE]Check process cal end PRO-CAL-03",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[030301700PCE]PRO_CAL_03_PCE_ORC_017_SGPCETVPEC\");",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    /* 13-07-2017 - as of now the PRO-CAL-02 id_correlation doesn't contain the source_processid of PRO-CAL-03, hence the test is always ko */",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        postman.setNextRequest(\"[030301700PCE]Check data\");",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "",
                  "       postman.setNextRequest(\"[030301700PCE]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = true;",
                  "        postman.setNextRequest(\"[030301700PCE]Check data\");  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[030301700PCE]PRO_CAL_03_PCE_ORC_017_SGPCETVPEC}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "dbee18b5-889d-0ef6-1e31-a52a7ecf4b02",
          "name": "[030301700PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckDmdCalcul\":",
                  "                    tests[\"Check Dmd_calcul creation\"] = sqlResult[i].results[0].COUNT == \"4\";",
                  "                    break;",
                  "                case \"CheckWMCalcul\":",
                  "                    tests[\"Check WM_Calcul creation\"] = sqlResult[i].results[0].COUNT == \"4\";",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301701PCE]PRO-CAL-03 PCE\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >=(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where source_processid in (select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckWMCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from wm_calcul where wm_calcul.IDOBJECT in ('SGPCECPEC') and HORODATE >= TO_DATE('04/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and HORODATE <= TO_DATE('05/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') and child_calculated='SGPCETVPEC'\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "42de1c46-c24b-8101-0393-a1539a39afdd",
          "name": "[030301701PCE]PRO-CAL-03 PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 10000);",
                  "    /*setTimeout(function(){}, 10000); */",
                  "    postman.setNextRequest(\"[030301701PCE]Get Processid\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Another PCE LDPBG024 having 22 fathers"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"SGPCEEVPEC\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2017-06-04 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"\"}}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "43f7ec2a-9a20-727e-3232-d160acbec5c3",
          "name": "[030301701PCE]Get Processid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"GetSourceProcessid\":",
                  "                    postman.setEnvironmentVariable(\"[030301701PCE]PRO_CAL_03_PCE_ORC_017_SGPCETVPEC\",sqlResult[i].results[0].SOURCE_PROCESSID);",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301701PCE]Check process cal end PRO-CAL-03\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"GetSourceProcessid\",\r\n         \"requestContent\":\"select distinct SOURCE_PROCESSID from dmd_calcul where prec_processid in ( select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "bf68aba8-c46d-fcd8-edac-c0f6a8e853e4",
          "name": "[030301701PCE]Check process cal end PRO-CAL-03",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[030301701PCE]PRO_CAL_03_PCE_ORC_017_SGPCETVPEC\");",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    /* 13-07-2017 - as of now the PRO-CAL-02 id_correlation doesn't contain the source_processid of PRO-CAL-03, hence the test is always ko */",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        postman.setNextRequest(\"[030301701PCE]Check data\");",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "",
                  "       postman.setNextRequest(\"[030301701PCE]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = true;",
                  "        postman.setNextRequest(\"[030301701PCE]Check data\");  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[030301701PCE]PRO_CAL_03_PCE_ORC_017_SGPCETVPEC}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "0e6d7c0f-58ff-4251-8f5c-7f5c16851553",
          "name": "[030301701PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckDmdCalcul\":",
                  "                    tests[\"Check Dmd_calcul creation\"] = sqlResult[i].results[0].COUNT >= \"2\";",
                  "                    break;",
                  "                case \"CheckWMCalcul\":",
                  "                    tests[\"Check WM_Calcul creation\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;}",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >=(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where source_processid in (select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckWMCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from wm_calcul where wm_calcul.IDOBJECT in ('SGPCECPEC') and HORODATE >= TO_DATE('04/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and HORODATE <= TO_DATE('05/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') and child_calculated='SGPCETVPEC'\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "a9944aa7-804f-3d5a-85c7-b25887bdfb48",
      "name": "[030300100PCE]PRO_CAL_03_PCE_TRV_001_SGPCETVPEC",
      "description": "0 - Check that the proper number of dmd_calcul is generated due to PCE and process are ok\n1 - Check that the proper number of dmd_calcul is generated due to APIL and GDC and process are ok (we have completed the object SGPCETVPEC)",
      "item": [
        {
          "_postman_id": "e4fe3954-f5f0-6509-5e8f-5c9650687863",
          "name": "[030300100PCE]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointDataPce\":",
                  "                tests[\"Delete Point Data Pce\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "            case \"DeleteWmCalcul\":",
                  "                tests[\"Delete WM_Calcul Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data Pce\"] && tests[\"Delete Acq_Pce Data\"] && tests[\"Delete WM_Calcul Data\"]){",
                  "        tests[\"Delete data Sum up\"]  = true; ",
                  "        postman.setNextRequest(\"[030300100PCE]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePointDataPce\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('05/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('06/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('SGPCETVPEC','SGPCEEVPEC','SGPCETPIL'))\"\r\n      },\r\n       {  \r\n         \"requestId\":\"DeleteWmCalcul\",\r\n         \"requestContent\":\"delete from wm_calcul where wm_calcul.IDOBJECT in ('SGPCECPEC','SGPCECVOL0','SGPCECNEG','SGPCEZPEC','SGPCECZZZ','SGPCECAAZ','MASTER','BIGMASTER','SGPCECORC19') and HORODATE >= TO_DATE('05/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and HORODATE <= TO_DATE('06/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('SGPCETVPEC','SGPCEEVPEC','SGPCETPIL') and jour_gazier= TO_DATE('05/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "407025e0-9e9c-edd5-bffb-7347d49293f6",
          "name": "[030300100PCE]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[030300100PCE]PRO_CAL_03_PCE_TRV_001_SGPCETVPEC_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[030300100PCE]PRO_CAL_03_PCE_TRV_001_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[030300100PCE]Check process cal end\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "}",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170605_PCE_20170605103424_CHR02_SCALA_2-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "4076b21d-ae8d-f0d1-8246-7bf1053d72f1",
          "name": "[030300100PCE]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "       postman.setNextRequest(\"[030300100PCE]PRO-CAL-03 PCE\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[030300100PCE]PRO_CAL_03_PCE_TRV_001_SGPCETVPEC_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "3105f4cb-46e2-24a0-c718-db8e4e41da69",
          "name": "[030300100PCE]PRO-CAL-03 PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 10000);",
                  "    /*setTimeout(function(){}, 10000); */",
                  "    postman.setNextRequest(\"[030300100PCE]Get Processid\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Another PCE LDPBG024 having 22 fathers"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"SGPCETVPEC\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2017-06-05 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"\"}}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "61003c1e-acf0-76a1-34a9-70565a035e11",
          "name": "[030300100PCE]Get Processid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"GetSourceProcessid\":",
                  "                    postman.setEnvironmentVariable(\"[030300100PCE]PRO_CAL_03_PCE_TRV_001_SGPCETVPEC\",sqlResult[i].results[0].SOURCE_PROCESSID);",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030300100PCE]Check process cal end PRO-CAL-03\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"GetSourceProcessid\",\r\n         \"requestContent\":\"select distinct SOURCE_PROCESSID from dmd_calcul where prec_processid in ( select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c31a1ac2-9ac9-e166-0ac7-e512f58cfcf3",
          "name": "[030300100PCE]Check process cal end PRO-CAL-03",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[030300100PCE]PRO_CAL_03_PCE_TRV_001_SGPCETVPEC\");",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    /* 13-07-2017 - as of now the PRO-CAL-02 id_correlation doesn't contain the source_processid of PRO-CAL-03, hence the test is always ko */",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        postman.setNextRequest(\"[030300100PCE]Check data\");",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "",
                  "       postman.setNextRequest(\"[030300100PCE]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = true;",
                  "        postman.setNextRequest(\"[030300100PCE]Check data\");  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[030300100PCE]PRO_CAL_03_PCE_TRV_001_SGPCETVPEC}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8b8f58b5-76a1-eb0d-9c94-8fcb6045e347",
          "name": "[030300100PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckDmdCalcul\":",
                  "                    tests[\"Check Dmd_calcul creation\"] = sqlResult[i].results[0].COUNT == \"4\";",
                  "                    break;",
                  "                case \"CheckWMCalcul\":",
                  "                    tests[\"Check WM_Calcul creation\"] = sqlResult[i].results[0].COUNT == \"4\";",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030300101PCE]PRO-CAL-03 PCE\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >=(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where source_processid in (select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckWMCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from wm_calcul where wm_calcul.IDOBJECT in ('SGPCECPEC') and HORODATE >= TO_DATE('05/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and HORODATE <= TO_DATE('06/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') and child_calculated='SGPCETVPEC'\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a4031b35-2210-4545-f5d8-85ac217909fc",
          "name": "[030300101PCE]PRO-CAL-03 PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 10000);",
                  "    /*setTimeout(function(){}, 10000); */",
                  "    postman.setNextRequest(\"[030300101PCE]Get Processid\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Another PCE LDPBG024 having 22 fathers"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"SGPCEEVPEC\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2017-06-05 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"\"}}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ef88b462-5452-860c-3f4b-7b1da2f3fae9",
          "name": "[030300101PCE]Get Processid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"GetSourceProcessid\":",
                  "                    postman.setEnvironmentVariable(\"[030300100PCE]PRO_CAL_03_PCE_TRV_001_SGPCETVPEC\",sqlResult[i].results[0].SOURCE_PROCESSID);",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030300101PCE]Check process cal end PRO-CAL-03\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"GetSourceProcessid\",\r\n         \"requestContent\":\"select distinct SOURCE_PROCESSID from dmd_calcul where prec_processid in ( select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "f824e399-0659-201f-d26d-f021ecde284f",
          "name": "[030300101PCE]Check process cal end PRO-CAL-03",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[030300100PCE]PRO_CAL_03_PCE_TRV_001_SGPCETVPEC\");",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    /* 13-07-2017 - as of now the PRO-CAL-02 id_correlation doesn't contain the source_processid of PRO-CAL-03, hence the test is always ko */",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        postman.setNextRequest(\"[030300101PCE]Check data\");",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "",
                  "       postman.setNextRequest(\"[030300101PCE]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = true;",
                  "        postman.setNextRequest(\"[030300101PCE]Check data\");  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[030300100PCE]PRO_CAL_03_PCE_TRV_001_SGPCETVPEC}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "40ef1071-6982-5846-ba11-e4684d4d169b",
          "name": "[030300101PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckDmdCalcul\":",
                  "                    tests[\"Check Dmd_calcul creation\"] = sqlResult[i].results[0].COUNT == \"2\";",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >=(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where source_processid in (select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "efa7a696-497e-7fb4-b68d-4869e8cc5b8f",
      "name": "[030301800PCE]PRO_CAL_03_PCE_ORC_018_SGPCETVPEC_SGPCEEVPEC_SGPCECPEC_SGPCEMVPEC_??",
      "description": "0 - Check that the proper number of dmd_calcul is generated due to PCE and process are ok\n1 - Check that the proper number of unit type for PCE T are published\n2 - Check that the proper number of unit type for PCE E are published\n3 - Check that the proper number of unit type for PCE C are published\n3 - Check that the proper number of unit type for PCE M M are published\n3 - Check that the proper number of unit type for PCE M J are published",
      "item": [
        {
          "_postman_id": "cc80b428-9003-a5f8-5292-e7fbe1c02850",
          "name": "[030301800PCE]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointDataPce\":",
                  "                tests[\"Delete Point Data Pce\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data Pce\"] && tests[\"Delete Acq_Pce Data\"]){",
                  "        tests[\"Delete data Sum up\"]  = true; ",
                  "        postman.setNextRequest(\"[030301800PCE]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePointDataPce\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('06/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('SGPCETVPEC','SGPCEEVPEC','SGPCETPIL','SGPCECPEC','SGPCEMVPEC'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('SGPCETVPEC','SGPCEEVPEC','SGPCETPIL') and jour_gazier= TO_DATE('06/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "320ea854-ce25-d9a2-9eee-eea93ed5948e",
          "name": "[030301800PCE]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[030301800PCE]PRO_CAL_03_PCE_ORC_018_SGPCETVPEC_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[030301800PCE]PRO_CAL_03_PCE_ORC_018_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[030301800PCE]Check process cal end\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "}",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170606_PCE_20170606103424_CHR02_SCALA_2-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "b13829ea-2147-284a-8ef2-99caf7357dbd",
          "name": "[030301800PCE]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "       postman.setNextRequest(\"[030301800PCE]PRO-CAL-03 PCE T SGPCETVPEC\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[030301800PCE]PRO_CAL_03_PCE_ORC_018_SGPCETVPEC_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ed85a146-f57b-aac8-f678-16a86e6ed903",
          "name": "[030301800PCE]PRO-CAL-03 PCE T SGPCETVPEC",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 10000);",
                  "    /*setTimeout(function(){}, 10000); */",
                  "    postman.setNextRequest(\"[030301800PCE]Get Processid\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Another PCE LDPBG024 having 22 fathers"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"SGPCETVPEC\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2017-06-06 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"\"}}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "58397ee2-448f-79a3-7a7f-03dac0e06bc5",
          "name": "[030301800PCE]Get Processid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"GetSourceProcessid\":",
                  "                    postman.setEnvironmentVariable(\"[030301800PCE]PRO_CAL_03_PCE_ORC_018_SGPCETVPEC\",sqlResult[i].results[0].SOURCE_PROCESSID);",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301800PCE]Check process cal end PRO-CAL-03\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"GetSourceProcessid\",\r\n         \"requestContent\":\"select distinct SOURCE_PROCESSID from dmd_calcul where prec_processid in ( select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "aa40443d-aacf-18f9-7333-0fd07b7fe887",
          "name": "[030301800PCE]Check process cal end PRO-CAL-03",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[030301800PCE]PRO_CAL_03_PCE_ORC_018_SGPCETVPEC\");",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    /* 13-07-2017 - as of now the PRO-CAL-02 id_correlation doesn't contain the source_processid of PRO-CAL-03, hence the test is always ko */",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        postman.setNextRequest(\"[030301800PCE]Check data PCE T SGPCETVPEC\");",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "",
                  "       postman.setNextRequest(\"[030301800PCE]Check data PCE T SGPCETVPEC\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = false;",
                  "        postman.setNextRequest(\"[030301800PCE]Check data PCE T SGPCETVPEC\");  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[030301800PCE]PRO_CAL_03_PCE_ORC_018_SGPCETVPEC}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "6f798c10-4252-6adb-3da6-4e669786e784",
          "name": "[030301800PCE]Check data PCE T SGPCETVPEC",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckPubPoint\tAZOMOY\":\ttests[\"Check PubPoint\tAZOMOY\t\"] = sqlResult[i].results[0].COUNT == \"3\";                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301501PCE]PRO-CAL-03 PCE\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >=(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where source_processid in (select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      },\r\n      {   \"requestId\":\"CheckPubPointAZOMOY\",\t\"requestContent\":\"select * from PUB_POINT  inner join grandeur on pub_point.uidgrandeur = grandeur.uidgrandeur  where  horodate between TO_DATE('2017-06-01 06:00:00', 'YYYY-MM-DD HH24:MI:SS') and TO_DATE('2017-06-06 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and date_modif >= (sysdate-1/24/30) and\ttype_grandeur like'PCE_SGPCETVPEC_AZOMOY%'\"}\r\n\r\n\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "e0ad7298-4627-3c59-d9e3-0d91054728a0",
          "name": "[030301501PCE]PRO-CAL-03 PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    // wait 10 sec before going to the next step",
                  "    var date = new Date();",
                  "    var curDate = null;",
                  "    do {",
                  "        curDate = new Date();",
                  "    }",
                  "    while (curDate - date < 10000);",
                  "    /*setTimeout(function(){}, 10000); */",
                  "    postman.setNextRequest(\"[030301501PCE]Get Processid\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//Another PCE LDPBG024 having 22 fathers"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_CAL_03/ws",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"calculImpactDto\":{\"idObjet\":\"SGPCETPIL\",\"typeObjet\":\"PCE\",\"typeGestion\":\"T\",\"horodate\":\"2017-06-01 06:00:00\",\"listeHoursSt\":\"06;08;09\",\"typePeriode\":\"H\",\"typeGrandeur\":\"\"}}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a443c11c-6d68-1d6e-2bb2-647e3d5efb2d",
          "name": "[030301501PCE]Get Processid",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"GetSourceProcessid\":",
                  "                    postman.setEnvironmentVariable(\"[030301501PCE]PRO_CAL_03_PCE_ORC_015_SGPCETVPEC\",sqlResult[i].results[0].SOURCE_PROCESSID);",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[030301501PCE]Check process cal end PRO-CAL-03\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"GetSourceProcessid\",\r\n         \"requestContent\":\"select distinct SOURCE_PROCESSID from dmd_calcul where prec_processid in ( select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "1a30a9a7-de47-7604-eee4-884c7151b30f",
          "name": "[030301501PCE]Check process cal end PRO-CAL-03",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[030301501PCE]PRO_CAL_03_PCE_ORC_015_SGPCETVPEC\");",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    /* 13-07-2017 - as of now the PRO-CAL-02 id_correlation doesn't contain the source_processid of PRO-CAL-03, hence the test is always ko */",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        postman.setNextRequest(\"[030301501PCE]Check data\");",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "",
                  "       postman.setNextRequest(\"[030301501PCE]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = false;",
                  "        postman.setNextRequest(\"[030301501PCE]Check data\");  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[030301501PCE]PRO_CAL_03_PCE_ORC_015_SGPCETVPEC}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ff65362e-b92d-273a-604b-55beb80b9482",
          "name": "[030301501PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckDmdCalcul\":",
                  "                    tests[\"Check Dmd_calcul creation\"] = sqlResult[i].results[0].COUNT == \"13\";",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >=(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where source_processid in (select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    }
  ]
}