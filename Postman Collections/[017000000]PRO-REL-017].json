{
  "variables": [],
  "info": {
    "name": "[017000000]PRO-REL-017]",
    "_postman_id": "7e9e016d-093e-9a52-f272-258295680d6f",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "982fbb67-4dee-ca5c-0ef5-3aad8ddcd835",
      "name": "[00019]Delete data",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "if (tests[\"Status code is 200\"]){",
              "    var jsonData = JSON.parse(responseBody);",
              "    var sqlResult = jsonData.sqlResult;",
              "    for(var i= 0; i < sqlResult.length; i++)",
              "    {",
              "        switch (sqlResult[i].requestId) {",
              "            case \"DeletePointData\":",
              "                tests[\"Delete Point Data\"] = true;",
              "                break;",
              "            case \"DeleteReleve\":",
              "                tests[\"Delete Releve Data\"] = true;",
              "                break;",
              "            case \"DeleteReleveRejetee\":",
              "                tests[\"Delete ReleveRejetee Data\"] = true;",
              "                break;",
              "            case \"DeleteReleveSupprimee\":",
              "                tests[\"Delete ReleveSupprimee Data\"] = true;",
              "                break;",
              "            case \"DeleteDmdCalcul\":",
              "                tests[\"Delete DmdCalcul Data\"] = true;",
              "                break;",
              "        }",
              "    }",
              "    if ( tests[\"Delete Point Data\"]  && tests[\"Delete Releve Data\"] && tests[\"Delete ReleveRejetee Data\"] && tests[\"Delete ReleveSupprimee Data\"] && tests[\"Delete DmdCalcul Data\"]){",
              "        tests[\"Delete data Sum up\"] = true; ",
              "        postman.setNextRequest(\"[00019]Insert data\");",
              "    }",
              "    else {",
              "       tests[\"Delete data Sum up\"] = fase; ",
              "       //postman.setNextRequest(null);",
              "    }",
              "}",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from POINT where uidpoint in (select P.UIDPOINT from PWRLINE.POINT P INNER JOIN PWRLINE.GRANDEUR G ON G.UIDGRANDEUR = P.UIDGRANDEUR INNER JOIN PWRLINE.PCE ON PCE.UIDGRANDEURS_OBJET = G.UIDGRANDEURS_OBJET WHERE PCE.IDPCE in('PCEPROTNR2', 'PCEPROTNR1') and P.HORODATE >= TO_DATE('01/09/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and P.HORODATE < TO_DATE('02/09/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteReleve\",\r\n         \"requestContent\":\"delete from releve where uidreleve in (select uidreleve from releve r inner join pce on r.uidpce = pce.UIDPCE where pce.idpce in('PCEPROTNR2', 'PCEPROTNR1'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteReleveRejetee\",\r\n         \"requestContent\":\"delete from releve_rejetee where uidreleve_rejetee in (select uidreleve_rejetee from releve_rejetee r inner join pce on r.uidpce = pce.UIDPCE where pce.idpce in('PCEPROTNR2', 'PCEPROTNR1'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteReleveSupprimee\",\r\n         \"requestContent\":\"delete from releve_supprimee where uidreleve_supprimee in (select uidreleve_supprimee from releve_supprimee r inner join pce on r.uidpce = pce.UIDPCE where pce.idpce in('PCEPROTNR2', 'PCEPROTNR1'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteDmdCalcul\",\r\n         \"requestContent\":\"delete from dmd_calcul where CODE_OBJET in('PCEPROTNR2', 'PCEPROTNR1')\"\r\n      }\r\n   ]\r\n}"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "3ad20772-9708-05c4-b025-b5f23bb57fb0",
      "name": "[00019]Insert data",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "if (tests[\"Status code is 200\"]){",
              "    var jsonData = JSON.parse(responseBody);",
              "    var sqlResult = jsonData.sqlResult;",
              "    for(var i= 0; i < sqlResult.length; i++)",
              "    {",
              "        switch (sqlResult[i].requestId) {",
              "            case \"InsertPointh1\":",
              "                tests[\"Insert Point Datah1\"] = true;",
              "                break;",
              "            case \"InsertPointj1\":",
              "                tests[\"Insert Point Dataj1\"] = true;",
              "                break;",
              "        }",
              "    }",
              "    if ( tests[\"Insert Point Datah1\"] && tests[\"Insert Point Dataj1\"]){",
              "        tests[\"Insert data Sum up\"] = true; ",
              "        postman.setEnvironmentVariable(\"PCEPROTNR2_uidPce\", sqlResult[2].results[0].UIDPCE);",
              "        postman.setEnvironmentVariable(\"PCEPROTNR2_uidVpce\", sqlResult[2].results[0].UIDVPCE);",
              "        postman.setEnvironmentVariable(\"PCEPROTNR1_uidPce\", sqlResult[3].results[0].UIDPCE);",
              "        postman.setEnvironmentVariable(\"PCEPROTNR1_uidVpce\", sqlResult[3].results[0].UIDVPCE);",
              "        //console.log (postman.getEnvironmentVariable(\"PCEPROTNR2_uidPce\"));",
              "        //console.log (postman.getEnvironmentVariable(\"PCEPROTNR2_uidVpce\"));",
              "        postman.setNextRequest(\"[00019]Launch process 1\");",
              "    }",
              "    else {",
              "       tests[\"Delete data Sum up\"] = fase; ",
              "       //postman.setNextRequest(null);",
              "    }",
              "}",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"InsertPointh1\",\r\n         \"requestContent\":\"insert into POINT (UIDPOINT, UIDQUALITE_POINT, UIDGRANDEUR, HORODATE, VALEUR) select ls_seq_point.nextval,QP.UIDQUALITE_POINT,G.uidgrandeur,CAL.JOUR_GAZIER + HJG.HOURS/24,1000 FROM CALENDRIER CAL CROSS JOIN HJG CROSS JOIN PCE CROSS JOIN QUALITE_POINT QP INNER JOIN GRANDEUR G ON PCE.UIDGRANDEURS_OBJET = G.UIDGRANDEURS_OBJET AND G.PAS = 3600 WHERE PCE.IDPCE in('PCEPROTNR2', 'PCEPROTNR1')AND CAL.JOUR_GAZIER + HJG.HOURS/24  >= to_date('2017-09-01 06:00:00', 'YYYY-MM-DD HH24:MI:SS') AND CAL.JOUR_GAZIER + HJG.HOURS/24  < to_date('2017-09-02 06:00:00', 'YYYY-MM-DD HH24:MI:SS') AND QP.libelle = 'AF'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"InsertPointj1\",\r\n         \"requestContent\":\"insert into POINT (UIDPOINT, UIDQUALITE_POINT, UIDGRANDEUR, HORODATE, VALEUR) select ls_seq_point.nextval, QP.UIDQUALITE_POINT, G.uidgrandeur, to_date('2017-09-01 06:00:00', 'YYYY-MM-DD HH24:MI:SS'), 1000 FROM PCE CROSS JOIN QUALITE_POINT QP INNER JOIN GRANDEUR G ON PCE.UIDGRANDEURS_OBJET = G.UIDGRANDEURS_OBJET AND G.PAS = 86400 WHERE PCE.IDPCE in('PCEPROTNR2', 'PCEPROTNR1') AND QP.libelle = 'AF'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"GetInfo\",\r\n         \"requestContent\":\"select pce.uidpce as uidpce, uidvpce from pce inner join vpce on pce.uidpce = vpce.uidpce where pce.idpce = 'PCEPROTNR2'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"GetInfo\",\r\n         \"requestContent\":\"select pce.uidpce as uidpce, uidvpce from pce inner join vpce on pce.uidpce = vpce.uidpce where pce.idpce = 'PCEPROTNR1'\"\r\n      }\r\n   ]\r\n}"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "efb8c61d-a453-67e9-02d6-d7cfb9eae171",
      "name": "[00019]Launch process 1",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "var Response = JSON.parse(responseBody);",
              "",
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "tests[\"Response valide\"] = Response.ProRel017Result.valide === true;",
              "",
              "if (tests[\"Status code is 200\"] && tests[\"Response valide\"]){",
              "        ",
              "       postman.setNextRequest(\"[00019]Launch process 2\");",
              "    }",
              "",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_COMMON_REL/ws/PROREL017",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"ProRel017Request\":{\"releve\":{\"code\":\"PCEPROTNR2\",\"typeReleve\":\"1\",\"vpe\":false,\"typeAppareil\":\"T\",\"nouveauTypeApp\":\"T\",\"utilisateurModif\":\"mourad.minsys@external.grtgaz.com\",\"dateDebInter\":\"2017-09-01T06:00:00.000+0000\",\"dateFinInter\":\"2017-09-01T06:00:00.000+0000\",\"indFinBrutCompt\":1200,\"indFinBrutCorr\":1200,\"indFinCorrigeCorr\":1200,\"indFinBrutAlarme\":1200,\"indFinCorrigeAlarme\":1200,\"poidsFinBrutCompt\":3.0,\"poidsFinBrutCorrecteur\":3.0,\"poidsFinCorrigeCorr\":3.0,\"poidsFinBrutAlarme\":3.0,\"poidsFinCorrigeAlarme\":3.0,\"nbChFinBrutCompt\":5,\"nbChFinBrutCorr\":5,\"nbChFinCorrigeCorr\":5,\"nbChFinBrutAlarme\":5,\"nbChFinCorrigeAlarme\":5,\"temperature\":12.0,\"test2\":{},\"typeForcage\":0,\"uidPce\":{{PCEPROTNR2_uidPce}},\"uidVpce\":{{PCEPROTNR2_uidVpce}}}}}\r\n\r\n"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "02040b82-ee09-2cd0-3385-d28688bea267",
      "name": "[00019]Launch process 2",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "var Response = JSON.parse(responseBody);",
              "",
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "tests[\"Response valide\"] = Response.ProRel017Result.valide === true;",
              "",
              "if (tests[\"Status code is 200\"] && tests[\"Response valide\"]){",
              "        ",
              "    //postman.setEnvironmentVariable(\"uidReleveS\", Response.ProRel017Result.uidReleve);",
              "    //console.log (postman.getEnvironmentVariable(\"uidReleveS\"));",
              "       postman.setNextRequest(\"[00019]Launch process 3\");",
              "    ",
              "    }",
              "",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_COMMON_REL/ws/PROREL017",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"ProRel017Request\":{\"releve\":{\"code\":\"PCEPROTNR2\",\"typeReleve\":\"S\",\"vpe\":false,\"typeAppareil\":\"T\",\"nouveauTypeApp\":\"T\",\"utilisateurModif\":\"mourad.minsys@external.grtgaz.com\",\"dateDebInter\":\"2017-09-01T07:00:00.000+0000\",\"indDebBrutCompt\":1300,\"indDebBrutCorr\":1300,\"indDebCorrigeCorr\":3000,\"indDebBrutAlarme\":1300,\"indDebCorrigeAlarme\":1300,\"dateFinInter\":\"2017-09-01T07:00:00.000+0000\",\"indFinBrutCompt\":1300,\"indFinBrutCorr\":1300,\"indFinCorrigeCorr\":3000,\"indFinBrutAlarme\":1300,\"indFinCorrigeAlarme\":1300,\"poidsFinBrutCompt\":3.0,\"poidsFinBrutCorrecteur\":3.0,\"poidsFinCorrigeCorr\":3.0,\"poidsFinBrutAlarme\":3.0,\"poidsFinCorrigeAlarme\":3.0,\"nbChFinBrutCompt\":5,\"nbChFinBrutCorr\":5,\"nbChFinCorrigeCorr\":5,\"nbChFinBrutAlarme\":5,\"nbChFinCorrigeAlarme\":5,\"deltaBrutCompt\":300,\"deltaBrutCorr\":300,\"deltaCorrigeCorr\":5400,\"deltaBrutAlarme\":300,\"deltaCorrigeAlarme\":300,\"temperature\":12.0,\"coeffCorrTheo\":11.619273877318085,\"coeffCorrReel\":18.0,\"test1\":{},\"test2\":{\"value\":35.45},\"test3\":{},\"test4\":{},\"volTerP\":1000,\"volPecP\":1000,\"typeForcage\":0,\"volumePeriode\":5400,\"uidPce\":{{PCEPROTNR2_uidPce}},\"uidVpce\":{{PCEPROTNR2_uidVpce}}},\"dateFinInterventionRelevePrecedente\":\"2017-09-01T06:00:00.000+0000\"}}\r\n"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "0dba5bcd-25a2-a9b2-5dfd-146969af20ea",
      "name": "[00019]Launch process 3",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "var Response = JSON.parse(responseBody);",
              "",
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "tests[\"Response valide\"] = Response.ProRel017Result.valide === true;",
              "",
              "if (tests[\"Status code is 200\"] && tests[\"Response valide\"]){",
              "        ",
              "    //postman.setEnvironmentVariable(\"uidReleveS\", Response.ProRel017Result.uidReleve);",
              "    //console.log (postman.getEnvironmentVariable(\"uidReleveS\"));",
              "       postman.setNextRequest(\"[00019]Launch process 4\");",
              "    ",
              "    }",
              "",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_COMMON_REL/ws/PROREL017",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"ProRel017Request\":{\"releve\":{\"code\":\"PCEPROTNR2\",\"typeReleve\":\"R\",\"vpe\":false,\"typeAppareil\":\"T\",\"nouveauTypeApp\":\"T\",\"utilisateurModif\":\"mourad.minsys@external.grtgaz.com\",\"dateDebInter\":\"2017-09-01T08:00:00.000+0000\",\"indDebBrutCompt\":1400,\"indDebBrutCorr\":1400,\"indDebCorrigeCorr\":5000,\"indDebBrutAlarme\":1400,\"indDebCorrigeAlarme\":1400,\"dateFinInter\":\"2017-09-01T10:00:00.000+0000\",\"indFinBrutCompt\":1500,\"indFinBrutCorr\":1500,\"indFinCorrigeCorr\":1500,\"indFinBrutAlarme\":1500,\"indFinCorrigeAlarme\":1500,\"poidsFinBrutCompt\":3.0,\"poidsFinBrutCorrecteur\":3.0,\"poidsFinCorrigeCorr\":3.0,\"poidsFinBrutAlarme\":3.0,\"poidsFinCorrigeAlarme\":3.0,\"nbChFinBrutCompt\":5,\"nbChFinBrutCorr\":5,\"nbChFinCorrigeCorr\":5,\"nbChFinBrutAlarme\":5,\"nbChFinCorrigeAlarme\":5,\"deltaBrutCompt\":300,\"deltaBrutCorr\":300,\"deltaCorrigeCorr\":6000,\"deltaBrutAlarme\":300,\"deltaCorrigeAlarme\":300,\"temperature\":12.0,\"coeffCorrTheo\":11.619273877318085,\"coeffCorrReel\":20.0,\"byPass\":200,\"volumeSimule\":300,\"test1\":{\"statut\":\"OK\",\"value\":0.0},\"test2\":{\"statut\":\"KO\",\"value\":41.9},\"test3\":{\"statut\":\"KO\",\"value\":83.33},\"test4\":{\"statut\":\"KO\",\"value\":83.33},\"volTerP\":1000,\"volPecP\":1000,\"typeForcage\":0,\"volumePeriode\":6000,\"uidPce\":{{PCEPROTNR2_uidPce}},\"uidVpce\":{{PCEPROTNR2_uidVpce}}},\"dateFinInterventionRelevePrecedente\":\"2017-09-01T07:00:00.000+0000\"}}\r\n"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "0a8f8a8c-3c01-1979-c79b-cb179cc88a5c",
      "name": "[00019]Launch process 4",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "var Response = JSON.parse(responseBody);",
              "",
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "tests[\"Response valide\"] = Response.ProRel017Result.valide === true;",
              "",
              "if (tests[\"Status code is 200\"] && tests[\"Response valide\"]){",
              "        ",
              "    //postman.setEnvironmentVariable(\"uidReleveS\", Response.ProRel017Result.uidReleve);",
              "    //console.log (postman.getEnvironmentVariable(\"uidReleveS\"));",
              "       postman.setNextRequest(\"[00019]Launch process 5\");",
              "    ",
              "    }",
              "",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_COMMON_REL/ws/PROREL017",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"ProRel017Request\":{\"releve\":{\"code\":\"PCEPROTNR1\",\"typeReleve\":\"1\",\"vpe\":false,\"typeAppareil\":\"A\",\"nouveauTypeApp\":\"A\",\"utilisateurModif\":\"mourad.minsys@external.grtgaz.com\",\"dateDebInter\":\"2017-09-01T06:00:00.000+0000\",\"dateFinInter\":\"2017-09-01T06:00:00.000+0000\",\"indFinCalculatrice\":1200,\"poidsFinIndexCalc\":3.0,\"nbChFinIndCalc\":5,\"pression\":12.0,\"temperature\":13.0,\"test2\":{},\"typeForcage\":0,\"uidPce\":{{PCEPROTNR1_uidPce}},\"uidVpce\":{{PCEPROTNR1_uidVpce}}}}}\r\n\r\n"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "054b3ab3-70a5-1697-d02a-6d4ba2f2f2de",
      "name": "[00019]Launch process 5",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "var Response = JSON.parse(responseBody);",
              "",
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "tests[\"Response valide\"] = Response.ProRel017Result.valide === true;",
              "",
              "if (tests[\"Status code is 200\"] && tests[\"Response valide\"]){",
              "        ",
              "    //postman.setEnvironmentVariable(\"uidReleveS\", Response.ProRel017Result.uidReleve);",
              "    //console.log (postman.getEnvironmentVariable(\"uidReleveS\"));",
              "       postman.setNextRequest(\"[00019]Check data 1\");",
              "    ",
              "    }",
              "",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_COMMON_REL/ws/PROREL017",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"ProRel017Request\":{\"releve\":{\"code\":\"PCEPROTNR1\",\"typeReleve\":\"R\",\"vpe\":false,\"typeAppareil\":\"A\",\"nouveauTypeApp\":\"A\",\"utilisateurModif\":\"mourad.minsys@external.grtgaz.com\",\"dateDebInter\":\"2017-09-01T09:00:00.000+0000\",\"indDebCalculatrice\":1300,\"dateFinInter\":\"2017-09-01T09:00:00.000+0000\",\"indFinCalculatrice\":1400,\"poidsFinIndexCalc\":3.0,\"nbChFinIndCalc\":5,\"deltaIndCalc\":300,\"pression\":12.0,\"temperature\":13.0,\"coeffCorrTheo\":11.57481,\"byPass\":200,\"volumeSimule\":300,\"test2\":{},\"test3\":{},\"test4\":{},\"typeForcage\":0,\"volumePeriode\":300,\"uidPce\":{{PCEPROTNR1_uidPce}},\"uidVpce\":{{PCEPROTNR1_uidVpce}}},\"dateFinInterventionRelevePrecedente\":\"2017-09-01T06:00:00.000+0000\"}}\r\n"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "c954da9a-cf41-1430-7dc8-3f000ba2c250",
      "name": "[00019]Check data 1",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "if (tests[\"Status code is 200\"]){",
              "    var jsonData = JSON.parse(responseBody);",
              "    var sqlResult = jsonData.sqlResult;",
              "    if(sqlResult !== null){",
              "            if(sqlResult[0].results !== null){",
              "                    tests[\"Check Creation Releve\"] = (sqlResult[0].results[0].NBRELEVE == 1 && sqlResult[1].results[0].NBCARACTCOMPTAGE == 1);",
              "                    console.log (sqlResult[0].results[0].NBRELEVE);",
              "                    console.log (sqlResult[1].results[0].NBCARACTCOMPTAGE);",
              "                }",
              "            }",
              "        ",
              "    ",
              "    postman.setNextRequest(\"[00019]Check data 2\");",
              "}",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              ""
            ]
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckPresenceReleve\",\r\n         \"requestContent\":\"select count(1) as nbReleve from releve inner join pce on releve.uidpce = pce.uidpce where pce.idpce = 'PCEPROTNR2' and releve.TYPE_RELEVE = '1'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPresenceCaractComptage\",\r\n         \"requestContent\":\"select count(1) as nbCaractComptage from releve inner join pce on releve.uidpce = pce.uidpce inner join caract_comptage cc on cc.uidreleve = releve.uidreleve where pce.idpce = 'PCEPROTNR2' and releve.TYPE_RELEVE = '1'\"\r\n      }\r\n   ]\r\n}"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "c77727dd-065c-09fa-0cd3-7d4f5af78959",
      "name": "[00019]Check data 2",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "if (tests[\"Status code is 200\"]){",
              "    var jsonData = JSON.parse(responseBody);",
              "    var sqlResult = jsonData.sqlResult;",
              "    if(sqlResult !== null){",
              "            if(sqlResult[0].results !== null){",
              "                    tests[\"Check Creation Releve\"] = (sqlResult[0].results[0].NBRELEVE == 1 && sqlResult[1].results[0].NBCARACTCOMPTAGE == 1);",
              "                    console.log (sqlResult[0].results[0].NBRELEVE);",
              "                    console.log (sqlResult[1].results[0].NBCARACTCOMPTAGE);",
              "                }",
              "            }",
              "        ",
              "    ",
              "   // postman.setNextRequest(\"[010100101FGA]Drop file FGA\");",
              "}",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              ""
            ]
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckPresenceReleve\",\r\n         \"requestContent\":\"select count(1) as nbReleve from releve inner join pce on releve.uidpce = pce.uidpce where pce.idpce = 'PCEPROTNR2' and releve.TYPE_RELEVE = 'S'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPresenceCaractComptage\",\r\n         \"requestContent\":\"select count(1) as nbCaractComptage from releve inner join pce on releve.uidpce = pce.uidpce inner join caract_comptage cc on cc.uidreleve = releve.uidreleve where pce.idpce = 'PCEPROTNR2' and releve.TYPE_RELEVE = 'S'\"\r\n      }\r\n   ]\r\n}"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "9d349c05-7922-4c51-f8cf-9326fecf15b3",
      "name": "[00019]Check data 3",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "if (tests[\"Status code is 200\"]){",
              "    var jsonData = JSON.parse(responseBody);",
              "    var sqlResult = jsonData.sqlResult;",
              "    if(sqlResult !== null){",
              "            if(sqlResult[0].results !== null){",
              "                    tests[\"Check Creation Releve\"] = (sqlResult[0].results[0].NBRELEVE == 1 && sqlResult[1].results[0].NBCARACTCOMPTAGE == 1 && sqlResult[2].results[0].NBDMDCALCUL == 1);",
              "                    console.log (sqlResult[0].results[0].NBRELEVE);",
              "                    console.log (sqlResult[1].results[0].NBCARACTCOMPTAGE);",
              "                    console.log (sqlResult[2].results[0].NBDMDCALCUL);",
              "                }",
              "            }",
              "        ",
              "    ",
              "    postman.setNextRequest(\"[00019]Check data 4\");",
              "}",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              ""
            ]
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckPresenceReleve\",\r\n         \"requestContent\":\"select count(1) as nbReleve from releve inner join pce on releve.uidpce = pce.uidpce where pce.idpce = 'PCEPROTNR2' and releve.TYPE_RELEVE = 'R'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPresenceCaractComptage\",\r\n         \"requestContent\":\"select count(1) as nbCaractComptage from releve inner join pce on releve.uidpce = pce.uidpce inner join caract_comptage cc on cc.uidreleve = releve.uidreleve where pce.idpce = 'PCEPROTNR2' and releve.TYPE_RELEVE = 'R'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckCreationDmdCalcul\",\r\n         \"requestContent\":\"select count(1) as nbDmdCalcul from dmd_calcul where CODE_OBJET = 'PCEPROTNR2'\"\r\n      }\r\n   ]\r\n}"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "d00264ce-4e96-b5dc-28b9-4a4423fe2fc8",
      "name": "[00019]Check data 4",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "if (tests[\"Status code is 200\"]){",
              "    var jsonData = JSON.parse(responseBody);",
              "    var sqlResult = jsonData.sqlResult;",
              "    if(sqlResult !== null){",
              "            if(sqlResult[0].results !== null){",
              "                    tests[\"Check Creation Releve\"] = (sqlResult[0].results[0].NBRELEVE == 1 && sqlResult[1].results[0].NBCARACTCOMPTAGE == 1);",
              "                    console.log (sqlResult[0].results[0].NBRELEVE);",
              "                    console.log (sqlResult[1].results[0].NBCARACTCOMPTAGE);",
              "                }",
              "            }",
              "        ",
              "    ",
              "    postman.setNextRequest(\"[00019]Check data 5\");",
              "}",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              ""
            ]
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckPresenceReleve\",\r\n         \"requestContent\":\"select count(1) as nbReleve from releve inner join pce on releve.uidpce = pce.uidpce where pce.idpce = 'PCEPROTNR1' and releve.TYPE_RELEVE = '1'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPresenceCaractComptage\",\r\n         \"requestContent\":\"select count(1) as nbCaractComptage from releve inner join pce on releve.uidpce = pce.uidpce inner join caract_comptage cc on cc.uidreleve = releve.uidreleve where pce.idpce = 'PCEPROTNR1' and releve.TYPE_RELEVE = '1'\"\r\n      }\r\n   ]\r\n}"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "5ca718c0-6fd5-aa0e-ba71-b6ef09ae2e7d",
      "name": "[00019]Check data 5",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "if (tests[\"Status code is 200\"]){",
              "    var jsonData = JSON.parse(responseBody);",
              "    var sqlResult = jsonData.sqlResult;",
              "    if(sqlResult !== null){",
              "            if(sqlResult[0].results !== null){",
              "                    tests[\"Check Creation Releve\"] = (sqlResult[0].results[0].NBRELEVE == 1 && sqlResult[1].results[0].NBCARACTCOMPTAGE == 1 && sqlResult[2].results[0].NBDMDCALCUL == 1);",
              "                    console.log (sqlResult[0].results[0].NBRELEVE);",
              "                    console.log (sqlResult[1].results[0].NBCARACTCOMPTAGE);",
              "                    console.log (sqlResult[2].results[0].NBDMDCALCUL);",
              "                }",
              "            }",
              "        ",
              "    ",
              "    postman.setNextRequest(\"[00019]Check data 4\");",
              "}",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              ""
            ]
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckPresenceReleve\",\r\n         \"requestContent\":\"select count(1) as nbReleve from releve inner join pce on releve.uidpce = pce.uidpce where pce.idpce = 'PCEPROTNR1' and releve.TYPE_RELEVE = 'R'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPresenceCaractComptage\",\r\n         \"requestContent\":\"select count(1) as nbCaractComptage from releve inner join pce on releve.uidpce = pce.uidpce inner join caract_comptage cc on cc.uidreleve = releve.uidreleve where pce.idpce = 'PCEPROTNR1' and releve.TYPE_RELEVE = 'R'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckCreationDmdCalcul\",\r\n         \"requestContent\":\"select count(1) as nbDmdCalcul from dmd_calcul where CODE_OBJET = 'PCEPROTNR1'\"\r\n      }\r\n   ]\r\n}"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "3fb8c415-654c-1e4a-87b6-bc7b9e8ff94e",
      "name": "[00019]Launch process copy",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "function pausecomp(millis)",
              "         {",
              "          var date = new Date();",
              "          var curDate = null;",
              "          do { curDate = new Date(); }",
              "          while(curDate-date < millis);",
              "        }",
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "if (tests[\"Status code is 200\"]){",
              "        ",
              "        ",
              "        pausecomp(2000);",
              "       //postman.setNextRequest(\"[00019]Check data\");",
              "    }",
              "",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_COMMON_REL/ws/PROREL017",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"ProRel017Request\":{\"releve\":{\"code\":\"PCEPROTNR2\",\"typeReleve\":\"1\",\"vpe\":false,\"typeAppareil\":\"T\",\"nouveauTypeApp\":\"T\",\"utilisateurModif\":\"mourad.minsys@external.grtgaz.com\",\"dateDebInter\":\"2017-09-01T06:00:00.000+0000\",\"dateFinInter\":\"2017-09-01T06:00:00.000+0000\",\"indFinBrutCompt\":1200,\"indFinBrutCorr\":1200,\"indFinCorrigeCorr\":1200,\"indFinBrutAlarme\":1200,\"indFinCorrigeAlarme\":1200,\"poidsFinBrutCompt\":3.0,\"poidsFinBrutCorrecteur\":3.0,\"poidsFinCorrigeCorr\":3.0,\"poidsFinBrutAlarme\":3.0,\"poidsFinCorrigeAlarme\":3.0,\"nbChFinBrutCompt\":5,\"nbChFinBrutCorr\":5,\"nbChFinCorrigeCorr\":5,\"nbChFinBrutAlarme\":5,\"nbChFinCorrigeAlarme\":5,\"temperature\":12.0,\"test2\":{},\"typeForcage\":0,\"uidPce\":\"30513\",\"uidVpce\":\"182300\"}}}\r\n"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "a4aa565d-b547-662c-4755-1e4fbf183343",
      "name": "[00019]Launch process copy",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "function pausecomp(millis)",
              "         {",
              "          var date = new Date();",
              "          var curDate = null;",
              "          do { curDate = new Date(); }",
              "          while(curDate-date < millis);",
              "        }",
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "",
              "if (tests[\"Status code is 200\"]){",
              "        ",
              "        ",
              "        pausecomp(2000);",
              "       //postman.setNextRequest(\"[00019]Check data\");",
              "    }",
              "",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_COMMON_REL/ws/PROREL017",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"ProRel017Request\":{\"releve\":{\"code\":\"PCEPROTNR2\",\"typeReleve\":\"1\",\"vpe\":false,\"typeAppareil\":\"T\",\"nouveauTypeApp\":\"T\",\"utilisateurModif\":\"mourad.minsys@external.grtgaz.com\",\"dateDebInter\":\"2017-09-01T06:00:00.000+0000\",\"dateFinInter\":\"2017-09-01T06:00:00.000+0000\",\"indFinBrutCompt\":1200,\"indFinBrutCorr\":1200,\"indFinCorrigeCorr\":1200,\"indFinBrutAlarme\":1200,\"indFinCorrigeAlarme\":1200,\"poidsFinBrutCompt\":3.0,\"poidsFinBrutCorrecteur\":3.0,\"poidsFinCorrigeCorr\":3.0,\"poidsFinBrutAlarme\":3.0,\"poidsFinCorrigeAlarme\":3.0,\"nbChFinBrutCompt\":5,\"nbChFinBrutCorr\":5,\"nbChFinCorrigeCorr\":5,\"nbChFinBrutAlarme\":5,\"nbChFinCorrigeAlarme\":5,\"temperature\":12.0,\"test2\":{},\"typeForcage\":0,\"uidPce\":\"30513\",\"uidVpce\":\"182300\"}}}\r\n"
        },
        "description": ""
      },
      "response": []
    }
  ]
}