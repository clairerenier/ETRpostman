{
  "variables": [],
  "info": {
    "name": "Template",
    "_postman_id": "2b40db85-1b71-9c15-625d-53cf70a4a7c2",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "419d5ec1-fa9d-d4e9-c60f-8abeb071dd00",
      "name": "Check process cal end",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "if (tests[\"Status code is 200\"]){",
              "    var jsonData = JSON.parse(responseBody);",
              "    if (jsonData.statusProcess === \"2\"){",
              "        tests[\"Check process cal end\"] = false;",
              "        //postman.setNextRequest(null);",
              "    }",
              "    else if (jsonData.statusProcess === \"4\"){",
              "       tests[\"Check process cal end\"] = true; ",
              "       postman.setNextRequest(\"[011102400FGA]Check data\");",
              "    }",
              "    else {",
              "        tests[\"Check process cal end\"] = false;",
              "        //postman.setNextRequest(null);  ",
              "    }",
              "}",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              ""
            ]
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "var sourcprocessid = postman.getEnvironmentVariable(\"[011102401]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId\");",
              "console.log(sourcprocessid);"
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[011102400FGA]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "38723207-4de1-d5f8-328d-2195f3c4531b",
      "name": "Run sql queries",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "if (tests[\"Status code is 200\"]){",
              "    var jsonData = JSON.parse(responseBody);",
              "    var sqlResult = jsonData.sqlResult;",
              "    if(sqlResult != null){",
              "        for(var i= 0; i < sqlResult.length; i++)",
              "        {",
              "            if(sqlResult[i].results != null){",
              "                switch (sqlResult[i].requestId) {",
              "                case \"CheckStatutOrcProcessus\":",
              "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
              "                    break;",
              "                case \"CheckStatutOrcEtape\":",
              "                    tests[\"Check status in ORC_ETAPE\"] = sqlResult[i].results[0].ID_STATUT_ETAPE == \"2\";",
              "                    break;",
              "                case \"CheckStatutOrcEtapeMessage\":",
              "                    tests[\"Check message in ORC_ETAPE\"] = sqlResult[i].results[0].COUNT == \"1\";",
              "                    break;",
              "                case \"CheckAcqPceConservee\":",
              "                    tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"0\";",
              "                    break;",
              "                case \"CheckStockAcquisitionForAcq\":",
              "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
              "                    break;   ",
              "                case \"CheckOrcProcessusReport\":",
              "                    tests[\"Check Report of ORC_001 in ORC_ETAPES\"] = sqlResult[i].results[0].COUNT == \"1\";",
              "                    break; ",
              "                }",
              "            }",
              "        }",
              "    }",
              "    postman.setNextRequest(\"[010100101FGA]Drop file FGA\");",
              "}",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              ""
            ]
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "//postman.setNextRequest(null);",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStatutOrcEtape\",\r\n         \"requestContent\":\"select id_statut_etape from orc_etapes where id_processus='{{[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}' and id_ref_etape='ACG_01_ORC_001'\"\r\n      },\r\n                  {  \r\n         \"requestId\":\"CheckStatutOrcEtapeMessage\",\r\n         \"requestContent\":\"select count(*) as COUNT from orc_etapes where id_processus='{{[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}' and resultat_etape like '%/Enveloppe_VICTOR_FGA/ :  Child element Publication {} at position 1 is unexpected%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('FGACRETNR1') and jour_gazier= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckOrcProcessusReport\",\r\n         \"requestContent\":\"select count(*) AS COUNT from orc_etapes where id_processus='{{[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}' and ( resultat_etape like '%Contrôler la validité du fichier en entrée%' /*Entête*/ and (resultat_etape like '%Heure de début de traitement : '||TO_char(sysdate,'DD/MM/YYYY HH24')||'%' or resultat_etape like '%Heure de début de traitement : '||TO_char(sysdate-1/24,'DD/MM/YYYY HH24')||'%') /*heure de début de traitement*/ and ( resultat_etape like '%Heure de fin de traitement : '||TO_char(sysdate,'DD/MM/YYYY HH24')||'%' or resultat_etape like '%Heure de fin de traitement : '||TO_char((sysdate+1/24),'DD/MM/YYYY HH24')||'%') /*heure de fin de traitement*/ and resultat_etape like '%Fichier : H20170223_FGA_20170223105012_CHR02_SCALA_19-1F.xml%' /* nom fichier*/ and resultat_etape like '%Statut : KO%' /*statut*/ and resultat_etape like '%/Enveloppe_VICTOR_FGA/ :  Child element Publication {} at position 1 is unexpected%' /*error message*/)\"\r\n      }\r\n   ]\r\n}"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "2e7a7d57-e9d4-6756-74f9-1ac031273b97",
      "name": "Drop simple file",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "if (tests[\"Status code is 200\"]){",
              "    var jsonData = JSON.parse(responseBody);",
              "    postman.setEnvironmentVariable(\"[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid\",jsonData.processId);",
              "    postman.setEnvironmentVariable(\"[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_sourceProcessId\",jsonData.sourceProcessId);",
              "    ",
              "    if (jsonData.statusProcess === \"2\"){",
              "        tests[\"Check drop file FGA\"] = false;",
              "        //postman.setNextRequest(null);",
              "    }",
              "    else if (jsonData.statusProcess === \"4\"){",
              "       tests[\"Check drop file FGA\"] = true; ",
              "       postman.setNextRequest(\"[010100100FGA]Check data\");",
              "    }",
              "    else {",
              "        tests[\"Check drop file FGA\"] = false;",
              "        //postman.setNextRequest(null);",
              "}",
              "}",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170223_FGA_20170223105012_CHR02_SCALA_19-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "54a64d4c-103d-6a75-a855-7f947f59f4c9",
      "name": "Drop multiple files",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "if (tests[\"Status code is 200\"]){",
              "    var jsonData = JSON.parse(responseBody);",
              "    //postman.setEnvironmentVariable(\"[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid\",jsonData.processId);",
              "    //postman.setEnvironmentVariable(\"[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_sourceProcessId\",jsonData.sourceProcessId);",
              "    ",
              "    if (jsonData.statusProcess === \"2\"){",
              "        tests[\"Check drop file FGA\"] = false;",
              "        //postman.setNextRequest(null);",
              "    }",
              "    else if (jsonData.statusProcess === \"4\"){",
              "       tests[\"Check drop file FGA\"] = true; ",
              "       postman.setNextRequest(\"[010100100FGA]Check data\");",
              "    }",
              "    else {",
              "        tests[\"Check drop file FGA\"] = false;",
              "        //postman.setNextRequest(null);",
              "}",
              "}",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ ETR_FRMK_ADMIN/ws/tests/multipleFiles/",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"fileRequest\":[{\"fileId\":\"fichier1\",\"alias\":\"PRO_ACG_01\",\"fileName\":\"fichier1.xml\"},{\"fileId\":\"fichier2\",\"alias\":\"PRO_ACG_01\",\"fileName\":\"fichier2.xml\"}],\"wait\":\"true\",\"waitTimeout\":\"90\"}"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "7f68c9f8-dc7f-8c12-7696-ff197bcede73",
      "name": "Call unique processes",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "if (tests[\"Status code is 200\"]){",
              "    var jsonData = JSON.parse(responseBody);",
              "    //postman.setEnvironmentVariable(\"[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid\",jsonData.processId);",
              "    //postman.setEnvironmentVariable(\"[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_sourceProcessId\",jsonData.sourceProcessId);",
              "    ",
              "    if (jsonData.statusProcess === \"2\"){",
              "        tests[\"Check drop file FGA\"] = false;",
              "        //postman.setNextRequest(null);",
              "    }",
              "    else if (jsonData.statusProcess === \"4\"){",
              "       tests[\"Check drop file FGA\"] = true; ",
              "       postman.setNextRequest(\"[010100100FGA]Check data\");",
              "    }",
              "    else {",
              "        tests[\"Check drop file FGA\"] = false;",
              "        //postman.setNextRequest(null);",
              "}",
              "}",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/process/",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"alias\":\"PRO_ACG_17\",\"params\":[{\"ATT_NAME\":\"HORODATE\",\"ATT_VALUE\":\"2017-08-02 06:00:00\",\"ATT_TYPE\":\"S\"},{\"ATT_NAME\":\"TYPE\",\"ATT_VALUE\":\"PCE\",\"ATT_TYPE\":\"S\"}]}"
        },
        "description": "param table is optional, but can be sued to trigger  PRO_ACG_17 on a specific date for example"
      },
      "response": []
    },
    {
      "_postman_id": "aebf787f-3649-fd91-54ef-90e94374387c",
      "name": "Call unique processes copy",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "if (tests[\"Status code is 200\"]){",
              "    var jsonData = JSON.parse(responseBody);",
              "    //postman.setEnvironmentVariable(\"[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid\",jsonData.processId);",
              "    //postman.setEnvironmentVariable(\"[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_sourceProcessId\",jsonData.sourceProcessId);",
              "    ",
              "    if (jsonData.statusProcess === \"2\"){",
              "        tests[\"Check drop file FGA\"] = false;",
              "        //postman.setNextRequest(null);",
              "    }",
              "    else if (jsonData.statusProcess === \"4\"){",
              "       tests[\"Check drop file FGA\"] = true; ",
              "       postman.setNextRequest(\"[010100100FGA]Check data\");",
              "    }",
              "    else {",
              "        tests[\"Check drop file FGA\"] = false;",
              "        //postman.setNextRequest(null);",
              "}",
              "}",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/process/",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"alias\":\"PRO_ACG_17\",\"params\":[{\"ATT_NAME\":\"HORODATE\",\"ATT_VALUE\":\"2017-08-02 06:00:00\",\"ATT_TYPE\":\"S\"},{\"ATT_NAME\":\"TYPE\",\"ATT_VALUE\":\"PCE\",\"ATT_TYPE\":\"S\"}]}"
        },
        "description": "param table is optional, but can be sued to trigger  PRO_ACG_17 on a specific date for example"
      },
      "response": []
    }
  ]
}