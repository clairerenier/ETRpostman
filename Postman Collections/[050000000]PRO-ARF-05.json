{
  "variables": [],
  "info": {
    "name": "[050000000]PRO-ARF-05",
    "_postman_id": "e8e30546-125f-ded9-eb17-89d645e36e81",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "5ddfe1a6-752b-8b6e-0590-2a6bddcf6500",
      "name": "[051001300]PRO_ARF_05_ARF_013_PCE_SGPCEEVPEC",
      "description": "",
      "item": [
        {
          "_postman_id": "3c6b1d9b-c7f9-a26f-37e6-c4b3b88f46d9",
          "name": "[050501300PCE]Drop file BT_Fiche",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[050501300PCE]PRO_ARF_05_PCE_ARF_013_SGPCETVPEC_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[050501300PCE]PRO_ARF_05_PCE_ARF_013_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[030300100PCE]Check process cal end\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "}",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"BASET\",\"fileName\":\"J20151222_BASET_20151222093500_REF21_ETR.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "4b6aa93f-7cc9-5a58-5efc-1efc6f9fa7af",
          "name": "[030300101PCE]Check data copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckDmdCalcul\":",
                  "                    tests[\"Check Dmd_calcul creation\"] = sqlResult[i].results[0].COUNT == \"2\";",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >=(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where source_processid in (select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "781dba56-451c-61b2-5be0-6e182a690dcb",
      "name": "[051001500]PRO_ARF_05_ARF_015_PCE_SGPCEEVPEC to do",
      "description": "",
      "item": [
        {
          "_postman_id": "bec02f31-7ca6-b4ce-2933-43612cb4ce64",
          "name": "[030300100PCE]Drop file PCE copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[030300100PCE]PRO_CAL_03_PCE_TRV_001_SGPCETVPEC_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[030300100PCE]PRO_CAL_03_PCE_TRV_001_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[030300100PCE]Check process cal end\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "}",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "description": "",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170605_PCE_20170605103424_CHR02_SCALA_2-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "946d9200-8eef-818e-68d3-31dd5217803e",
          "name": "[030300101PCE]Check data copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckDmdCalcul\":",
                  "                    tests[\"Check Dmd_calcul creation\"] = sqlResult[i].results[0].COUNT == \"2\";",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "description": "",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >=(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where source_processid in (select ID_CORRELATION from orc_processus where code_technique_processus='PRO_CAL_03' and date_lancement_processus >(sysdate-1/24/4) order by date_lancement_processus desc fetch first 1 rows only)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "78954b4b-edc5-cb66-da1c-8d78e6c53e4e",
          "name": "[030300100PCE]Delete data copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointDataPce\":",
                  "                tests[\"Delete Point Data Pce\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "            case \"DeleteWmCalcul\":",
                  "                tests[\"Delete WM_Calcul Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data Pce\"] && tests[\"Delete Acq_Pce Data\"] && tests[\"Delete WM_Calcul Data\"]){",
                  "        tests[\"Delete data Sum up\"]  = true; ",
                  "        postman.setNextRequest(\"[030300100PCE]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "description": "",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePointDataPce\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('05/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('06/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('SGPCETVPEC','SGPCEEVPEC','SGPCETPIL'))\"\r\n      },\r\n       {  \r\n         \"requestId\":\"DeleteWmCalcul\",\r\n         \"requestContent\":\"delete from wm_calcul where wm_calcul.IDOBJECT in ('SGPCECPEC','SGPCECVOL0','SGPCECNEG','SGPCEZPEC','SGPCECZZZ','SGPCECAAZ','MASTER','BIGMASTER','SGPCECORC19') and HORODATE >= TO_DATE('05/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and HORODATE <= TO_DATE('06/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('SGPCETVPEC','SGPCEEVPEC','SGPCETPIL') and jour_gazier= TO_DATE('05/06/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    }
  ]
}