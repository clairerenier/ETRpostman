{
  "variables": [],
  "info": {
    "name": "[010000000]PRO-ACG-01",
    "_postman_id": "dfdaa9fc-6991-9322-f297-c18be0096d75",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "396c3b69-1e90-8c7e-971b-8e30711b6996",
      "name": "[011102400FGA]PRO_ACG_11_FGA_ACG_024_C220 et SGGU2103Z",
      "description": "o  0 - First file to generate data from scratch\r\n§  Expeted result : all hours set to OUI\r\no  1-First file dropped to generate data\r\n§  Expected result : everything is saved (all hours set to OUI)\r\no  2  Same file dropped with the following changes : \r\n"  METMOY 8h has its value changed (89,63 to 90.63)\r\n"  Nothing changed for 9AM\r\no  3  Same file dropped with the following changes : \r\n"  DENMOY 7h quality will be AF (M before)\r\n"  METMOY 8h has its value changed (90,63 to 91.63)\r\n"  Nothing changed for 9AM\r\n§  Expected result : 7 and 8AM whould be set to OUI , and NON for 9h\r\no  4  Same file dropped where :\r\n"  9AM is changed PCSMOY will be CS (quality = to the previous one)\r\n"  METMOY 8h has its value changed (91,63 to 89.63)\r\n§  Expected result : all set to NON except 8AM\r\no  5 - Same file dropped where only 8AM is changed PCSMOY from AF to CS (quality <)\r\n§  Expected result : all set to NON\r\no  6  Same file dropped but PCSMOY to CS for 8h\r\n§  Expected result : 8AM set to OUI\r\n\r\no  7  Run first file\r\n"  PCSMOY is set to 6/7/8AM AF, rest are set to CS\r\n"  Expected results : everything set to OUI\r\no  8  Run second file\r\n"  PCSMOY is unchanged for 6§7§8, for rest of the hours, they are set to AF\r\n"  Expected results everything set to OUI except 6/7/8AM",
      "item": [
        {
          "_postman_id": "8bb0128a-3295-a8f9-b522-3069d973e9f4",
          "name": "[011102400FGA]Delete and Update data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "for(var i= 0; i < sqlResult.length; i++)",
                  "{",
                  "    switch (sqlResult[i].requestId) {",
                  "        case \"DeletePointData\":",
                  "            tests[\"Delete Point Data\"] = true;",
                  "            break;",
                  "        case \"DeleteAcqFgaData\":",
                  "            tests[\"Delete Acq_Fga Data\"] = true;",
                  "            break;",
                  "        case \"DeletePubPointJmnFgaData\":",
                  "            tests[\"Delete Pub_Point_Jmn_Fga Data\"] = true;",
                  "            break;",
                  "    }",
                  "}",
                  "if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Fga Data\"] && tests[\"Delete Pub_Point_Jmn_Fga Data\"]){",
                  "    tests[\"Delete data Sum up\"] = true; ",
                  "    postman.setNextRequest(\"[011102400FGA]Drop file FGA\");",
                  "}",
                  "else {",
                  "   tests[\"Delete data Sum up\"] = fase; ",
                  "   //postman.setNextRequest(null);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('23/02/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idfga in ('C220'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqFgaData\",\r\n         \"requestContent\":\"delete from acq_fga_conservee where uidacq_fga_conservee in (select uidacq_fga_conservee from acq_fga_conservee where code_acquisition in ('C220'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeletePubPointJmnFgaData\",\r\n         \"requestContent\":\"delete from pub_point_jmn_fga where uidgrandeur in (select pp.uidgrandeur from pub_point_jmn_fga pp, fga p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idfga='C220' and horodate between TO_DATE('2017-02-23 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-24 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "193ecbdb-362c-6baa-cc18-3fd46c02c21f",
          "name": "[011102400FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011102400FGA]PRO_ACG_11_FGA_ACG_024_C220_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011102400FGA]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file FGA\"] = true; ",
                  "   postman.setNextRequest(\"[011102400FGA]Check process cal end\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170223_FGA_20170223105000_CHR02_SCALA_18-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7c0e0dde-315f-b18c-6935-d008e3922351",
          "name": "[011102400FGA]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check process cal end\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check process cal end\"] = true; ",
                  "   postman.setNextRequest(\"[011102400FGA]Check data\");",
                  "}",
                  "else {",
                  "    tests[\"Check process cal end\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var sourcprocessid = postman.getEnvironmentVariable(\"[011102401]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId\");",
                  "console.log(sourcprocessid);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[011102400FGA]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "67df8a2b-5ab2-9d3b-6f37-c89a6b9a707b",
          "name": "[011102400FGA]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult != null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results != null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckAcqFgaConservee\":",
                  "                tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisition2\":",
                  "                ",
                  "                if (sqlResult[i].results.length ==4){",
                  "                    if (sqlResult[i].results[0].STOCKAGE==\"OUI\" && sqlResult[i].results[1].STOCKAGE==\"OUI\" && sqlResult[i].results[2].STOCKAGE==\"OUI\" && sqlResult[i].results[3].STOCKAGE==\"OUI\"){",
                  "                        tests[\"Check Stock_acquisition2\"]=true;",
                  "                    }",
                  "                    else{",
                  "                        tests[\"Check Stock_acquisition2\"]=false;",
                  "                    }",
                  "                }",
                  "                else{",
                  "                     tests[\"Check Stock_acquisition2\"]=false;",
                  "                }",
                  "                break;",
                  "            case \"CheckDmdCalcul\":",
                  "                tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionCal\":",
                  "                tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"130\";",
                  "                break;",
                  "",
                  "            case \"CheckStockAcquisitionForAcq\":",
                  "                tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;   ",
                  "            case \"CheckStockAcquisitionForCal\":",
                  "                tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break; ",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011102401FGA]Delete and Update data\");",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011102400FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('C220') and jour_gazier= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011102400FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select date_mesure,stockage from stock_acquisition2 where processid in ('{{[011102400FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}') group by date_mesure,stockage order by date_mesure asc\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where prec_processid='{{[011102400FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{[011102400FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('24/02/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idfga in ('C220') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[011102400FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{[011102400FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}')\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "4e28a05a-8c37-4ffb-2c22-e0bae3d97d67",
          "name": "[011102401FGA]Delete and Update data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "for(var i= 0; i < sqlResult.length; i++)",
                  "{",
                  "    switch (sqlResult[i].requestId) {",
                  "        case \"UpdatePointData\":",
                  "            tests[\"Update Point Data\"] = true;",
                  "            break;",
                  "        case \"DeletePointData\":",
                  "            tests[\"Delete Point Data\"] = true;",
                  "            break;",
                  "    }",
                  "}",
                  "if (tests[\"Update Point Data\"] && tests[\"Delete Point Data\"] ){",
                  "    tests[\"Delete data Sum up\"] = true; ",
                  "    postman.setNextRequest(\"[011102401FGA]Drop file FGA\");",
                  "}",
                  "else {",
                  "   tests[\"Delete data Sum up\"] = fase; ",
                  "   //postman.setNextRequest(null);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"UpdatePointData\",\r\n         \"requestContent\":\"update point set uidqualite_point='15', valeur='0' where uidpoint in (select po.uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('24/02/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') and Idfga in ('C220'))\"\r\n      },\r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('23/02/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('23/02/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idfga in ('C220'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "9a7dff24-2295-7f98-e9da-6ee7c275449d",
          "name": "[011102401FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011102401FGA]PRO_ACG_11_FGA_ACG_024_C220_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011102401FGA]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file FGA\"] = true; ",
                  "   postman.setNextRequest(\"[011102401FGA]Check process cal end\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170223_FGA_20170223105002_CHR02_SCALA_18-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ed238719-2929-ed0b-511d-31a4e2c312ad",
          "name": "[011102401FGA]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check process cal end\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check process cal end\"] = true; ",
                  "   postman.setNextRequest(\"[011102401FGA]Check data\");",
                  "}",
                  "else {",
                  "    tests[\"Check process cal end\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[011102401FGA]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c61ffff0-b2bc-a792-41fa-46adb3b20f98",
          "name": "[011102401FGA]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult != null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results != null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckAcqFgaConservee\":",
                  "                tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisition2\":",
                  "                    tests[\"Check STOCK_ACQUISITION2\"] = sqlResult[i].results[0].COUNT == \"5\";",
                  "                break;",
                  "            case \"CheckDmdCalcul\":",
                  "                tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionCal\":",
                  "                tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"130\";",
                  "                break;",
                  "            case \"CheckPubPointJmnFgaData\":",
                  "                tests[\"Check PUB_POINT_JMN_FGA data\"] = sqlResult[i].results[0].COUNT == \"260\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionForAcq\":",
                  "                tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;   ",
                  "            case \"CheckStockAcquisitionForCal\":",
                  "                tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break; ",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011102402FGA]Drop file FGA\");",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011102401FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('C220') and jour_gazier= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and  processid='{{[011102401FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"SELECT stockage,count(*) as COUNT from (select date_mesure,stockage from stock_acquisition2 where processid in ('{{[011102401FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}') and stockage='OUI' group by nom_source,date_mesure,processid,pas_chr,stockage order by date_mesure, processid desc) group by stockage order by stockage\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where prec_processid='{{[011102401FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{[011102401FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('24/02/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idfga in ('C220') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPubPointJmnFgaData\",\r\n         \"requestContent\":\"select count(*) as COUNT from PUB_POINT_jmn_fga pp  inner join grandeur on pp.uidgrandeur = grandeur.uidgrandeur  where  horodate between TO_DATE('2017-02-23 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-24 05:00:00', 'YYYY-MM-DD HH24:MI:SS')  and idgrandeur like '%C220%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[011102401FGA]PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{[011102401FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}')\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7d8041f4-397b-ef7f-be98-291e931f8d9a",
          "name": "[011102402FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011102402FGA]PRO_ACG_11_FGA_ACG_024_C220_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011102402FGA]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file FGA\"] = true; ",
                  "   postman.setNextRequest(\"[011102402FGA]Check process cal end\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170223_FGA_20170223105003_CHR02_SCALA_18-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "1234cc9a-78d6-48e1-483b-631746dc6272",
          "name": "[011102402FGA]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check process cal end\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check process cal end\"] = true; ",
                  "   postman.setNextRequest(\"[011102402FGA]Check data\");",
                  "}",
                  "else {",
                  "    tests[\"Check process cal end\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var sourcprocessid = postman.getEnvironmentVariable(\"[011102401]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId\");",
                  "console.log(sourcprocessid);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[011102402FGA]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "f24cd023-b15c-f938-1435-d28408efc3bd",
          "name": "[011102402FGA]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult != null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results != null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckAcqFgaConservee\":",
                  "                tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisition2\":",
                  "                ",
                  "                if (sqlResult[i].results.length ==4){",
                  "                    if (sqlResult[i].results[0].STOCKAGE==\"OUI\" && sqlResult[i].results[1].STOCKAGE==\"OUI\" && sqlResult[i].results[2].STOCKAGE==\"OUI\" && sqlResult[i].results[3].STOCKAGE==\"NON\"){",
                  "                        tests[\"Check Stock_acquisition2\"]=true;",
                  "                    }",
                  "                    else{",
                  "                        tests[\"Check Stock_acquisition2\"]=false;",
                  "                    }",
                  "                }",
                  "                else{",
                  "                     tests[\"Check Stock_acquisition2\"]=false;",
                  "                }",
                  "                break;",
                  "            case \"CheckDmdCalcul\":",
                  "                tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionCal\":",
                  "                tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"130\";",
                  "                break;",
                  "            case \"CheckPubPointJmnFgaData\":",
                  "                tests[\"Check PUB_POINT_JMN_FGA data\"] = sqlResult[i].results[0].COUNT == \"390\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionForAcq\":",
                  "                tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;   ",
                  "            case \"CheckStockAcquisitionForCal\":",
                  "                tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break; ",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011102403FGA]Update data\");",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011102402FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('C220') and jour_gazier= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011102402FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select date_mesure,stockage from stock_acquisition2 where processid in ('{{[011102402FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}') group by date_mesure,stockage order by date_mesure asc\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where prec_processid='{{[011102402FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{[011102402FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('24/02/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idfga in ('C220') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPubPointJmnFgaData\",\r\n         \"requestContent\":\"select count(*) as COUNT from PUB_POINT_jmn_fga pp  inner join grandeur on pp.uidgrandeur = grandeur.uidgrandeur  where  horodate between TO_DATE('2017-02-23 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-24 05:00:00', 'YYYY-MM-DD HH24:MI:SS')  and idgrandeur like '%C220%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[011102402FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{[011102402FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}')\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8ae46bc8-c8df-5368-81f3-6bc0194f79ec",
          "name": "[011102403FGA]Update data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "for(var i= 0; i < sqlResult.length; i++)",
                  "{",
                  "    switch (sqlResult[i].requestId) {",
                  "        case \"UpdatePointData\":",
                  "            tests[\"Update Point Data\"] = true;",
                  "            break;",
                  "    }",
                  "}",
                  "if (tests[\"Update Point Data\"]){",
                  "    tests[\"Update data Sum up\"] = true; ",
                  "    postman.setNextRequest(\"[011102403FGA]Drop file FGA\");",
                  "}",
                  "else {",
                  "   tests[\"Delete data Sum up\"] = fase; ",
                  "   //postman.setNextRequest(null);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"UpdatePointData\",\r\n         \"requestContent\":\"update point set uidqualite_point='15', valeur='0' where uidpoint in (select po.uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('23/02/2017 07:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('23/02/2017 07:00:00','DD/MM/YYYY HH24:MI:SS') and Idfga in ('C220') and (type_grandeur in ('DENMOY')))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8828ad58-0f1e-bb73-71aa-5e130f006d14",
          "name": "[011102403FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011102403FGA]PRO_ACG_11_FGA_ACG_024_C220_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011102403FGA]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file FGA\"] = true; ",
                  "   postman.setNextRequest(\"[011102403FGA]Check process cal end\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170223_FGA_20170223105004_CHR02_SCALA_18-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "db0f207e-08d7-2389-f12c-03df81dcb0ec",
          "name": "[011102403FGA]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check process cal end\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check process cal end\"] = true; ",
                  "   postman.setNextRequest(\"[011102403FGA]Check data\");",
                  "}",
                  "else {",
                  "    tests[\"Check process cal end\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var sourcprocessid = postman.getEnvironmentVariable(\"[011102401]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId\");",
                  "console.log(sourcprocessid);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[011102403FGA]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "91b97d6c-8c7e-0121-2a21-d81a5c6f57b9",
          "name": "[011102403FGA]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult != null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results != null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckAcqFgaConservee\":",
                  "                tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisition2\":",
                  "                ",
                  "                if (sqlResult[i].results.length ==4){",
                  "                    if (sqlResult[i].results[0].STOCKAGE==\"NON\" && sqlResult[i].results[1].STOCKAGE==\"OUI\" && sqlResult[i].results[2].STOCKAGE==\"OUI\" && sqlResult[i].results[3].STOCKAGE==\"NON\"){",
                  "                        tests[\"Check Stock_acquisition2\"]=true;",
                  "                    }",
                  "                    else{",
                  "                        tests[\"Check Stock_acquisition2\"]=false;",
                  "                    }",
                  "                }",
                  "                else{",
                  "                     tests[\"Check Stock_acquisition2\"]=false;",
                  "                }",
                  "                break;",
                  "            case \"CheckDmdCalcul\":",
                  "                tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionCal\":",
                  "                tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"130\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionForAcq\":",
                  "                tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;   ",
                  "            case \"CheckStockAcquisitionForCal\":",
                  "                tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break; ",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011102404FGA]Drop file FGA\");",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011102403FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('C220') and jour_gazier= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011102403FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select date_mesure,stockage from stock_acquisition2 where processid in ('{{[011102403FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}') and PAS_CHR='3600' group by date_mesure,stockage order by date_mesure asc\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where prec_processid='{{[011102403FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{[011102403FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('24/02/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idfga in ('C220') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[011102403FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{[011102403FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}')\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "caa3f0b0-f5b5-ac1a-523b-71f86eaf06bc",
          "name": "[011102404FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011102404FGA]PRO_ACG_11_FGA_ACG_024_C220_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011102404FGA]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file FGA\"] = true; ",
                  "   postman.setNextRequest(\"[011102404FGA]Check process cal end\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170223_FGA_20170223105014_CHR02_SCALA_18-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "681911fe-8ef5-9197-2315-a1d04c44a098",
          "name": "[011102404FGA]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check process cal end\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check process cal end\"] = true; ",
                  "   postman.setNextRequest(\"[011102404FGA]Check data\");",
                  "}",
                  "else {",
                  "    tests[\"Check process cal end\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var sourcprocessid = postman.getEnvironmentVariable(\"[011102401FGA]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId\");",
                  "console.log(sourcprocessid);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[011102404FGA]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "19cacd33-2f51-d47d-e509-f7b54d82e9b7",
          "name": "[011102404FGA]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult != null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results != null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckAcqFgaConservee\":",
                  "                tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisition2\":",
                  "                ",
                  "                if (sqlResult[i].results.length ==4){",
                  "                    if (sqlResult[i].results[0].STOCKAGE==\"NON\" && sqlResult[i].results[1].STOCKAGE==\"NON\" && sqlResult[i].results[2].STOCKAGE==\"OUI\" && sqlResult[i].results[3].STOCKAGE==\"NON\"){",
                  "                        tests[\"Check Stock_acquisition2\"]=true;",
                  "                    }",
                  "                    else{",
                  "                        tests[\"Check Stock_acquisition2\"]=false;",
                  "                    }",
                  "                }",
                  "                else{",
                  "                     tests[\"Check Stock_acquisition2\"]=false;",
                  "                }",
                  "                break;",
                  "            case \"CheckDmdCalcul\":",
                  "                tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionCal\":",
                  "                tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"130\";",
                  "                break;",
                  "",
                  "            case \"CheckStockAcquisitionForAcq\":",
                  "                tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;   ",
                  "            case \"CheckStockAcquisitionForCal\":",
                  "                tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break; ",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011102405FGA]Drop file FGA\");",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011102404FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('C220') and jour_gazier= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011102404FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select date_mesure,stockage from stock_acquisition2 where processid in ('{{[011102404FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}') and PAS_CHR='3600' group by date_mesure,stockage order by date_mesure asc\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where prec_processid='{{[011102404FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{[011102404FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('24/02/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idfga in ('C220') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[011102404FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{[011102404FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}')\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "be9f712f-bf37-3c4d-84b5-c04409753788",
          "name": "[011102405FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011102405FGA]PRO_ACG_11_FGA_ACG_024_C220_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011102405FGA]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file FGA\"] = true; ",
                  "   postman.setNextRequest(\"[011102405FGA]Check process cal end\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170223_FGA_20170223105005_CHR02_SCALA_18-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "9b8b5b3b-7ffb-cf76-39b8-c8a428def5c9",
          "name": "[011102405FGA]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check process cal end\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check process cal end\"] = true; ",
                  "   postman.setNextRequest(\"[011102405FGA]Check data\");",
                  "}",
                  "else {",
                  "    tests[\"Check process cal end\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var sourcprocessid = postman.getEnvironmentVariable(\"[011102401]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId\");",
                  "console.log(sourcprocessid);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[011102405FGA]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "f2139f97-0bd1-52d5-a36f-43e200fb62c3",
          "name": "[011102405FGA]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult != null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results != null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckAcqFgaConservee\":",
                  "                tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisition2\":",
                  "                ",
                  "                if (sqlResult[i].results.length ==4){",
                  "                    if (sqlResult[i].results[0].STOCKAGE==\"NON\" && sqlResult[i].results[1].STOCKAGE==\"NON\" && sqlResult[i].results[2].STOCKAGE==\"NON\" && sqlResult[i].results[3].STOCKAGE==\"NON\"){",
                  "                        tests[\"Check Stock_acquisition2\"]=true;",
                  "                    }",
                  "                    else{",
                  "                        tests[\"Check Stock_acquisition2\"]=false;",
                  "                    }",
                  "                }",
                  "                else{",
                  "                     tests[\"Check Stock_acquisition2\"]=false;",
                  "                }",
                  "                break;",
                  "            case \"CheckDmdCalcul\":",
                  "                tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionCal\":",
                  "                tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"130\";",
                  "                break;",
                  "",
                  "            case \"CheckStockAcquisitionForAcq\":",
                  "                tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;   ",
                  "            case \"CheckStockAcquisitionForCal\":",
                  "                tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break; ",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011102406FGA]Update data\");",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011102405FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('C220') and jour_gazier= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011102405FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select date_mesure,stockage from stock_acquisition2 where processid in ('{{[011102405FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}') group by date_mesure,stockage order by date_mesure asc\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where prec_processid='{{[011102405FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{[011102405FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('24/02/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idfga in ('C220') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[011102405FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{[011102405FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}')\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8462529c-f808-f89e-efe3-763aff04000c",
          "name": "[011102406FGA]Update data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "for(var i= 0; i < sqlResult.length; i++)",
                  "{",
                  "    switch (sqlResult[i].requestId) {",
                  "        case \"UpdatePointData\":",
                  "            tests[\"Update Point Data\"] = true;",
                  "            break;",
                  "    }",
                  "}",
                  "if (tests[\"Update Point Data\"]){",
                  "    tests[\"Update data Sum up\"] = true; ",
                  "    postman.setNextRequest(\"[011102406FGA]Drop file FGA\");",
                  "}",
                  "else {",
                  "   tests[\"Delete data Sum up\"] = fase; ",
                  "   //postman.setNextRequest(null);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"UpdatePointData\",\r\n         \"requestContent\":\"update point set uidqualite_point='15' where uidpoint in (select po.uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('23/02/2017 08:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('23/02/2017 08:00:00','DD/MM/YYYY HH24:MI:SS') and Idfga in ('C220'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8c7566aa-88bd-779d-eb6c-505198b66a0e",
          "name": "[011102406FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011102406FGA]PRO_ACG_11_FGA_ACG_024_C220_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011102406FGA]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file FGA\"] = true; ",
                  "   postman.setNextRequest(\"[011102406FGA]Check process cal end\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170223_FGA_20170223105006_CHR02_SCALA_18-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "19db1a8e-1a1e-6114-435d-8700db902f0a",
          "name": "[011102406FGA]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check process cal end\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check process cal end\"] = true; ",
                  "   postman.setNextRequest(\"[011102406FGA]Check data\");",
                  "}",
                  "else {",
                  "    tests[\"Check process cal end\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var sourcprocessid = postman.getEnvironmentVariable(\"[011102401]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId\");",
                  "console.log(sourcprocessid);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[011102406FGA]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "dccbce3f-f2ab-8a5c-00ad-2e5476b39d87",
          "name": "[011102406FGA]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult != null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results != null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckAcqFgaConservee\":",
                  "                tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisition2\":",
                  "                ",
                  "                if (sqlResult[i].results.length ==4){",
                  "                    if (sqlResult[i].results[0].STOCKAGE==\"NON\" && sqlResult[i].results[1].STOCKAGE==\"NON\" && sqlResult[i].results[2].STOCKAGE==\"OUI\" && sqlResult[i].results[3].STOCKAGE==\"NON\"){",
                  "                        tests[\"Check Stock_acquisition2\"]=true;",
                  "                    }",
                  "                    else{",
                  "                        tests[\"Check Stock_acquisition2\"]=false;",
                  "                    }",
                  "                }",
                  "                else{",
                  "                     tests[\"Check Stock_acquisition2\"]=false;",
                  "                }",
                  "                break;",
                  "            case \"CheckDmdCalcul\":",
                  "                tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionCal\":",
                  "                tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"130\";",
                  "                break;",
                  "",
                  "            case \"CheckStockAcquisitionForAcq\":",
                  "                tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;   ",
                  "            case \"CheckStockAcquisitionForCal\":",
                  "                tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break; ",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011102407FGA]Delete and Update data\");",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011102406FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('C220') and jour_gazier= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011102406FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select date_mesure,stockage from stock_acquisition2 where processid in ('{{[011102406FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}') and pas_chr='3600' group by date_mesure,stockage order by date_mesure asc\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where prec_processid='{{[011102406FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{[011102406FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('24/02/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idfga in ('C220') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[011102406FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{[011102406FGA]PRO_ACG_11_FGA_ACG_024_C220_processid}}')\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "660dca15-19f3-0bc6-e407-e39d4558d128",
          "name": "[011102407FGA]Delete and Update data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "for(var i= 0; i < sqlResult.length; i++)",
                  "{",
                  "    switch (sqlResult[i].requestId) {",
                  "        case \"DeletePointData\":",
                  "            tests[\"Delete Point Data\"] = true;",
                  "            break;",
                  "        case \"DeleteAcqFgaData\":",
                  "            tests[\"Delete Acq_Fga Data\"] = true;",
                  "            break;",
                  "        case \"DeletePubPointJmnFgaData\":",
                  "            tests[\"Delete Pub_Point_Jmn_Fga Data\"] = true;",
                  "            break;",
                  "    }",
                  "}",
                  "if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Fga Data\"] && tests[\"Delete Pub_Point_Jmn_Fga Data\"]){",
                  "    tests[\"Delete data Sum up\"] = true; ",
                  "    postman.setNextRequest(\"[011102407FGA]Drop file FGA\");",
                  "}",
                  "else {",
                  "   tests[\"Delete data Sum up\"] = fase; ",
                  "   //postman.setNextRequest(null);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"Delete from point where uidpoint in (select uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('05/03/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/03/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') and idfga in ('SGGU2103Z'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqFgaData\",\r\n         \"requestContent\":\"delete from acq_fga_conservee where uidacq_fga_conservee in (select uidacq_fga_conservee from acq_fga_conservee where code_acquisition in ('SGGU2103Z'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeletePubPointJmnFgaData\",\r\n         \"requestContent\":\"delete from pub_point_jmn_fga where uidgrandeur in (select pp.uidgrandeur from pub_point_jmn_fga pp, fga p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idfga='SGGU2103Z' and horodate between TO_DATE('2017-03-05 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-03-07 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "2c37220d-ed3d-d5c2-3203-9b20f361cc8b",
          "name": "[011102407FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011102407FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011102407FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file FGA\"] = true; ",
                  "   postman.setNextRequest(\"[011102407FGA]Check process cal end\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"J20170306_FGA_20170307062203_CHR02_SCALA_100-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "e2468712-b044-7f30-4fcc-f10ded648e09",
          "name": "[011102407FGA]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check process cal end\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check process cal end\"] = true; ",
                  "   postman.setNextRequest(\"[011102407FGA]Check data\");",
                  "}",
                  "else {",
                  "    tests[\"Check process cal end\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[011102407FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c7ae03e5-b64c-a1c9-17ff-a46425a2467c",
          "name": "[011102407FGA]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult != null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results != null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckAcqFgaConservee\":",
                  "                tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisition2\":",
                  "                tests[\"Check Stock_acquisition2\"]= sqlResult[i].results[0].COUNT == \"24\";",
                  "",
                  "                break;",
                  "            case \"CheckDmdCalcul\":",
                  "                tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionCal\":",
                  "                tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "",
                  "            case \"CheckStockAcquisitionForAcq\":",
                  "                tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;   ",
                  "            case \"CheckStockAcquisitionForCal\":",
                  "                tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break; ",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011102408FGA]Drop file FGA\");",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011102407FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('SGGU2103Z') and jour_gazier= TO_DATE('06/03/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011102407FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select stockage,count(*) as COUNT from (select date_mesure,stockage from stock_acquisition2 where processid in ('{{[011102407FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_processid}}') and pas_chr='3600' group by date_mesure,stockage order by date_mesure asc) group by stockage\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where prec_processid='{{[011102407FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{[011102407FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[011102407FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{[011102407FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_processid}}')\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "1bd6dabe-f102-cb4d-411d-a8db7c36e05a",
          "name": "[011102408FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011102408FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011102408FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file FGA\"] = true; ",
                  "   postman.setNextRequest(\"[011102408FGA]Check process cal end\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"J20170306_FGA_20170307061702_CHR02_SCALA_101-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "fe9e02f8-45f9-f09e-bfa0-c7e79371d975",
          "name": "[011102408FGA]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check process cal end\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check process cal end\"] = true; ",
                  "   postman.setNextRequest(\"[011102408FGA]Check data\");",
                  "}",
                  "else {",
                  "    tests[\"Check process cal end\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var sourcprocessid = postman.getEnvironmentVariable(\"[011102401]PRO_ACG_11_FGA_ACG_024_C220_sourceProcessId\");",
                  "console.log(sourcprocessid);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{[011102408FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "bc2a617e-d778-5059-aab7-e91562009944",
          "name": "[011102408FGA]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult != null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results != null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckAcqFgaConservee\":",
                  "                tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisition2\":",
                  "                if (sqlResult[i].results.length ==24){",
                  "                    if (sqlResult[i].results[0].STOCKAGE==\"NON\" ",
                  "                    && sqlResult[i].results[1].STOCKAGE==\"NON\" ",
                  "                    && sqlResult[i].results[2].STOCKAGE==\"NON\" ",
                  "                    && sqlResult[i].results[3].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[4].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[5].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[6].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[7].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[8].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[9].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[10].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[11].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[12].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[13].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[14].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[15].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[16].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[17].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[18].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[19].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[20].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[21].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[22].STOCKAGE==\"OUI\" ",
                  "                    && sqlResult[i].results[23].STOCKAGE==\"OUI\"){",
                  "                        tests[\"Check Stock_acquisition2\"]=true;",
                  "                    }",
                  "                    else{",
                  "                        tests[\"Check Stock_acquisition2\"]=false;",
                  "                    }",
                  "                }",
                  "                else{",
                  "                     tests[\"Check Stock_acquisition2\"]=false;",
                  "                }",
                  "                break;",
                  "            case \"CheckDmdCalcul\":",
                  "                tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionCal\":",
                  "                tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT >= \"1\";",
                  "                break;",
                  "",
                  "            case \"CheckStockAcquisitionForAcq\":",
                  "                tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;   ",
                  "            case \"CheckStockAcquisitionForCal\":",
                  "                tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break; ",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "//postman.setNextRequest(\"[011102407]Delete and Update data\");",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011102408FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('SGGU2103Z') and jour_gazier= TO_DATE('06/03/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011102408FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select date_mesure,stockage from stock_acquisition2 where processid in ('{{[011102408FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_processid}}') and pas_chr='3600' group by date_mesure,stockage order by date_mesure asc\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where prec_processid='{{[011102408FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{[011102408FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('06/03/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/03/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idfga in ('SGGU2103Z') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[011102408FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{[011102408FGA]PRO_ACG_11_FGA_ACG_024_SGGU2103Z_processid}}')\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "bc08a8eb-affc-2b7b-1501-ff20037464f4",
      "name": "[010100500PCE]PRO_ACG_01_PCE_ORC_005  - Todo",
      "description": "",
      "item": []
    },
    {
      "_postman_id": "717dc411-c4da-deec-7a6e-31a3fc9b8f9b",
      "name": "[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC",
      "description": "o  0 - ko Case - file stops - the format inside is not correct\r\no  1 - ko Case - name of the file is not correct\r\no  2 - ok Case - file go through next step",
      "item": [
        {
          "_postman_id": "0c23201d-15cf-f043-d9ab-afe4c4249ff0",
          "name": "[010100100PCE]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file PCE\"] = true; ",
                  "   postman.setNextRequest(\"[010100100PCE]Check data\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170320_PCE_20170320103422_CHR02_SCALA_3-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "aee7ba97-5fc5-a039-844c-dd2b83a8e283",
          "name": "[010100100PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult != null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results != null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckStatutOrcEtape\":",
                  "                    tests[\"Check status in ORC_ETAPE\"] = sqlResult[i].results[0].ID_STATUT_ETAPE == \"2\";",
                  "                    break;",
                  "                case \"CheckStatutOrcEtapeMessage\":",
                  "                    tests[\"Check message in ORC_ETAPE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckAcqPceConservee\":",
                  "                    tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;",
                  "                case \"CheckStockAcquisitionForAcq\":",
                  "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;   ",
                  "                case \"CheckOrcProcessusReport\":",
                  "                    tests[\"Check Report of ORC_001 in ORC_ETAPES\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break; ",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[010100101PCE]Drop file PCE\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStatutOrcEtape\",\r\n         \"requestContent\":\"select id_statut_etape from orc_etapes where id_processus='{{[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}' and id_ref_etape='ACG_01_ORC_001'\"\r\n      },\r\n                  {  \r\n         \"requestId\":\"CheckStatutOrcEtapeMessage\",\r\n         \"requestContent\":\"select count(*) as COUNT from orc_etapes where id_processus='{{[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}' and resultat_etape like '%/Enveloppe_VICTOR_PCE/ :  Child element Publication {} at position 1 is unexpected%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('SGPCETVPEC') and jour_gazier= TO_DATE('20/03/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckOrcProcessusReport\",\r\n         \"requestContent\":\"select count(*) AS COUNT from orc_etapes where id_processus='{{[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}' and ( resultat_etape like '%Contrôler la validité du fichier en entrée%' /*Entête*/ and (resultat_etape like '%Heure de début de traitement : '||TO_char(sysdate,'DD/MM/YYYY HH24')||'%' or resultat_etape like '%Heure de début de traitement : '||TO_char(sysdate-1/24,'DD/MM/YYYY HH24')||'%') /*heure de début de traitement*/ and ( resultat_etape like '%Heure de fin de traitement : '||TO_char(sysdate,'DD/MM/YYYY HH24')||'%' or resultat_etape like '%Heure de fin de traitement : '||TO_char((sysdate+1/24),'DD/MM/YYYY HH24')||'%') /*heure de fin de traitement*/ and resultat_etape like '%Fichier : H20170320_PCE_20170320103422_CHR02_SCALA_3-1F.xml%' /* nom fichier*/ and resultat_etape like '%Statut : KO%' /*statut*/ and resultat_etape like '%/Enveloppe_VICTOR_PCE/ :  Child element Publication {} at position 1 is unexpected%' /*error message*/)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a736d022-1517-c087-f64f-b9aa3c192b6a",
          "name": "[010100101PCE]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[010100101PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[010100101PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file PCE\"] = true; ",
                  "   postman.setNextRequest(\"[010100101PCE]Check data\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170320_PCE_2017032010342_CHR02_SCALA_4-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c12e331a-37d7-8bd4-47a6-72f46efb6572",
          "name": "[010100101PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckStatutOrcEtape\":",
                  "                    tests[\"Check status in ORC_ETAPE\"] = sqlResult[i].results[0].ID_STATUT_ETAPE == \"2\";",
                  "                    break;",
                  "                case \"CheckStatutOrcEtapeMessage\":",
                  "                    tests[\"Check message in ORC_ETAPE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckAcqPceConservee\":",
                  "                    tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;",
                  "                case \"CheckStockAcquisitionForAcq\":",
                  "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;   ",
                  "                case \"CheckOrcProcessusReport\":",
                  "                    tests[\"Check Report of ORC_001 in ORC_ETAPES\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break; ",
                  "                 }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[010100102PCE]Delete data\");",
                  "",
                  "}",
                  "else{",
                  "    postman.setNextRequest(\"[010100102PCE]Delete data\");",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[010100101PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStatutOrcEtape\",\r\n         \"requestContent\":\"select id_statut_etape from orc_etapes where id_processus='{{[010100101PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}' and id_ref_etape='ACG_01_ORC_001'\"\r\n      },\r\n                  {  \r\n         \"requestId\":\"CheckStatutOrcEtapeMessage\",\r\n         \"requestContent\":\"select count(*) as COUNT from orc_etapes where id_processus='{{[010100101PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}' and resultat_etape like '%nom du fichier%' and resultat_etape like '%est pas conforme%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('SGPCETVPEC') and jour_gazier= TO_DATE('20/03/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[010100101PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[010100101PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckOrcProcessusReport\",\r\n         \"requestContent\":\"select count(*) AS COUNT from orc_etapes where id_processus='{{[010100101PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}' and ( resultat_etape like '%Contrôler la validité du fichier en entrée%' /*Entête*/ and (resultat_etape like '%Heure de début de traitement : '||TO_char(sysdate,'DD/MM/YYYY HH24')||'%' or resultat_etape like '%Heure de début de traitement : '||TO_char(sysdate-1/24,'DD/MM/YYYY HH24')||'%') /*heure de début de traitement*/ and ( resultat_etape like '%Heure de fin de traitement : '||TO_char(sysdate,'DD/MM/YYYY HH24')||'%' or resultat_etape like '%Heure de fin de traitement : '||TO_char((sysdate+1/24),'DD/MM/YYYY HH24')||'%') /*heure de fin de traitement*/ and resultat_etape like '%Fichier : H20170320_PCE_2017032010342_CHR02_SCALA_4-1F.xml%' /* nom fichier*/ and resultat_etape like '%Statut : KO%' /*statut*/ and resultat_etape like '%/Le nom du fichier n'est pas conforme%' /*error message*/)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "e8053e41-9d1c-5118-e9b7-61973726f9d7",
          "name": "[010100102PCE]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqFgaData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Fga Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[010100102PCE]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('20/03/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('21/03/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('SGPCETVPEC'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('SGPCETVPEC') and jour_gazier= TO_DATE('20/03/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "55b662ba-3917-d78d-23e6-7d9a1e68be8f",
          "name": "[010100102PCE]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[010100102]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[010100102]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[010100101]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170320_PCE_20170320103420_CHR02_SCALA_5-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"10\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "2e47e67e-ea94-6ae6-1b57-90c2815cdbf5",
          "name": "[010100102PCE]Check data - To do",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckStatutOrcEtape\":",
                  "                    tests[\"Check status in ORC_ETAPE\"] = sqlResult[i].results[0].ID_STATUT_ETAPE == \"3\";",
                  "                    break;",
                  "                case \"CheckAcqPceConservee\":",
                  "                    tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckStockAcquisitionForAcq\":",
                  "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;   ",
                  "                case \"CheckOrcProcessusReport\":",
                  "                    tests[\"Check Report of ORC_001 in ORC_ETAPES\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break; ",
                  "                    ",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[010100102PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStatutOrcEtape\",\r\n         \"requestContent\":\"select id_statut_etape from orc_etapes where id_processus='{{[010100102PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}' and id_ref_etape='ACG_01_ORC_001'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('SGPCETVPEC') and jour_gazier= TO_DATE('20/03/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[010100102PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[010100102PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckOrcProcessusReport\",\r\n         \"requestContent\":\"select count(*) AS COUNT from orc_etapes where id_processus='{{[010100102PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}' and ( resultat_etape like '%Contrôler la validité du fichier en entrée%' /*Entête*/ and (resultat_etape like '%Heure de début de traitement : '||TO_char(sysdate,'DD/MM/YYYY HH24')||'%' or resultat_etape like '%Heure de début de traitement : '||TO_char(sysdate-1/24,'DD/MM/YYYY HH24')||'%') /*heure de début de traitement*/ and ( resultat_etape like '%Heure de fin de traitement : '||TO_char(sysdate,'DD/MM/YYYY HH24')||'%' or resultat_etape like '%Heure de fin de traitement : '||TO_char((sysdate+1/24),'DD/MM/YYYY HH24')||'%') /*heure de fin de traitement*/ and resultat_etape like '%Fichier : H20170320_PCE_20170320103420_CHR02_SCALA_5-1F.xml%' /* nom fichier*/ and resultat_etape like '%Statut : OK%' /*statut*/)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "9d3800de-425e-5dd0-ebf9-2288a5fafc2d",
      "name": "[010100200PCE]PRO_ACG_01_PCE_ORC_002_SGPCETVPEC",
      "description": "o  0 - ko Case - file stops here\r\no  1 - ok Case - file go through next step",
      "item": [
        {
          "_postman_id": "24faa6e0-d2c4-be51-8fcc-a1fe953f2e48",
          "name": "[010100200PCE]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[010100200PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[010100200PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file PCE\"] = true; ",
                  "   postman.setNextRequest(\"[010100200PCE]Check data\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170320_PCE_20170320103422_CHR02_SCALA_3-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "1af8324d-840b-316b-8991-daee3796ebd9",
          "name": "[010100200PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult != null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results != null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckStatutOrcEtape\":",
                  "                tests[\"Check status in ORC_ETAPE\"] = sqlResult[i].results[0].ID_STATUT_ETAPE == \"2\";",
                  "                break;",
                  "            case \"CheckStatutOrcEtapeMessage\":",
                  "                tests[\"Check message in ORC_ETAPE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckAcqPceConservee\":",
                  "                tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionForAcq\":",
                  "                tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;   ",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "//postman.setNextRequest(\"[011102407]Delete and Update data\");",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[010100200PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStatutOrcEtape\",\r\n         \"requestContent\":\"select id_statut_etape from orc_etapes where id_processus='{{[010100200PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}' and id_ref_etape='ACG_01_ORC_001'\"\r\n      },\r\n                  {  \r\n         \"requestId\":\"CheckStatutOrcEtapeMessage\",\r\n         \"requestContent\":\"select count(*) as COUNT from orc_etapes where id_processus='{{[010100200PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}' and resultat_etape like '%/Enveloppe_VICTOR_PCE/ :  Child element Publication {} at position 1 is unexpected%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('SGPCETVPEC') and jour_gazier= TO_DATE('20/03/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[010100200PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[010100200PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ecc0653e-1bdf-ab1c-daac-5a82a93dd3d6",
          "name": "[010100201PCE]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[010100201PCE]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('21/03/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('22/03/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('SGPCETVPEC'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('SGPCETVPEC') and jour_gazier= TO_DATE('21/03/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "e98a7ea7-d15a-ed45-97a6-f8c8448b01bb",
          "name": "[010100201PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult != null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results != null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckStatutOrcEtape\":",
                  "                    tests[\"Check status in ORC_ETAPE\"] = sqlResult[i].results[0].ID_STATUT_ETAPE == \"3\";",
                  "                    break;",
                  "                case \"CheckAcqPceConservee\":",
                  "                    tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckStockAcquisitionForAcq\":",
                  "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;   ",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[010100201PCE]PRO_ACG_01_PCE_ORC_002_SGPCETVPEC_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStatutOrcEtape\",\r\n         \"requestContent\":\"select id_statut_etape from orc_etapes where id_processus='{{[010100201PCE]PRO_ACG_01_PCE_ORC_002_SGPCETVPEC_processid}}' and id_ref_etape='ACG_01_ORC_001'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('SGPCETVPEC') and jour_gazier= TO_DATE('21/03/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[010100201PCE]PRO_ACG_01_PCE_ORC_002_SGPCETVPEC_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[010100201PCE]PRO_ACG_01_PCE_ORC_002_SGPCETVPEC_processid}}'\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "fc35b08e-362e-0fc8-0874-653760ccb09c",
          "name": "[010100201PCE]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[010100201PCE]PRO_ACG_01_PCE_ORC_002_SGPCETVPEC_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[010100201PCE]PRO_ACG_01_PCE_ORC_002_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[010100201PCE]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170320_PCE_2017032010342_CHR02_SCALA_4-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "72589bb4-884b-7e75-a0a9-977f297f7934",
      "name": "[011021000FGA]PRO_ACG_10_FGA_ACG_210_FGATNR1 et FGATNR2",
      "description": "",
      "item": [
        {
          "_postman_id": "8d42bc17-b8be-9f73-b021-6a1b7dc8fbf1",
          "name": "[011021001FGA]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqFgaData\":",
                  "                tests[\"Delete Acq_Fga Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Fga Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[011021001FGA]Drop file FGA\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idfga in ('FGATNR1'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqFgaData\",\r\n         \"requestContent\":\"delete from acq_fga_conservee where uidacq_fga_conservee in (select uidacq_fga_conservee from acq_fga_conservee where code_acquisition in ('FGATNR1') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ae588e11-aed8-9fc6-d0db-0c255ed406f3",
          "name": "[011021001FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011021001FGA]PRO_ACG_10_FGA_ACG_210_FGATNR1_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011021001FGA]PRO_ACG_10_FGA_ACG_210_FGATNR1_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file FGA\"] = true; ",
                  "   postman.setNextRequest(\"[011021001FGA]Check Data\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"J20170506_FGA_20170507104025_CHR02_SCALA_1-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"160\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a40a712e-5d9e-f36c-4184-8ae955f3ab71",
          "name": "[011021001FGA]Check Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult !== null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results !== null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckAcqFgaConservee\":",
                  "                tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisition2\":",
                  "                ",
                  "                if (sqlResult[i].results.length ==4){",
                  "                    if (sqlResult[i].results[0].STOCKAGE==\"OUI\" && sqlResult[i].results[1].STOCKAGE==\"OUI\" && sqlResult[i].results[2].STOCKAGE==\"OUI\" && sqlResult[i].results[3].STOCKAGE==\"OUI\"){",
                  "                        tests[\"Check Stock_acquisition2\"]=true;",
                  "                    }",
                  "                    else{",
                  "                        tests[\"Check Stock_acquisition2\"]=false;",
                  "                    }",
                  "                }",
                  "                else{",
                  "                     tests[\"Check Stock_acquisition2\"]=false;",
                  "                }",
                  "                break;",
                  "",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"650\";",
                  "                break;",
                  "",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011021001FGA]Check SI\");",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011021001FGA]PRO_ACG_10_FGA_ACG_210_FGATNR1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('FGATNR1') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and  processid='{{[011021001FGA]PRO_ACG_10_FGA_ACG_210_FGATNR1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{[011021001FGA]PRO_ACG_10_FGA_ACG_210_FGATNR1_processid}}'\"\r\n      },\r\n\r\n      {  \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idfga in ('FGATNR1') and po.lstime >= (sysdate-1/24/4)\"\r\n      }\r\n\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "15e0ca4d-fbdc-18c2-41c3-ab1cf4cc0e6d",
          "name": "[011021001FGA]Check SI",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckSIStockAcquisition\":",
                  "                    tests[\"Check SI in Stock Acquisition\"] = sqlResult[i].results[0].COUNT == \"52\";",
                  "                    break;",
                  "                case \"CheckAcqFgaConservee\":",
                  "                    tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "              ",
                  "               }",
                  "            }",
                  "        }",
                  "        ",
                  "    }",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckSIStockAcquisition\",\r\n         \"requestContent\":\"select count(*) as COUNT from Stock_acquisition2 where date_mesure = to_date('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and SI_SOURCE like ('Scala')and processid in ('{{[011021001FGA]PRO_ACG_10_FGA_ACG_210_FGATNR1_processid}}')\"\r\n      },\r\n                {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('FGATNR1') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid in ('{{[011021001FGA]PRO_ACG_10_FGA_ACG_210_FGATNR1_processid}}') and MOTIF_REJET_TRAITEMENT is null  \"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "74a99959-adb5-528b-37eb-312e1f844352",
          "name": "[011021001FGA]Check availibility",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckAvailabilityPCE\":",
                  "                    tests[\"Check availability in FGA\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"1\";",
                  "                    break;",
                  "                case \"CheckAcqFgaConservee\":",
                  "                    tests[\"Check Motif rejet in ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "              ",
                  "               }",
                  "            }",
                  "        }",
                  "        ",
                  "    }",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckAvailabilityFGA\",\r\n         \"requestContent\":\"select count(*) as COUNT from FGA where idFGA='FGATNR1' and date_debut <= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and date_fin > TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS')\"\r\n      },\r\n                {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('FGATNR1') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011021001FGA]PRO_ACG_10_FGA_ACG_210_FGATNR1_processid}}'and MOTIF_REJET_TRAITEMENT is null \"\r\n      }\r\n      \r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "6fbb8366-7020-47da-c75e-cf488489b340",
          "name": "[011021002FGA]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqFgaData\":",
                  "                tests[\"Delete Acq_Fga Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Fga Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[011021002FGA]Drop file FGA\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idfga in ('FGATNR2'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqFgaData\",\r\n         \"requestContent\":\"delete from acq_fga_conservee where uidacq_fga_conservee in (select uidacq_fga_conservee from acq_fga_conservee where code_acquisition in ('FGATNR2') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "dbec617c-db0f-d97f-2cb5-4253e8e124a6",
          "name": "[011021002FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011021002FGA]PRO_ACG_10_FGA_ACG_210_FGATNR2_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011021002FGA]PRO_ACG_10_FGA_ACG_210_FGATNR2_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file FGA\"] = true; ",
                  "   postman.setNextRequest(\"[011021002FGA]Check Data\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"J20170506_FGA_20170507104025_CHR02_SCALA_2-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"160\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "63ba3c66-f5e6-1c5c-ca9d-33d7c89bef2d",
          "name": "[011021002FGA]Check non avaIlibility",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckNonAvailabilityFGA\":",
                  "                    tests[\"Check non availability in FGA\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckAcqFgaConservee\":",
                  "                    tests[\"Check Motif rejet in ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "              ",
                  "               }",
                  "            }",
                  "        }",
                  "        ",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n   \t  \r\n      {  \r\n      \t\r\n         \"requestId\":\"CheckNonAvailabilityFGA\",\r\n         \"requestContent\":\"select count(*) as COUNT from FGA where idFGA='FGATNR2' and date_debut > TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS')\"\r\n      },\r\n                {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('FGATNR2') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011021002FGA]PRO_ACG_10_FGA_ACG_210_FGATNR2_processid}}'and MOTIF_REJET_TRAITEMENT = 'FGA non valide'\"\r\n      }\r\n    \r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "5d271f3a-4b81-f476-ec09-b2bda48c6ad2",
      "name": "[011021000PCE]PRO_ACG_10_PCE_ACG_210_PCETNR1 et PCETNR2",
      "description": "",
      "item": [
        {
          "_postman_id": "a8a91ecf-6629-ed84-43af-6f2e7ab34803",
          "name": "[011021001PCE]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[011021001PCE]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('PCEGBTNR1'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('PCEGBTNR1') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "4a73968d-2e10-04cf-17b3-4b911a16f695",
          "name": "[011021001PCE]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011021001PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR1_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011021001PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR1_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file PCE\"] = true; ",
                  "   postman.setNextRequest(\"[011021001PCE]Check Data\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170506_PCE_20170507104025_CHR02_SCALA_1-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "808e7e87-d108-b89f-8a56-bf07106ddd27",
          "name": "[011021001PCE]Check Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult !== null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results !== null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckStockAcquisition2\":",
                  "                tests[\"Check Stock Acquisition2\"] = sqlResult[i].results[0].COUNT == \"259\";",
                  "                break;",
                  "",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"325\";",
                  "                break;",
                  "",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011021001PCE]Check SI\");",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011021001PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select * from Stock_acquisition2 where NOM_SOURCE in ('PCEGBTNR1') and DATE_MESURE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and  processid='{{[011021001PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR1_processid}}\" \r\n      },\r\n\r\n\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('PCEGBTNR1')  and po.lstime >= (sysdate-1/24/4)\"\r\n      }\r\n      \r\n\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "0467909f-3f64-95ad-bd57-33dff7d881d2",
          "name": "[011021001PCE]Check SI",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckSIStockAcquisition\":",
                  "                    tests[\"Check SI in Stock Acquisition\"] = sqlResult[i].results[0].COUNT == \"325\";",
                  "                    break;",
                  "                case \"CheckAcqPceConservee\":",
                  "                    tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "              ",
                  "               }",
                  "            }",
                  "        }",
                  "        ",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckSIStockAcquisition\",\r\n         \"requestContent\":\"select count(*) as COUNT from Stock_acquisition2 where processid in  ('{{[011021001PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR1_processid}}'and SI_SOURCE= 'Scala'\"\r\n      },\r\n                {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('PCEGBTNR1') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and  processid='{{[011021001PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR1_processid}}' and Motif_rejet_stockage = '(null)'\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ff3a7216-a7bc-5c88-decd-fb15f9d7e856",
          "name": "[010100101PCE]Check avalibility",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckAvailabilityPCE\":",
                  "                    tests[\"Check availability in PCE\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"1\";",
                  "                    break;",
                  "                case \"CheckAcqPceConservee\":",
                  "                    tests[\"Check Motif rejet in ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "              ",
                  "               }",
                  "            }",
                  "        }",
                  "        ",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckAvailabilityPCE\",\r\n         \"requestContent\":\"select count(*) as COUNT from PCE where idPCE='PCETNR1' and date_debut <= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and date_fin > TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS')\"\r\n      },\r\n                {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('PCETNR1') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011021001PCE]PRO_ACG_10_PCE_ACG_210_PCETNR1_processid}}'and Motif_rejet_stockage = '(null)'\"\r\n      }\r\n      \r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "f3a78577-62a0-174d-5347-745019050902",
          "name": "[010100101PCE]Check statut",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutPCE\":",
                  "                    tests[\"Check Statut PCE\"] =sqlResult[i].results[0].COUNT  == \"0\";",
                  "                    break;",
                  "                case \"CheckAcqPceConservee\":",
                  "                    tests[\"Check Motif rejet in ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "              ",
                  "               }",
                  "            }",
                  "        }",
                  "        ",
                  "    }",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutPCE\",\r\n         \"requestContent\":\"select count(*) as COUNT from statut where UIDPCE = (select UIDPCE from PCE where idpce= PCEGBTNR1') and hotodate= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS')\"\r\n      },\r\n                {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('PCEGBTNR1') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011021001PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR1_processid}}'and Motif_rejet_stockage = '(null)'\"\r\n      }\r\n      \r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "391895ec-cd93-b993-26c4-8f230ce76e95",
          "name": "[010100101PCE]Check state 'Non Cheked'",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatePCE\":",
                  "                    tests[\"Check State PCE\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"0\";",
                  "                    break;",
                  "                case \"CheckAcqPceConservee\":",
                  "                    tests[\"Check Motif rejet in ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "              ",
                  "               }",
                  "            }",
                  "        }",
                  "        ",
                  "    }",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatetPCE\",\r\n         \"requestContent\":\"select count(*) as COUNT from PCE_VERIFIE where UIDPCE = (select UIDPCE from PCE where idpce= PCEGBTNR1') and hotodate= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS')\"\r\n      },\r\n                {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('PCEGBTNR1') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011021001PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR1_processid}}'and Motif_rejet_stockage = '(null)'\"\r\n      }\r\n      \r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ff0de092-9d07-6d42-04b4-4fbf6d781541",
          "name": "[010100101PCE]Check state 'Non Locked'",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                  "if (tests[\"Status code is 200\"]){\r",
                  "    var jsonData = JSON.parse(responseBody);\r",
                  "    var sqlResult = jsonData.sqlResult;\r",
                  "    if(sqlResult !== null){\r",
                  "       for(var i= 0; i < sqlResult.length; i++)\r",
                  "        {\r",
                  "            if(sqlResult[i].results !== null){\r",
                  "               switch (sqlResult[i].requestId) {\r",
                  "                case \"CheckStatePCE\":\r",
                  "                    tests[\"Check State PCE\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"0\";\r",
                  "                    break;\r",
                  "                case \"CheckAcqPceConservee\":\r",
                  "                    tests[\"Check Motif rejet in ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";\r",
                  "                    break;\r",
                  "              \r",
                  "               }\r",
                  "            }\r",
                  "        }\r",
                  "        \r",
                  "    }\r",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatetPCE\",\r\n         \"requestContent\":\"select count(*) as COUNT from VERROU_ACQUISITION where UIDPCE = (select UIDPCE from PCE where idpce= PCEGBTNR1') and hotodate= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS')\"\r\n      },\r\n                {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('PCEGBTNR1') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011021001PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR1_processid}}'and Motif_rejet_stockage = '(null)'\"\r\n      }\r\n      \r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "402830f8-4588-17f5-e731-79f3161ab533",
          "name": "[011021002PCE]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[011021002PCE]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('PCEGBTNR2'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('PCEGBTNR2') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "d60f44dc-c2be-411f-a527-d8eebd9e5046",
          "name": "[010100102PCE]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011021002PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR2_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011021002PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR2_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file PCE\"] = true; ",
                  "   postman.setNextRequest(\"[011021002PCE]Check non availibility\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170506_PCE_20170507104025_CHR02_SCALA_2-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "edd6623a-0200-af7e-d8c8-34cbca97cf6e",
          "name": "[011021002PCE]Check non availibility",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckNonAvailabilityPCE\":",
                  "                    tests[\"Check non availability in PCE\"] = sqlResult[i].results[0].COUNT== \"1\";",
                  "                    break;",
                  "                case \"CheckAcqPCEConservee\":",
                  "                    tests[\"Check Motif rejet in ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "              ",
                  "               }",
                  "            }",
                  "        }",
                  "        ",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckNonAvailabilityPCE\",\r\n         \"requestContent\":\"select count(*) as COUNT from PCE where idPCE='PCEGBTNR2' and date_debut > TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS')\"\r\n      },\r\n                {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('PCEGBTNR2') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011021002PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR2_processid}}'and Motif_rejet_traitement= 'PCE non valide'\"\r\n      }\r\n      \r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "030dead1-d3c0-c459-c6a6-308b7ff69775",
          "name": "[010100102PCE]Check Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult !== null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results !== null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "",
                  "            case \"CheckStockAcquisition2\":",
                  "            tests[\"Check Stock Acquisition2 data\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "  ",
                  "              ",
                  "",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011021003PCE]Delete data\");",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011021002PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR2_processid}}'\"\r\n      },\r\n\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[011021002PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR2_processid}}'\"\r\n      },\r\n\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('PCEGBTNR2') and po.lstime >= (sysdate-1/24/4)\"\r\n      }\r\n\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7d469b17-bee2-c9a7-2d84-639b1c081792",
          "name": "[011021003PCE]Delete data ",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[011021003PCE]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('PCEGBTNR3'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('PCEGBTNR3') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a53f7941-2e3f-edbf-2154-b68118465a80",
          "name": "[011021003PCE]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011021003PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR3_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011021003PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR3_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file PCE\"] = true; ",
                  "   postman.setNextRequest(\"[011021003PCE]Check state 'Checked'\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"J20170506_PCE_20170507104025_CHR02_SCALA_3-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"140\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "5d91a0a7-a417-5be4-f89d-c1989fccb3b4",
          "name": "[010100103PCE]Check state 'Cheked'",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                  "if (tests[\"Status code is 200\"]){\r",
                  "    var jsonData = JSON.parse(responseBody);\r",
                  "    var sqlResult = jsonData.sqlResult;\r",
                  "    if(sqlResult !== null){\r",
                  "       for(var i= 0; i < sqlResult.length; i++)\r",
                  "        {\r",
                  "            if(sqlResult[i].results !== null){\r",
                  "               switch (sqlResult[i].requestId) {\r",
                  "                case \"CheckStatePCE\":\r",
                  "                    tests[\"Check State PCE\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"1\";\r",
                  "                    break;\r",
                  "                case \"CheckAcqPceConservee\":\r",
                  "                    tests[\"Check Motif rejet in ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";\r",
                  "                    break;\r",
                  "              \r",
                  "               }\r",
                  "            }\r",
                  "        }\r",
                  "        \r",
                  "    }\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatetPCE\",\r\n         \"requestContent\":\"select count(*) as COUNT from PCE_VERIFIE where UIDPCE = (select UIDPCE from PCE where idpce= 'PCEGBTNR3') and horodate= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS')\"\r\n      },\r\n                {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('PCEGBTNR3') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011021003PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR3_processid}}'and Motif_rejet_Traitement = 'Etat PCE vérifié'\"\r\n      }\r\n      \r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "9ce47395-101e-67dc-9950-d087720a87cb",
          "name": "[011021003PCE]Check Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult !== null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results !== null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "",
                  "            case \"CheckStockAcquisition2\":",
                  "                ",
                  "                tests[\"Check Stock Acquisition2 data\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011021004PCE]Delete data\");",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011021003PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR3_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{[011021003PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR3_processid}}'\"\r\n      },\r\n\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('PCEGBTNR3') and po.lstime >= (sysdate-1/24/4)\"\r\n      }\r\n\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "6c143be6-ede4-b74c-9192-82afa776afe3",
          "name": "[011021004PCE]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[011021004PCE]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('PCEGBTNR4'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('PCEGBTNR4') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "9891c293-923d-3114-72df-12e55e5b4341",
          "name": "[011021004PCE]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011021004PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR4_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011021004PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR4_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file PCE\"] = true; ",
                  "   postman.setNextRequest(\"[011021004PCE]Check state 'Locked' J\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"J20170506_PCE_20170507104025_CHR02_SCALA_4-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"140\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a0d8d041-da44-68a7-7c56-f2f2b40ee923",
          "name": "[010100104PCE]Check state 'Locked' J",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                  "if (tests[\"Status code is 200\"]){\r",
                  "    var jsonData = JSON.parse(responseBody);\r",
                  "    var sqlResult = jsonData.sqlResult;\r",
                  "    if(sqlResult !== null){\r",
                  "       for(var i= 0; i < sqlResult.length; i++)\r",
                  "        {\r",
                  "            if(sqlResult[i].results !== null){\r",
                  "               switch (sqlResult[i].requestId) {\r",
                  "                case \"CheckStatePCE2\":\r",
                  "                    tests[\"Check State2 PCE\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"1\";\r",
                  "                    break;\r",
                  "                case \"CheckAcqPceConservee\":\r",
                  "                    tests[\"Check Motif rejet in ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";\r",
                  "                    break;\r",
                  "              \r",
                  "               }\r",
                  "            }\r",
                  "        }\r",
                  "        \r",
                  "    }\r",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatetPCE\",\r\n         \"requestContent\":\"select count(*) as COUNT from VERROU_ACQUISITION where uidgrandeurs_objet = ( select uidgrandeurs_objet from PCE where IDPCE = 'PCEGBTNR4') and horodate= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and Verrouille = 'O'\"\r\n      },\r\n                {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('PCEGBTNR4') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011021004PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR4_processid}}'and Motif_rejet_Traitement = 'Etat PCE verrouillé'\"\r\n      }\r\n      \r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "5ef62d0c-88ee-0e0f-f7b8-6ac12d9950f1",
          "name": "[011021004PCE]Check Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult !== null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results !== null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "",
                  "            case \"CheckStockAcquisition2\":",
                  "                tests[\"Check Stock Acquisition2 data\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "                ",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011021005PCE]Delete data\");",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011021004PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR4_processid}}'\"\r\n      },\r\n\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{[011021004PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR4_processid}}'\"\r\n      },\r\n\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('PCEGBTNR4') and po.lstime >= (sysdate-1/24/4)\"\r\n      }\r\n\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "27ca9fe2-5694-e36d-76d7-4371fd3af504",
          "name": "[011021005PCE]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[011021005PCE]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('PCEGBTNR5'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('PCEGBTNR5') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "b93000b1-4a5d-f0b9-5d72-537178e2e333",
          "name": "[010100105PCE]Drop  file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011021005PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR5_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011021005PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR5_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file PCE\"] = true; ",
                  "   postman.setNextRequest(\"[011021005PCE]Check state 'Cheked' 24H\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"J20170506_PCE_20170507104025_CHR02_SCALA_5-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"140\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "3fc8daec-090d-2e9b-877d-ea3a82384cca",
          "name": "[010100105PCE]Check state 'Cheked' 24H",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult !== null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results !== null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckStatutOrcEtape\":",
                  "                tests[\"Check status in ORC_ETAPE\"] = sqlResult[i].results[0].ID_STATUT_ETAPE == \"2\";",
                  "                break;",
                  "            case \"CheckStatutOrcEtapeMessage\":",
                  "                tests[\"Check message in ORC_ETAPE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckAcqPceConservee\":",
                  "                tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionForAcq\":",
                  "                tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;   ",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[010100101PCE]Drop file PCE\");",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStatutOrcEtape\",\r\n         \"requestContent\":\"select id_statut_etape from orc_etapes where id_processus='{{[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}' and id_ref_etape='ACG_01_ORC_001'\"\r\n      },\r\n                  {  \r\n         \"requestId\":\"CheckStatutOrcEtapeMessage\",\r\n         \"requestContent\":\"select count(*) as COUNT from orc_etapes where id_processus='{{[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}' and resultat_etape like '%/Enveloppe_VICTOR_PCE/ :  Child element Publication {} at position 1 is unexpected%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('SGPCETVPEC') and jour_gazier= TO_DATE('20/03/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "74a8d247-d0c0-b3ba-e37d-ed121544feb3",
          "name": "[011021005PCE]Check Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult !== null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results !== null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "",
                  "            case \"CheckStockAcquisition2\":",
                  "                ",
                  "                tests[\"Check Stock Acquisition2 data\"] = sqlResult[i].results[0].COUNT  == \"0\";",
                  "                break;",
                  "",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "//postman.setNextRequest(\"[011021006PCE]Delete data\");",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011021005PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR5_processid}}'\"\r\n      },\r\n\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{[011021005PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR5_processid}}'\"\r\n      },\r\n\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('PCEGBTNR5') and po.lstime >= (sysdate-1/24/4)\"\r\n      }\r\n\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8746bbf9-5486-d216-c716-f274d1d373c5",
          "name": "[011021006PCE]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[011021006PCE]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('PCEGBTNR6'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('PCEGBTNR6') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "07e04479-7215-5f08-ba4c-fccdfc430c7f",
          "name": "[010100106PCE]Drop  file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011021006PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR6_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011021006PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR6_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file PCE\"] = true; ",
                  "   postman.setNextRequest(\"[011021006PCE]Check state 'Cheked' 24J\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"J20170506_PCE_20170507104025_CHR02_SCALA_6-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"140\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8fcbbc25-d3cc-b6cb-c183-17b6a12f1012",
          "name": "[010100106PCE]Check state 'Cheked' 24J",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult != null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results != null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckStatutOrcEtape\":",
                  "                tests[\"Check status in ORC_ETAPE\"] = sqlResult[i].results[0].ID_STATUT_ETAPE == \"2\";",
                  "                break;",
                  "            case \"CheckStatutOrcEtapeMessage\":",
                  "                tests[\"Check message in ORC_ETAPE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckAcqPceConservee\":",
                  "                tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionForAcq\":",
                  "                tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;   ",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[010100101PCE]Drop file PCE\");",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStatutOrcEtape\",\r\n         \"requestContent\":\"select id_statut_etape from orc_etapes where id_processus='{{[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}' and id_ref_etape='ACG_01_ORC_001'\"\r\n      },\r\n                  {  \r\n         \"requestId\":\"CheckStatutOrcEtapeMessage\",\r\n         \"requestContent\":\"select count(*) as COUNT from orc_etapes where id_processus='{{[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}' and resultat_etape like '%/Enveloppe_VICTOR_PCE/ :  Child element Publication {} at position 1 is unexpected%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('SGPCETVPEC') and jour_gazier= TO_DATE('20/03/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[010100100PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "008135a9-a517-21b9-576f-ac16fda71859",
          "name": "[011021006PCE]Check Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult !== null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results !== null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "",
                  "            case \"CheckStockAcquisition2\":",
                  "                ",
                  "                tests[\"Check Stock Acquisition2 data\"] = sqlResult[i].results[0].COUNT  == \"0\";",
                  "                break;",
                  "",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011021006PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR6_processid}}'\"\r\n      },\r\n\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{[011021006PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR5_processid}}'\"\r\n      },\r\n\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('PCEGBTNR6') and po.lstime >= (sysdate-1/24/4)\"\r\n      }\r\n\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "5acf12b2-f7e9-6ba0-3e41-9b6be60f717a",
      "name": "[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1",
      "description": "o  0 - ko Case - file stops - the format inside is not correct\r\no  1 - ko Case - name of the file is not correct\r\no  2 - ok Case - file go through next step",
      "item": [
        {
          "_postman_id": "33a0c739-0d33-dfc1-22f3-f84ad7f12fd5",
          "name": "[010100100FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file FGA\"] = true; ",
                  "       postman.setNextRequest(\"[010100100FGA]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "}",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170223_FGA_20170223105012_CHR02_SCALA_19-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "74fed59b-2187-c54d-16b3-bd8222f7bd26",
          "name": "[010100100FGA]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult != null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results != null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckStatutOrcEtape\":",
                  "                    tests[\"Check status in ORC_ETAPE\"] = sqlResult[i].results[0].ID_STATUT_ETAPE == \"2\";",
                  "                    break;",
                  "                case \"CheckStatutOrcEtapeMessage\":",
                  "                    tests[\"Check message in ORC_ETAPE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckAcqPceConservee\":",
                  "                    tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;",
                  "                case \"CheckStockAcquisitionForAcq\":",
                  "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;   ",
                  "                case \"CheckOrcProcessusReport\":",
                  "                    tests[\"Check Report of ORC_001 in ORC_ETAPES\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break; ",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[010100101FGA]Drop file FGA\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStatutOrcEtape\",\r\n         \"requestContent\":\"select id_statut_etape from orc_etapes where id_processus='{{[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}' and id_ref_etape='ACG_01_ORC_001'\"\r\n      },\r\n                  {  \r\n         \"requestId\":\"CheckStatutOrcEtapeMessage\",\r\n         \"requestContent\":\"select count(*) as COUNT from orc_etapes where id_processus='{{[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}' and resultat_etape like '%/Enveloppe_VICTOR_FGA/ :  Child element Publication {} at position 1 is unexpected%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('FGACRETNR1') and jour_gazier= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckOrcProcessusReport\",\r\n         \"requestContent\":\"select count(*) AS COUNT from orc_etapes where id_processus='{{[010100100FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}' and ( resultat_etape like '%Contrôler la validité du fichier en entrée%' /*Entête*/ and (resultat_etape like '%Heure de début de traitement : '||TO_char(sysdate,'DD/MM/YYYY HH24')||'%' or resultat_etape like '%Heure de début de traitement : '||TO_char(sysdate-1/24,'DD/MM/YYYY HH24')||'%') /*heure de début de traitement*/ and ( resultat_etape like '%Heure de fin de traitement : '||TO_char(sysdate,'DD/MM/YYYY HH24')||'%' or resultat_etape like '%Heure de fin de traitement : '||TO_char((sysdate+1/24),'DD/MM/YYYY HH24')||'%') /*heure de fin de traitement*/ and resultat_etape like '%Fichier : H20170223_FGA_20170223105012_CHR02_SCALA_19-1F.xml%' /* nom fichier*/ and resultat_etape like '%Statut : KO%' /*statut*/ and resultat_etape like '%/Enveloppe_VICTOR_FGA/ :  Child element Publication {} at position 1 is unexpected%' /*error message*/)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "44f1e6af-fee5-f35f-a5a6-5d7cdfe5d4de",
          "name": "[010100101FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[010100101FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[010100101FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file FGA\"] = true; ",
                  "       postman.setNextRequest(\"[010100101FGA]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "}",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170223_FGA_2017022310501_CHR02_SCALA_18-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "1fb9d6c5-6fa1-734b-d496-93aa91028cc3",
          "name": "[010100101FGA]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckStatutOrcEtape\":",
                  "                    tests[\"Check status in ORC_ETAPE\"] = sqlResult[i].results[0].ID_STATUT_ETAPE == \"2\";",
                  "                    break;",
                  "                case \"CheckStatutOrcEtapeMessage\":",
                  "                    tests[\"Check message in ORC_ETAPE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckAcqPceConservee\":",
                  "                    tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;",
                  "                case \"CheckStockAcquisitionForAcq\":",
                  "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;   ",
                  "                case \"CheckOrcProcessusReport\":",
                  "                    tests[\"Check Report of ORC_001 in ORC_ETAPES\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break; ",
                  "                 }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[010100102FGA]Delete data\");",
                  "",
                  "}",
                  "else{",
                  "    postman.setNextRequest(\"[010100102FGA]Delete data\");",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[010100101FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStatutOrcEtape\",\r\n         \"requestContent\":\"select id_statut_etape from orc_etapes where id_processus='{{[010100101FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}' and id_ref_etape='ACG_01_ORC_001'\"\r\n      },\r\n                  {  \r\n         \"requestId\":\"CheckStatutOrcEtapeMessage\",\r\n         \"requestContent\":\"select count(*) as COUNT from orc_etapes where id_processus='{{[010100101FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}' and resultat_etape like '%nom du fichier%' and resultat_etape like '%est pas conforme%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('FGACRETNR1') and jour_gazier= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[010100101FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[010100101FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckOrcProcessusReport\",\r\n         \"requestContent\":\"select count(*) AS COUNT from orc_etapes where id_processus='{{[010100101FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}' and ( resultat_etape like '%Contrôler la validité du fichier en entrée%' /*Entête*/ and (resultat_etape like '%Heure de début de traitement : '||TO_char(sysdate,'DD/MM/YYYY HH24')||'%' or resultat_etape like '%Heure de début de traitement : '||TO_char(sysdate-1/24,'DD/MM/YYYY HH24')||'%') /*heure de début de traitement*/ and ( resultat_etape like '%Heure de fin de traitement : '||TO_char(sysdate,'DD/MM/YYYY HH24')||'%' or resultat_etape like '%Heure de fin de traitement : '||TO_char((sysdate+1/24),'DD/MM/YYYY HH24')||'%') /*heure de fin de traitement*/ and resultat_etape like '%Fichier : H20170223_FGA_2017022310501_CHR02_SCALA_18-1F.xml%' /* nom fichier*/ and resultat_etape like '%Statut : KO%' /*statut*/ and resultat_etape like '%/Le nom du fichier n'est pas conforme%' /*error message*/)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "cb52a8ff-3c12-0872-c2f0-c3dd6542f9f9",
          "name": "[010100102FGA]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqFgaData\":",
                  "                tests[\"Delete Acq_Fga Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Fga Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[010100102FGA]Drop file FGA\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('24/02/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idfga in ('FGACRETNR1'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqFgaData\",\r\n         \"requestContent\":\"delete from acq_fga_conservee where uidacq_fga_conservee in (select uidacq_fga_conservee from acq_fga_conservee where code_acquisition in ('FGACRETNR1') and jour_gazier= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "216df435-9dd8-d64a-e3c1-77e9d202af9a",
          "name": "[010100102FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[010100102FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[010100102FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file FGA\"] = true; ",
                  "       postman.setNextRequest(\"[010100102FGA]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170223_FGA_20170223105013_CHR02_SCALA_18-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "52d08a38-ed59-c2ba-25fa-251139c9728b",
          "name": "[010100102FGA]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckStatutOrcEtape\":",
                  "                    tests[\"Check status in ORC_ETAPE\"] = sqlResult[i].results[0].ID_STATUT_ETAPE == \"3\";",
                  "                    break;",
                  "                case \"CheckAcqFgaConservee\":",
                  "                    tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckStockAcquisitionForAcq\":",
                  "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;   ",
                  "                case \"CheckOrcProcessusReport\":",
                  "                    tests[\"Check Report of ORC_001 in ORC_ETAPES\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break; ",
                  "                    ",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[010100102FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStatutOrcEtape\",\r\n         \"requestContent\":\"select id_statut_etape from orc_etapes where id_processus='{{[010100102FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}' and id_ref_etape='ACG_01_ORC_001'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('FGACRETNR1') and jour_gazier= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[010100102FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[010100102FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckOrcProcessusReport\",\r\n         \"requestContent\":\"select count(*) AS COUNT from orc_etapes where id_processus='{{[010100102FGA]PRO_ACG_01_FGA_ORC_001_FGACRETNR1_processid}}' and ( resultat_etape like '%Contrôler la validité du fichier en entrée%' /*Entête*/ and (resultat_etape like '%Heure de début de traitement : '||TO_char(sysdate,'DD/MM/YYYY HH24')||'%' or resultat_etape like '%Heure de début de traitement : '||TO_char(sysdate-1/24,'DD/MM/YYYY HH24')||'%') /*heure de début de traitement*/ and ( resultat_etape like '%Heure de fin de traitement : '||TO_char(sysdate,'DD/MM/YYYY HH24')||'%' or resultat_etape like '%Heure de fin de traitement : '||TO_char((sysdate+1/24),'DD/MM/YYYY HH24')||'%') /*heure de fin de traitement*/ and resultat_etape like '%Fichier : H20170223_FGA_20170223105013_CHR02_SCALA_18-1F.xml%' /* nom fichier*/ and resultat_etape like '%Statut : OK%' /*statut*/)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "a77e5cdb-9dfd-037d-2302-801e4498825b",
      "name": "[010100200FGA]PRO_ACG_01_FGA_ORC_002_FGACRETNR1",
      "description": "o  0 - ko Case - file stops here\r\no  1 - ok Case - file go through next step",
      "item": [
        {
          "_postman_id": "9a1e3b84-d6fc-2202-bc58-fa17a3a2f3e4",
          "name": "[010100200FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[010100200FGA]PRO_ACG_01_FGA_ORC_002_FGACRETNR1_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[010100200FGA]PRO_ACG_01_FGA_ORC_002_FGACRETNR1_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file FGA\"] = true; ",
                  "       postman.setNextRequest(\"[010100200FGA]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "}",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170223_FGA_20170223105012_CHR02_SCALA_19-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "3b8b2a89-02c6-09a0-2ebf-523d53e95efb",
          "name": "[010100200FGA]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult != null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results != null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckStatutOrcEtape\":",
                  "                    tests[\"Check status in ORC_ETAPE\"] = sqlResult[i].results[0].ID_STATUT_ETAPE == \"2\";",
                  "                    break;",
                  "                case \"CheckStatutOrcEtapeMessage\":",
                  "                    tests[\"Check message in ORC_ETAPE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckAcqPceConservee\":",
                  "                    tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;",
                  "                case \"CheckStockAcquisitionForAcq\":",
                  "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;   ",
                  "                case \"CheckOrcProcessusReport\":",
                  "                    tests[\"Check Report of ORC_001 in ORC_ETAPES\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break; ",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[010100201FGA]Delete data\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[010100200FGA]PRO_ACG_01_FGA_ORC_002_FGACRETNR1_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStatutOrcEtape\",\r\n         \"requestContent\":\"select id_statut_etape from orc_etapes where id_processus='{{[010100200FGA]PRO_ACG_01_FGA_ORC_002_FGACRETNR1_processid}}' and id_ref_etape='ACG_01_ORC_001'\"\r\n      },\r\n                  {  \r\n         \"requestId\":\"CheckStatutOrcEtapeMessage\",\r\n         \"requestContent\":\"select count(*) as COUNT from orc_etapes where id_processus='{{[010100200FGA]PRO_ACG_01_FGA_ORC_002_FGACRETNR1_processid}}' and resultat_etape like '%/Enveloppe_VICTOR_FGA/ :  Child element Publication {} at position 1 is unexpected%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('FGACRETNR1') and jour_gazier= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[010100200FGA]PRO_ACG_01_FGA_ORC_002_FGACRETNR1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[010100200FGA]PRO_ACG_01_FGA_ORC_002_FGACRETNR1_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckOrcProcessusReport\",\r\n         \"requestContent\":\"select count(*) AS COUNT from orc_etapes where id_processus='{{[010100200FGA]PRO_ACG_01_FGA_ORC_002_FGACRETNR1_processid}}' and ( resultat_etape like '%Contrôler la validité du fichier en entrée%' /*Entête*/ and (resultat_etape like '%Heure de début de traitement : '||TO_char(sysdate,'DD/MM/YYYY HH24')||'%' or resultat_etape like '%Heure de début de traitement : '||TO_char(sysdate-1/24,'DD/MM/YYYY HH24')||'%') /*heure de début de traitement*/ and ( resultat_etape like '%Heure de fin de traitement : '||TO_char(sysdate,'DD/MM/YYYY HH24')||'%' or resultat_etape like '%Heure de fin de traitement : '||TO_char((sysdate+1/24),'DD/MM/YYYY HH24')||'%') /*heure de fin de traitement*/ and resultat_etape like '%Fichier : H20170223_FGA_20170223105012_CHR02_SCALA_19-1F.xml%' /* nom fichier*/ and resultat_etape like '%Statut : KO%' /*statut*/ and resultat_etape like '%/Enveloppe_VICTOR_FGA/ :  Child element Publication {} at position 1 is unexpected%' /*error message*/)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a39cd7cf-6478-1c4d-4acb-ca252f9a3e10",
          "name": "[010100201FGA]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqFgaData\":",
                  "                tests[\"Delete Acq_Fga Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Fga Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[010100201FGA]Drop file FGA\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('24/02/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idfga in ('FGACRETNR1'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqFgaData\",\r\n         \"requestContent\":\"delete from acq_fga_conservee where uidacq_fga_conservee in (select uidacq_fga_conservee from acq_fga_conservee where code_acquisition in ('FGACRETNR1') and jour_gazier= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "d02c030c-4aa4-cc8e-2670-d0a80897bc35",
          "name": "[010100201FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[010100201FGA]PRO_ACG_01_FGA_ORC_002_FGACRETNR1_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[010100201FGA]PRO_ACG_01_FGA_ORC_002_FGACRETNR1_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file FGA\"] = true; ",
                  "       postman.setNextRequest(\"[010100201FGA]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170223_FGA_20170223105013_CHR02_SCALA_18-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "f7dad1f6-aeb0-b0e8-65f0-042e4f6fc1b7",
          "name": "[010100201FGA]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckStatutOrcEtape\":",
                  "                    tests[\"Check status in ORC_ETAPE\"] = sqlResult[i].results[0].ID_STATUT_ETAPE == \"3\";",
                  "                    break;",
                  "                case \"CheckAcqFgaConservee\":",
                  "                    tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckStockAcquisitionForAcq\":",
                  "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;   ",
                  "                case \"CheckOrcProcessusReport\":",
                  "                    tests[\"Check Report of ORC_001 in ORC_ETAPES\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break; ",
                  "                    ",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[010100201FGA]PRO_ACG_01_FGA_ORC_002_FGACRETNR1_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStatutOrcEtape\",\r\n         \"requestContent\":\"select id_statut_etape from orc_etapes where id_processus='{{[010100201FGA]PRO_ACG_01_FGA_ORC_002_FGACRETNR1_processid}}' and id_ref_etape='ACG_01_ORC_001'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('FGACRETNR1') and jour_gazier= TO_DATE('23/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[010100201FGA]PRO_ACG_01_FGA_ORC_002_FGACRETNR1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[010100201FGA]PRO_ACG_01_FGA_ORC_002_FGACRETNR1_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckOrcProcessusReport\",\r\n         \"requestContent\":\"select count(*) AS COUNT from orc_etapes where id_processus='{{[010100201FGA]PRO_ACG_01_FGA_ORC_002_FGACRETNR1_processid}}' and ( resultat_etape like '%Contrôler la validité du fichier en entrée%' /*Entête*/ and (resultat_etape like '%Heure de début de traitement : '||TO_char(sysdate,'DD/MM/YYYY HH24')||'%' or resultat_etape like '%Heure de début de traitement : '||TO_char(sysdate-1/24,'DD/MM/YYYY HH24')||'%') /*heure de début de traitement*/ and ( resultat_etape like '%Heure de fin de traitement : '||TO_char(sysdate,'DD/MM/YYYY HH24')||'%' or resultat_etape like '%Heure de fin de traitement : '||TO_char((sysdate+1/24),'DD/MM/YYYY HH24')||'%') /*heure de fin de traitement*/ and resultat_etape like '%Fichier : H20170223_FGA_20170223105013_CHR02_SCALA_18-1F.xml%' /* nom fichier*/ and resultat_etape like '%Statut : OK%' /*statut*/)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "868ed9a4-3415-25cd-93d5-ac8952254cce",
      "name": "[014200000PCE]PRO_ACG_42_PCE_ALL_ALL_SGPCETVPEC",
      "description": "o  0 - ok Case - file go through next step",
      "item": [
        {
          "_postman_id": "c3ead5dc-9481-5ec0-5d04-6c42b8694fc9",
          "name": "[014200000PCE]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[014200000PCE]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('22/03/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('23/03/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('SGPCETVPEC'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('SGPCETVPEC') and jour_gazier= TO_DATE('22/03/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "59a34e5a-0e31-082d-48ff-39b804cd5488",
          "name": "[014200000PCE]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[014200000PCE]PRO_ACG_42_PCE_ALL_ALL_SGPCETVPEC_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[014200000PCE]PRO_ACG_42_PCE_ALL_ALL_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[014200000PCE]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170322_PCE_20170322103422_CHR02_SCALA_3-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "f6f87adb-f0c5-cd65-5de0-e3325f85d703",
          "name": "[014200000PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[014200000PCE]PRO_ACG_42_PCE_ALL_ALL_SGPCETVPEC_processid\");",
                  "var sourceProcessid = postman.getEnvironmentVariable(\"[014200000PCE]PRO_ACG_42_PCE_ALL_ALL_SGPCETVPEC_sourceProcessId\");",
                  "    ",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckPayloadPresence\":",
                  "                    tests[\"Check Payload Presence\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckPayloadContent\":",
                  "                    var payload = xml2Json(sqlResult[i].results[0].PAYLOAD).BPMREQUEST.REPORT;",
                  "                    var inputParams = payload.INPUTPARAMS.INPUTPARAM;",
                  "                    tests[\"Check REQUESTID\"] = payload.REQUESTID == processid+\"ACG_01_PRO_ACG_42\";",
                  "                    tests[\"Check CORRELATIONID\"] = payload.CORRELATIONID == processid;",
                  "                    tests[\"Check PROCESSID\"] = payload.CORRELATIONID == processid;",
                  "                    tests[\"Check STEPID\"] = payload.STEPID == \"ACG_01_PRO_ACG_42\";",
                  "                    tests[\"Check RPTNAME\"] = payload.RPTNAME == \"RS_ACG_011_FIABILISATION_DATA_ACQUISE\";",
                  "                    tests[\"Check I102STR_DATE_CONSERVATION\"] = inputParams.find(function (d) { return d.$.NAME == \"I102STR_DATE_CONSERVATION\";}).$.VALUE == \"2017-03-22 10:34:22\"; ",
                  "                    tests[\"Check I102STR_SOURCE_PROCESSID\"] = inputParams.find(function (d) { return d.$.NAME == \"I102STR_SOURCE_PROCESSID\";}).$.VALUE == sourceProcessid;",
                  "                    tests[\"Check I102STR_HORODATE\"] = inputParams.find(function (d) { return d.$.NAME == \"I102STR_HORODATE\";}).$.VALUE == \"2017-03-22 06:00:00\";",
                  "                    tests[\"Check I102STR_TYPE_PERIODE\"] = inputParams.find(function (d) { return d.$.NAME == \"I102STR_TYPE_PERIODE\";}).$.VALUE == \"H\";",
                  "                    tests[\"Check I102STR_NOMFICHIER\"] = inputParams.find(function (d) { return d.$.NAME == \"I102STR_NOMFICHIER\";}).$.VALUE == \"H20170322_PCE_20170322103422_CHR02_SCALA_3-1F.xml\";",
                  "                    tests[\"Check I102STR_TYPE_FIAB\"] = inputParams.find(function (d) { return d.$.NAME == \"I102STR_TYPE_FIAB\";}).$.VALUE == \"ACQ\";",
                  "                    tests[\"Check I102STR_ACQ_FORCE\"] = inputParams.find(function (d) { return d.$.NAME == \"I102STR_ACQ_FORCE\";}).$.VALUE == \"N\";",
                  "                    tests[\"Check I102STR_MODE_LANCEMENT\"] = inputParams.find(function (d) { return d.$.NAME == \"I102STR_MODE_LANCEMENT\";}).$.VALUE == \"INIT\";",
                  "                    break;   ",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckPayloadPresence\",\r\n         \"requestContent\":\"select count(*) as COUNT from icepayloadext where externalid='{{[014200000PCE]PRO_ACG_42_PCE_ALL_ALL_SGPCETVPEC_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPayloadContent\",\r\n         \"requestContent\":\"select dbms_lob.substr( PAYLOAD, 4000, 1 ) as PAYLOAD from icepayloadext where externalid='{{[014200000PCE]PRO_ACG_42_PCE_ALL_ALL_SGPCETVPEC_processid}}'\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c5e493bf-fc99-00cb-8b96-4958deac2563",
          "name": "[014200000PCE]Check data response and dmd_calcul",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[014200000PCE]PRO_ACG_42_PCE_ALL_ALL_SGPCETVPEC_processid\");",
                  "var sourceProcessid = postman.getEnvironmentVariable(\"[014200000PCE]PRO_ACG_42_PCE_ALL_ALL_SGPCETVPEC_sourceProcessId\");",
                  "    ",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckEtrpmresponsePresence\":",
                  "                    tests[\"Check Payload Presence\"] = sqlResult[i].results[0].COUNT == \"9\";",
                  "                    break;",
                  "                case \"CheckEtrpmresponseMasterContent\":",
                  "                    var payload = xml2Json(sqlResult[i].results[0].PAYLOAD).RESPONSE.PARAMS.PARAM;",
                  "                    tests[\"Check REQUESTID\"] = payload.find(function (d) { return d.$.NAME == \"REQUESTID\";}).$.VALUE == processid+\"ACG_01_PRO_ACG_42\"; ",
                  "                    tests[\"Check RETURNCODE\"] = payload.find(function (d) { return d.$.NAME == \"RETURNCODE\";}).$.VALUE == \"0\";",
                  "                    break; ",
                  "                case \"CheckDmdCalculCreation\":",
                  "                    tests[\"Check DMD_CALCUL Creation\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckEtrpmresponsePresence\",\r\n         \"requestContent\":\"select count(*) as COUNT from etrpmresponse where processid='{{[014200000PCE]PRO_ACG_42_PCE_ALL_ALL_SGPCETVPEC_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckEtrpmresponseMasterContent\",\r\n         \"requestContent\":\"select dbms_lob.substr( PAYLOAD, 4000, 1 ) as PAYLOAD from etrpmresponse where processid='{{[014200000PCE]PRO_ACG_42_PCE_ALL_ALL_SGPCETVPEC_processid}}' and stepid='ACG_01_PRO_ACG_42'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckDmdCalculCreation\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where prec_processid='{{[014200000PCE]PRO_ACG_42_PCE_ALL_ALL_SGPCETVPEC_processid}}'\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "ffce5645-f23c-d067-d6a6-ceda065f2355",
      "name": "[014200000FGA]PRO_ACG_42_FGA_ALL_ALL_FGACRETNR",
      "description": "o  0 - ok Case - file go through next step",
      "item": [
        {
          "_postman_id": "a0548a34-5b5f-7089-0ee1-62dda6d2dafb",
          "name": "[014200000FGA]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqFgaData\":",
                  "                tests[\"Delete Acq_Fga Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Fga Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[014200000FGA]Drop file FGA\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('24/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('25/02/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idfga in ('FGACRETNR1'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqFgaData\",\r\n         \"requestContent\":\"delete from acq_fga_conservee where uidacq_fga_conservee in (select uidacq_fga_conservee from acq_fga_conservee where code_acquisition in ('FGACRETNR1') and jour_gazier= TO_DATE('24/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "76d116f3-a0ca-136c-c266-ac5a2e244cc3",
          "name": "[014200000FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"[014200000FGA]PRO_ACG_42_FGA_ALL_ALL_FGACRETNR1_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"[014200000FGA]PRO_ACG_42_FGA_ALL_ALL_FGACRETNR1_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file FGA\"] = true; ",
                  "       postman.setNextRequest(\"[014200000FGA]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170224_FGA_20170224105013_CHR02_SCALA_18-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ffa68ec9-40fa-8b26-9353-eedac2607991",
          "name": "[014200000FGA]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[014200000FGA]PRO_ACG_42_FGA_ALL_ALL_FGACRETNR1_processid\");",
                  "var sourceProcessid = postman.getEnvironmentVariable(\"[014200000FGA]PRO_ACG_42_FGA_ALL_ALL_FGACRETNR1_sourceProcessId\");",
                  "    ",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckPayloadPresence\":",
                  "                    tests[\"Check Payload Presence\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckPayloadContent\":",
                  "                    var payload = xml2Json(sqlResult[i].results[0].PAYLOAD).BPMREQUEST.REPORT;",
                  "                    var inputParams = payload.INPUTPARAMS.INPUTPARAM;",
                  "                    tests[\"Check REQUESTID\"] = payload.REQUESTID == processid+\"ACG_01_PRO_ACG_42\";",
                  "                    tests[\"Check CORRELATIONID\"] = payload.CORRELATIONID == processid;",
                  "                    tests[\"Check PROCESSID\"] = payload.CORRELATIONID == processid;",
                  "                    tests[\"Check STEPID\"] = payload.STEPID == \"ACG_01_PRO_ACG_42\";",
                  "                    tests[\"Check RPTNAME\"] = payload.RPTNAME == \"RS_ACG_011_FIABILISATION_DATA_ACQUISE\";",
                  "                    tests[\"Check I102STR_DATE_CONSERVATION\"] = inputParams.find(function (d) { return d.$.NAME == \"I102STR_DATE_CONSERVATION\";}).$.VALUE == \"2017-02-24 10:50:13\"; ",
                  "                    tests[\"Check I102STR_SOURCE_PROCESSID\"] = inputParams.find(function (d) { return d.$.NAME == \"I102STR_SOURCE_PROCESSID\";}).$.VALUE == sourceProcessid;",
                  "                    tests[\"Check I102STR_HORODATE\"] = inputParams.find(function (d) { return d.$.NAME == \"I102STR_HORODATE\";}).$.VALUE == \"2017-02-24 06:00:00\";",
                  "                    tests[\"Check I102STR_TYPE_PERIODE\"] = inputParams.find(function (d) { return d.$.NAME == \"I102STR_TYPE_PERIODE\";}).$.VALUE == \"H\";",
                  "                    tests[\"Check I102STR_NOMFICHIER\"] = inputParams.find(function (d) { return d.$.NAME == \"I102STR_NOMFICHIER\";}).$.VALUE == \"H20170224_FGA_20170224105013_CHR02_SCALA_18-1F.xml\";",
                  "                    tests[\"Check I102STR_TYPE_FIAB\"] = inputParams.find(function (d) { return d.$.NAME == \"I102STR_TYPE_FIAB\";}).$.VALUE == \"ACQ\";",
                  "                    tests[\"Check I102STR_ACQ_FORCE\"] = inputParams.find(function (d) { return d.$.NAME == \"I102STR_ACQ_FORCE\";}).$.VALUE == \"N\";",
                  "                    tests[\"Check I102STR_MODE_LANCEMENT\"] = inputParams.find(function (d) { return d.$.NAME == \"I102STR_MODE_LANCEMENT\";}).$.VALUE == \"INIT\";",
                  "                    break;   ",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckPayloadPresence\",\r\n         \"requestContent\":\"select count(*) as COUNT from icepayloadext where externalid='{{[014200000FGA]PRO_ACG_42_FGA_ALL_ALL_FGACRETNR1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPayloadContent\",\r\n         \"requestContent\":\"select dbms_lob.substr( PAYLOAD, 4000, 1 ) as PAYLOAD from icepayloadext where externalid='{{[014200000FGA]PRO_ACG_42_FGA_ALL_ALL_FGACRETNR1_processid}}'\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c014662f-9ca2-9443-9e43-11f5068e3be3",
          "name": "[014200000FGA]Check data response and dmd_calcul",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var processid = postman.getEnvironmentVariable(\"[014200000FGA]PRO_ACG_42_FGA_ALL_ALL_FGACRETNR1_processid\");",
                  "var sourceProcessid = postman.getEnvironmentVariable(\"[014200000FGA]PRO_ACG_42_FGA_ALL_ALL_FGACRETNR1_sourceProcessId\");",
                  "    ",
                  "",
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckEtrpmresponsePresence\":",
                  "                    tests[\"Check Payload Presence\"] = sqlResult[i].results[0].COUNT == \"9\";",
                  "                    break;",
                  "                case \"CheckEtrpmresponseMasterContent\":",
                  "                    var payload = xml2Json(sqlResult[i].results[0].PAYLOAD).RESPONSE.PARAMS.PARAM;",
                  "                    //var inputParams = payload.PARAMS;",
                  "                    console.log(payload);",
                  "                    tests[\"Check REQUESTID\"] = payload.find(function (d) { return d.$.NAME == \"REQUESTID\";}).$.VALUE == processid+\"ACG_01_PRO_ACG_42\"; ",
                  "                    tests[\"Check RETURNCODE\"] = payload.find(function (d) { return d.$.NAME == \"RETURNCODE\";}).$.VALUE == \"0\";",
                  "                    break; ",
                  "                case \"CheckDmdCalculCreation\":",
                  "                    tests[\"Check DMD_CALCUL Creation\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckEtrpmresponsePresence\",\r\n         \"requestContent\":\"select count(*) as COUNT from etrpmresponse where processid='{{[014200000FGA]PRO_ACG_42_FGA_ALL_ALL_FGACRETNR1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckEtrpmresponseMasterContent\",\r\n         \"requestContent\":\"select dbms_lob.substr( PAYLOAD, 4000, 1 ) as PAYLOAD from etrpmresponse where processid='{{[014200000FGA]PRO_ACG_42_FGA_ALL_ALL_FGACRETNR1_processid}}' and stepid='ACG_01_PRO_ACG_42'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckDmdCalculCreation\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where prec_processid='{{[014200000FGA]PRO_ACG_42_FGA_ALL_ALL_FGACRETNR1_processid}}'\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "bd10e2da-f5f2-7845-5df1-9ea3c8b4d557",
      "name": "[010100300FGA]PRO_ACG_01_FGA_ORC_003  - Todo",
      "description": "",
      "item": []
    },
    {
      "_postman_id": "de693150-035f-cb58-3949-8584eef4a60c",
      "name": "[010100300PCE]PRO_ACG_01_PCE_ORC_003  - Todo",
      "description": "",
      "item": []
    },
    {
      "_postman_id": "dad61058-679c-a623-5e01-9f4883daabbe",
      "name": "[010100400FGA]PRO_ACG_01_FGA_ORC_004  - Todo",
      "description": "",
      "item": []
    },
    {
      "_postman_id": "9c0fe640-a6ce-e595-a171-d205a3f86ef0",
      "name": "[010100400PCE]PRO_ACG_01_PCE_ORC_004  - Todo",
      "description": "",
      "item": []
    },
    {
      "_postman_id": "20d7dc0c-8866-a26b-77e8-77b4a78113f7",
      "name": "[010100500FGA]PRO_ACG_01_FGA_ORC_005  - Todo",
      "description": "",
      "item": []
    },
    {
      "_postman_id": "c0527bd4-6e3a-1723-96a4-bbed607650d1",
      "name": "[011000700FGA]PRO_ACG_10_FGA_ACG_007_FGATNR1 et FGATNR3",
      "description": "",
      "item": [
        {
          "_postman_id": "30e9acf7-8793-df23-5916-031dbaba626b",
          "name": "[011021001FGA]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqFgaData\":",
                  "                tests[\"Delete Acq_Fga Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Fga Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[011021001FGA]Drop file FGA\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idfga in ('FGATNR1'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqFgaData\",\r\n         \"requestContent\":\"delete from acq_fga_conservee where uidacq_fga_conservee in (select uidacq_fga_conservee from acq_fga_conservee where code_acquisition in ('FGATNR1') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "12557a07-d214-8ea4-38f2-e7a2e9c53ebd",
          "name": "[011021001FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011021001FGA]PRO_ACG_10_FGA_ACG_210_FGATNR1_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011021001FGA]PRO_ACG_10_FGA_ACG_210_FGATNR1_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file FGA\"] = true; ",
                  "   postman.setNextRequest(\"[011021001FGA]Check Data\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"J20170506_FGA_20170507104025_CHR02_SCALA_1-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"160\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "bd127b7a-afec-d61e-beda-1813bedbaf4c",
          "name": "[011021001FGA]Check Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult !== null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results !== null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckAcqFgaConservee\":",
                  "                tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"650\";",
                  "                break;",
                  "",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011021001FGA]Check SI\");",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011021001FGA]PRO_ACG_10_FGA_ACG_210_FGATNR1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('FGATNR1') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and  processid='{{[011021001FGA]PRO_ACG_10_FGA_ACG_210_FGATNR1_processid}}'\"\r\n      },\r\n\r\n\r\n      {  \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idfga in ('FGATNR1') and po.lstime >= (sysdate-1/24/4)\"\r\n      }\r\n\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7bc7ae79-0a68-b614-5de6-17583d73896d",
          "name": "[011021001FGA]Check SI",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckSIStockAcquisition\":",
                  "                    tests[\"Check SI in Stock Acquisition\"] = sqlResult[i].results[0].COUNT == \"52\";",
                  "                    break;",
                  "                case \"CheckAcqFgaConservee\":",
                  "                    tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "              ",
                  "               }",
                  "            }",
                  "        }",
                  "        ",
                  "    }",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckSIStockAcquisition\",\r\n         \"requestContent\":\"select count(*) as COUNT from Stock_acquisition2 where date_mesure = to_date('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and SI_SOURCE like ('Scala')and processid in ('{{[011021001FGA]PRO_ACG_10_FGA_ACG_210_FGATNR1_processid}}')\"\r\n      },\r\n                {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('FGATNR1') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid in ('{{[011021001FGA]PRO_ACG_10_FGA_ACG_210_FGATNR1_processid}}') and MOTIF_REJET_TRAITEMENT is null  \"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7a42e644-2fc6-72f2-1a84-add0d1083a3b",
          "name": "[011021001FGA]Check availibility",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckAvailabilityPCE\":",
                  "                    tests[\"Check availability in FGA\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"1\";",
                  "                    break;",
                  "                case \"CheckAcqFgaConservee\":",
                  "                    tests[\"Check Motif rejet in ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "              ",
                  "               }",
                  "            }",
                  "        }",
                  "        ",
                  "    }",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckAvailabilityFGA\",\r\n         \"requestContent\":\"select count(*) as COUNT from FGA where idFGA='FGATNR1' and date_debut <= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and date_fin > TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS')\"\r\n      },\r\n                {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('FGATNR1') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011021001FGA]PRO_ACG_10_FGA_ACG_210_FGATNR1_processid}}'and MOTIF_REJET_TRAITEMENT is null \"\r\n      }\r\n      \r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "e524cc32-bb76-72f6-648f-a5fd0d5549e3",
          "name": "[011021002FGA]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqFgaData\":",
                  "                tests[\"Delete Acq_Fga Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Fga Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[011021002FGA]Drop file FGA\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idfga in ('FGATNR2'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqFgaData\",\r\n         \"requestContent\":\"delete from acq_fga_conservee where uidacq_fga_conservee in (select uidacq_fga_conservee from acq_fga_conservee where code_acquisition in ('FGATNR2') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "d383a55c-2e69-7416-02df-a7a8bd2ca180",
          "name": "[011021002FGA]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011021002FGA]PRO_ACG_10_FGA_ACG_210_FGATNR2_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011021002FGA]PRO_ACG_10_FGA_ACG_210_FGATNR2_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file FGA\"] = true; ",
                  "   postman.setNextRequest(\"[011021002FGA]Check Data\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file FGA\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"J20170506_FGA_20170507104025_CHR02_SCALA_2-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"160\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "be22a53f-caac-ac68-2993-83d6f060f20a",
          "name": "[011021002FGA]Check Data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult !== null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results !== null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckAcqFgaConservee\":",
                  "                tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011021002FGA]Check non availibility\");",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011021002FGA]PRO_ACG_10_FGA_ACG_210_FGATNR2_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('FGATNR2') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and  processid='{{[011021002FGA]PRO_ACG_10_FGA_ACG_210_FGATNR2_processid}}'\"\r\n      },\r\n\r\n\r\n      {  \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idfga in ('FGATNR2') and po.lstime >= (sysdate-1/24/4)\"\r\n      }\r\n\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ebd75e9b-d320-04e1-d647-e82b98045365",
          "name": "[011021002FGA]Check non availibility",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckNonAvailabilityFGA\":",
                  "                    tests[\"Check non availability in FGA\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckAcqFgaConservee\":",
                  "                    tests[\"Check Motif rejet in ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "              ",
                  "               }",
                  "            }",
                  "        }",
                  "        ",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n   \t  \r\n      {  \r\n      \t\r\n         \"requestId\":\"CheckNonAvailabilityFGA\",\r\n         \"requestContent\":\"select count(*) as COUNT from FGA where idFGA='FGATNR2' and date_debut > TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS')\"\r\n      },\r\n                {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('FGATNR2') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[011021002FGA]PRO_ACG_10_FGA_ACG_210_FGATNR2_processid}}'and MOTIF_REJET_TRAITEMENT = 'FGA non valide'\"\r\n      }\r\n    \r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "316dd8f8-5320-3d3b-1a31-982dd2753861",
      "name": "[011000700PCE]PRO_ACG_10_PCE_ACG_007_PCETNR1 et PCETNR7",
      "description": "",
      "item": [
        {
          "_postman_id": "4db50c44-80a4-fa57-7849-0e6f5a0eaa81",
          "name": "[011000701PCE]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[011000701PCE]Drop file PCE T partial\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('PCEGBTNR7'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('PCEGBTNR7') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "fa21cc56-3a13-ac85-7ac2-27a6a7c6410d",
          "name": "[011000701PCE]Drop file PCE T partial",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011000701PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR7_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011000701PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR7_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file PCE\"] = true; ",
                  "   postman.setNextRequest(\"[011000701PCE]Check Data PCE T partial\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"J20170506_PCE_20170507104025_CHR02_SCALA_71-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"140\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "ff3c3144-9f00-aeb6-a3f4-eea2262d3375",
          "name": "[011000701PCE]Check Data PCE T partial",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult !== null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results !== null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckAcqPceConservee\":",
                  "                tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionForAcq\":",
                  "                tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"150\";",
                  "                break;   ",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"325\";",
                  "                break;",
                  "",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011021001PCE]Check SI\");",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011021001PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('PCEGBTNR1') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and  processid='{{[011021001PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR1_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[011000701PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR1_processid}}'and Type_CHR in ('VOLSYS','PREINS') and VALEUR_MESURE_ACQ is null and QUALITE_MESURE_ACQ is nul\"\r\n      },\r\n\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('PCEGBTNR1') and g.TYPE_GRANDEUR= 'VOLCCU' and po.valeur = '0'  and po.lstime >= (sysdate-1/24/4)\"\r\n      }\r\n\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "3a48704a-675f-9f56-6d72-4d9d75d53a5f",
          "name": "[011021001PCE]Check SI",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult !== null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results !== null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckSIStockAcquisition\":",
                  "                    tests[\"Check SI in Stock Acquisition\"] = sqlResult[i].results[0].COUNT == \"325\";",
                  "                    break;",
                  "                case \"CheckAcqPceConservee\":",
                  "                    tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "              ",
                  "               }",
                  "            }",
                  "        }",
                  "        ",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckSIStockAcquisition\",\r\n         \"requestContent\":\"select count(*) as COUNT from Stock_acquisition2 where processid in  ('{{[011021001PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR1_processid}}')and SI_SOURCE= 'Scala'\"\r\n      },\r\n                {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('PCEGBTNR1') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and  processid='{{[011021001PCE]PRO_ACG_10_PCE_ACG_210_PCEGBTNR1_processid}}' and Motif_rejet_stockage is null \"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "86dd92e7-d951-00cb-b081-1773c446ec2b",
          "name": "[011000703PCE]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[011000701PCE]Drop file PCE T\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('PCEGBTNR8'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('PCEGBTNR8') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "5f787b19-bf8d-de62-fa5a-7484ce181ead",
          "name": "[011000703PCE]Drop file PCE E Full",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011000703PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR8_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011000703PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR8_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file PCE\"] = true; ",
                  "   postman.setNextRequest(\"[011000703PCE]Check Data PCE E Full\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"J20170506_PCE_20170507104025_CHR02_SCALA_7-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"140\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "d7728c56-815d-4589-416a-f08ee6703c52",
          "name": "[011000703PCE]Check Data PCE E Full",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult !== null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results !== null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckAcqPceConservee\":",
                  "                tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionForAcq\":",
                  "                tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"50\";",
                  "                break;   ",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"25\";",
                  "                break;",
                  "",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011000702PCE]Drop second file PCE T \");",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011000703PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR9_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('PCEGBTNR9') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and  processid='{{[011000703PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR9_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{[011000701PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR7_processid}}'and Type_CHR in ('VOLCCU','PREINS') and VALEUR_MESURE_ACQ <> ULL null and QUALITE_MESURE_ACQ is null and a_calculer = 'OUI'\"\r\n      },\r\n\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('PCEGBTNR7') and g.TYPE_GRANDEUR= 'VOLCCU' and po.valeur = '0' and po.Uidqualite_point = '15' and po.lstime >= (sysdate-1/24/4)\"\r\n      }\r\n\r\n   ]\r\n}"
            },
            "description": "- Check that the processus have been consumed and appears on the table ORC_PROCESSUS\n- Check on the table stock acq 2 that for a PCE T :\n   _ The Chroniques that were missed have been initialized to the value 'NULL' and that there quality is 'M' (corresponds to 15)\n   _ The choice of the chroniques here was for: VOLCCU and PREINS\n_ Check in point that the values of the chroniques missing were initialized at 0 and their UIDquality_point at 15 "
          },
          "response": []
        },
        {
          "_postman_id": "aaf9fb90-1ba3-cb02-95b7-47f84ba9a3e8",
          "name": "[011000704PCE]Drop second file PCE E",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011000701PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR7_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011000701PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR7_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file PCE\"] = true; ",
                  "   postman.setNextRequest(\"[011000702PCE]Check Data second file\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"J20170506_PCE_20170507104025_CHR02_SCALA_7-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"140\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "4517e480-a71a-e6c4-d1ca-6e7bd3d64436",
          "name": "[011000704PCE]Check Data second file",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult !== null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results !== null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckAcqPceConservee\":",
                  "                tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionForAcq\":",
                  "                tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;   ",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"25\";",
                  "                break;",
                  "",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[0110210731PCE]Check SI\");",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011000701PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR7_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('PCEGBTNR7') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and  processid='{{[011000702PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR7_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{[011000702PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR7_processid}}'and Type_CHR in ('VOLSYS','PREINS') and VALEUR_MESURE_ACQ is null and QUALITE_MESURE_ACQ is null and A_calculer = 'OUI'\"\r\n      },\r\n\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('PCEGBTNR7') and g.TYPE_GRANDEUR= 'VOLCCU' and po.valeur = '0' and po.Uidqualite_point = '15' and po.lstime >= (sysdate-1/24/4)\"\r\n      }\r\n\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a9c0cd63-a3c2-8c71-f9d4-aed1f0525c5c",
          "name": "[011000700PCE]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[011000701PCE]Drop file PCE T\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('PCEGBTNR7'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('PCEGBTNR7') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "80f6e7aa-cc92-577c-b062-e36e0ef86ac3",
          "name": "[011000700PCE]Drop file PCE T Full",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011000700PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR7_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011000700PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR7_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file PCE\"] = true; ",
                  "   postman.setNextRequest(\"[011000700PCE]Check Data PCE T Full\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"J20170506_PCE_20170507104025_CHR02_SCALA_7-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"140\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "fbef20ea-bc7e-c15a-6f03-ed1b5b1f9d60",
          "name": "[011000700PCE]Check Data PCE T Full",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult !== null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results !== null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckAcqPceConservee\":",
                  "                tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionForAcq\":",
                  "                tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"50\";",
                  "                break;   ",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"25\";",
                  "                break;",
                  "",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011000701PCE]Delete data\");",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011000700PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR7_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('PCEGBTNR7') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and  processid='{{[011000700PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR7_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{[011000700PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR7_processid}}'and Type_CHR in ('VOLCCU','PREINS', 'PREMOY', 'PREMOY','TEMMOY','VOLBAL','VOLBCP','VOLBCR','VOLBCR', 'VOLCCR') and VALEUR_MESURE_ACQ <> null and QUALITE_MESURE_ACQ <>  null and a_calculer = 'OUI'\"\r\n      },\r\n\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('PCEGBTNR7') and g.TYPE_GRANDEUR in ( 'VOLCCU','PREINS', 'PREMOY', 'PREMOY','TEMMOY','VOLBAL','VOLBCP','VOLBCR','VOLBCR', 'VOLCCR') and po.valeur <> '0' and po.Uidqualite_point <> '15' and po.lstime >= (sysdate-1/24/4)\"\r\n      }\r\n\r\n   ]\r\n}"
            },
            "description": "- Check that the processus have been consumed and appears on the table ORC_PROCESSUS\n- Check on the table stock acq 2 that for a PCE T :\n   _ The Chroniques that were missed have been initialized to the value 'NULL' and that there quality is 'M' (corresponds to 15)\n   _ The choice of the chroniques here was for: VOLCCU and PREINS\n_ Check in point that the values of the chroniques missing were initialized at 0 and their UIDquality_point at 15 "
          },
          "response": []
        },
        {
          "_postman_id": "cd81adc0-7e7b-31ad-fff4-6dd4d536a9b1",
          "name": "[011000705PCE]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[011000701PCE]Drop file PCE T\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('PCEGBTNR7'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('PCEGBTNR7') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "886283e0-a72b-1d4c-e430-2530d8f5df1a",
          "name": "[011000704PCE]Drop file PCE E partial",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[011000701PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR7_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[011000701PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR7_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file PCE\"] = true; ",
                  "   postman.setNextRequest(\"[011000701PCE]Check Data PCE T partial\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"J20170506_PCE_20170507104025_CHR02_SCALA_71-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"140\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "35b6e459-77b2-f685-d6b4-65ef317d33c9",
          "name": "[011000701PCE]Delete data copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[011000701PCE]Drop file PCE T partial\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('PCEGBTNR7'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('PCEGBTNR7') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "375c1640-f2f4-de86-0982-efaa084fec2d",
          "name": "[011000703PCE]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[011000701PCE]Drop file PCE T\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('PCEGBTNR8'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('PCEGBTNR8') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "55824b2e-ec0d-a245-9e57-a8a469ad0019",
          "name": "[011000704PCE]Delete data copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if ( tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[011000701PCE]Drop file PCE T\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/05/2017 09:00:00','DD/MM/YYYY HH24:MI:SS') and Idpce in ('PCEGBTNR8'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('PCEGBTNR8') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a704ad5e-4c24-3994-c1ea-76c0a4126998",
          "name": "[011000703PCE]Check Data PCE E Full copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult !== null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results !== null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckAcqPceConservee\":",
                  "                tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionForAcq\":",
                  "                tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"50\";",
                  "                break;   ",
                  "            case \"CheckPointData\":",
                  "                tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"25\";",
                  "                break;",
                  "",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "postman.setNextRequest(\"[011000702PCE]Drop second file PCE T \");",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[011000703PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR9_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('PCEGBTNR9') and jour_gazier= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and  processid='{{[011000703PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR9_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{[011000701PCE]PRO_ACG_10_PCE_ACG_007_PCEGBTNR7_processid}}'and Type_CHR in ('VOLCCU','PREINS') and VALEUR_MESURE_ACQ <> ULL null and QUALITE_MESURE_ACQ is null and a_calculer = 'OUI'\"\r\n      },\r\n\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('06/05/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('07/06/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('PCEGBTNR7') and g.TYPE_GRANDEUR= 'VOLCCU' and po.valeur = '0' and po.Uidqualite_point = '15' and po.lstime >= (sysdate-1/24/4)\"\r\n      }\r\n\r\n   ]\r\n}"
            },
            "description": "- Check that the processus have been consumed and appears on the table ORC_PROCESSUS\n- Check on the table stock acq 2 that for a PCE T :\n   _ The Chroniques that were missed have been initialized to the value 'NULL' and that there quality is 'M' (corresponds to 15)\n   _ The choice of the chroniques here was for: VOLCCU and PREINS\n_ Check in point that the values of the chroniques missing were initialized at 0 and their UIDquality_point at 15 "
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "8c26d9b9-e680-d443-83da-b65398793100",
      "name": "[010700101PCE]PRO_ACG_07_PCE_ACG_001_TNRVER01",
      "description": "o  0 - ko Case - file stops here\r\no  1 - ok Case - file go through next step",
      "item": [
        {
          "_postman_id": "97874159-d28e-6c0d-0206-e89dd292dd8d",
          "name": "[010700101PCE]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"[010100200PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid\",jsonData.processId);",
                  "postman.setEnvironmentVariable(\"[010100200PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                  "",
                  "if (jsonData.statusProcess === \"2\"){",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);",
                  "}",
                  "else if (jsonData.statusProcess === \"4\"){",
                  "   tests[\"Check drop file PCE\"] = true; ",
                  "   postman.setNextRequest(\"[010100200PCE]Check data\");",
                  "}",
                  "else {",
                  "    tests[\"Check drop file PCE\"] = false;",
                  "    //postman.setNextRequest(null);  ",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170320_PCE_20170320103422_CHR02_SCALA_3-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7aa56c58-66f4-06be-3b89-f427a29ea170",
          "name": "[010700101PCE]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var sqlResult = jsonData.sqlResult;",
                  "if(sqlResult != null){",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        if(sqlResult[i].results != null){",
                  "            switch (sqlResult[i].requestId) {",
                  "            case \"CheckStatutOrcProcessus\":",
                  "                tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                break;",
                  "            case \"CheckStatutOrcEtape\":",
                  "                tests[\"Check status in ORC_ETAPE\"] = sqlResult[i].results[0].ID_STATUT_ETAPE == \"2\";",
                  "                break;",
                  "            case \"CheckStatutOrcEtapeMessage\":",
                  "                tests[\"Check message in ORC_ETAPE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "            case \"CheckAcqPceConservee\":",
                  "                tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;",
                  "            case \"CheckStockAcquisitionForAcq\":",
                  "                tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                break;   ",
                  "            }",
                  "        }",
                  "    }",
                  "}",
                  "//postman.setNextRequest(\"[011102407]Delete and Update data\");",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[010100200PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStatutOrcEtape\",\r\n         \"requestContent\":\"select id_statut_etape from orc_etapes where id_processus='{{[010100200PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}' and id_ref_etape='ACG_01_ORC_001'\"\r\n      },\r\n                  {  \r\n         \"requestId\":\"CheckStatutOrcEtapeMessage\",\r\n         \"requestContent\":\"select count(*) as COUNT from orc_etapes where id_processus='{{[010100200PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}' and resultat_etape like '%/Enveloppe_VICTOR_PCE/ :  Child element Publication {} at position 1 is unexpected%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('SGPCETVPEC') and jour_gazier= TO_DATE('20/03/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and processid='{{[010100200PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{[010100200PCE]PRO_ACG_01_PCE_ORC_001_SGPCETVPEC_processid}}'\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    }
  ]
}