{
  "variables": [],
  "info": {
    "name": "TNR",
    "_postman_id": "02f4a671-0bd2-eaab-74f6-f1f6cc5fa4ca",
    "description": "Check the cases of ACG-024 for FGA",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "d1862db7-282a-45d8-d3c7-2b758fc30440",
      "name": "[00001]PRO_ACG_01_FGA_TNR_SGTUH97A",
      "description": "",
      "item": [
        {
          "_postman_id": "3d287fb1-a054-9799-f78b-fea303a742d7",
          "name": "[00001]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqFgaData\":",
                  "                tests[\"Delete Acq_Fga Data\"] = true;",
                  "                break;",
                  "            case \"DeletePubPointJmnFgaData\":",
                  "                tests[\"Delete Pub_Point_Jmn_Fga Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if (tests[\"Delete Point Data\"] && tests[\"Delete Acq_Fga Data\"] && tests[\"Delete Pub_Point_Jmn_Fga Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[00001]Drop file FGA\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('20/01/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idfga in ('SGTUH97A'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqFgaData\",\r\n         \"requestContent\":\"delete from acq_fga_conservee where uidacq_fga_conservee in (select uidacq_fga_conservee from acq_fga_conservee where code_acquisition in ('SGTUH97A') and jour_gazier= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeletePubPointJmnFgaData\",\r\n         \"requestContent\":\"delete from pub_point_jmn_fga where uidgrandeur in (select pp.uidgrandeur from pub_point_jmn_fga pp, fga p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idfga='SGTUH97A' and horodate between TO_DATE('2017-01-19 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-01-20 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "0a9f0e9d-a58d-9d82-c8ae-c0d5a6b1eea7",
          "name": "[00001]Drop file FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"PRO_ACG_01_FGA_TNR_SGTUH97A_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"PRO_ACG_01_FGA_TNR_SGTUH97A_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file FGA\"] = true; ",
                  "       postman.setNextRequest(\"[00001]Check process cal end\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file FGA\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170119_FGA_20170119185806_CHR02_SCALA_5-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "cd39ab8e-f11a-768a-5891-4dd27b33902f",
          "name": "[00001]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "       postman.setNextRequest(\"[00001]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{PRO_ACG_01_FGA_TNR_SGTUH97A_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "e41b00d0-1d40-8db5-25f7-9feb33a267c8",
          "name": "[00001]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult != null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results != null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckAcqFgaConservee\":",
                  "                    tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckStockAcquisition2\":",
                  "                    tests[\"Check STOCK_ACQUISITION2\"] = sqlResult[i].results[0].COUNT == \"338\";",
                  "                    break;",
                  "                case \"CheckDmdCalcul\":",
                  "                    tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckStockAcquisitionCal\":",
                  "                    tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;",
                  "                case \"CheckPointData\":",
                  "                    tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"338\";",
                  "                    break;",
                  "                case \"CheckPubPointJmnFgaData\":",
                  "                    tests[\"Check PUB_POINT_JMN_FGA data\"] = sqlResult[i].results[0].COUNT == \"338\";",
                  "                    break;",
                  "                case \"CheckStockAcquisitionForAcq\":",
                  "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;   ",
                  "                case \"CheckStockAcquisitionForCal\":",
                  "                    tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break; ",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[00002]Delete data\");",
                  "",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('SGTUH97A') and jour_gazier= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and lstime >= sysdate-1/24\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where prec_processid='{{PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('20/01/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idfga in ('SGTUH97A') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPubPointJmnFgaData\",\r\n         \"requestContent\":\"select count(*) as COUNT from PUB_POINT_jmn_fga pp  inner join grandeur on pp.uidgrandeur = grandeur.uidgrandeur  where  horodate between TO_DATE('2017-01-19 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-01-20 05:00:00', 'YYYY-MM-DD HH24:MI:SS')  and idgrandeur like '%SGTUH97A%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}')\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "41c4d5fe-4a18-1509-8b8c-8457910d18d6",
      "name": "[00002]PRO_ACG_01_PCE_TNR_SGGUR1133A",
      "description": "",
      "item": [
        {
          "_postman_id": "fc67aefe-6477-79f5-ef80-e4cbfe172e9a",
          "name": "[00002]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "            case \"DeletePubPointData\":",
                  "                tests[\"Delete Pub_Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteEtrMeteringDataData\":",
                  "                tests[\"Delete Etr_Metering_Data Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAlerte\":",
                  "                tests[\"Delete Alerte\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if (tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"] && tests[\"Delete Pub_Point Data\"] && tests[\"Delete Alerte\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[00002]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "postman.setNextRequest(\"[00002]Drop file PCE\");"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('27/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('28/02/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('SGGUR1133A'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('SGGUR1133A') and jour_gazier= TO_DATE('27/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeletePubPointData\",\r\n         \"requestContent\":\"delete from pub_point where uidgrandeur in (select pp.uidgrandeur from pub_point pp, pce p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idpce='SGGUR1133A' and horodate between TO_DATE('2017-02-27 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-28 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteEtrMeteringDataData\",\r\n         \"requestContent\":\"delete from ETR_METERING_DATA  where  gas_day between TO_DATE('2017-02-27 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-28 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and insertion_date >= (sysdate-1/24/4) and pce_code like '%SGGUR1133A%'\"\r\n      },\r\n      {  \r\n      \"requestId\":\"DeleteAlerte\",\r\n         \"requestContent\":\"delete from Alerte where  uidalerte in (select uidalerte from alerte, pce where  alerte.uidgrandeurs_objet=pce.uidgrandeurs_objet and IDPCE='SGGUR1133A' and horodate between TO_DATE('2017-02-27 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-28 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n     }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "b8106c52-3db4-1f47-7ff9-6fd31b62578e",
          "name": "[00002]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"PRO_ACG_01_PCE_TNR_SGGUR1133A_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"PRO_ACG_01_PCE_TNR_SGGUR1133A_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[00002]Check process cal end\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170227_PCE_20170227131828_CHR02_SCALA_12-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "2c437969-ddbb-4524-193d-9d003085db1c",
          "name": "[00002]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "       postman.setNextRequest(\"[00002]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{PRO_ACG_01_PCE_TNR_SGGUR1133A_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "c66cce13-f48c-b01b-a986-6df00f7b8cb2",
          "name": "[00002]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult != null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results != null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckAcqPceConservee\":",
                  "                    tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckStockAcquisition2\":",
                  "                    tests[\"Check STOCK_ACQUISITION2\"] = sqlResult[i].results[0].COUNT == \"104\";",
                  "                    break;",
                  "                case \"CheckDmdCalcul\":",
                  "                    tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckStockAcquisitionCal\":",
                  "                    tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"176\";",
                  "                    break;",
                  "                case \"CheckPointData\":",
                  "                    tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"24\";",
                  "                    break;",
                  "                case \"CheckPubPointData\":",
                  "                    tests[\"Check PUB_POINT data\"] = sqlResult[i].results[0].COUNT == \"248\";",
                  "                    break;",
                  "                case \"CheckEtrMeteringDataData\":",
                  "                    tests[\"Check ETR_METERING_DATA data\"] = sqlResult[i].results[0].COUNT == \"39\";",
                  "                    break;",
                  "                case \"CheckStockAcquisitionForAcq\":",
                  "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;   ",
                  "                case \"CheckStockAcquisitionForCal\":",
                  "                    tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break; ",
                  "                case \"CheckAlerte\" :",
                  "                    tests[\"Check Alerte\"] = sqlResult[i].results[0].COUNT >= \"10\";",
                  "                    break; ",
                  "                } ",
                  "            }",
                  "        } ",
                  "    }",
                  "    postman.setNextRequest(\"[00003]Delete data\");",
                  "    ",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult != null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results != null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckAcqPceConservee\":",
                  "                    tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckStockAcquisition2\":",
                  "                    tests[\"Check STOCK_ACQUISITION2\"] = sqlResult[i].results[0].COUNT == \"104\";",
                  "                    break;",
                  "                case \"CheckDmdCalcul\":",
                  "                    tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckStockAcquisitionCal\":",
                  "                    tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"176\";",
                  "                    break;",
                  "                case \"CheckPointData\":",
                  "                    tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"24\";",
                  "                    break;",
                  "                case \"CheckPubPointData\":",
                  "                    tests[\"Check PUB_POINT data\"] = sqlResult[i].results[0].COUNT == \"248\";",
                  "                    break;",
                  "                case \"CheckEtrMeteringDataData\":",
                  "                    tests[\"Check ETR_METERING_DATA data\"] = sqlResult[i].results[0].COUNT == \"39\";",
                  "                    break;",
                  "                case \"CheckStockAcquisitionForAcq\":",
                  "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;   ",
                  "                case \"CheckStockAcquisitionForCal\":",
                  "                    tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break; ",
                  "                case \"CheckAlerte\" :",
                  "                    tests[\"Check Alerte\"] = sqlResult[i].results[0].COUNT >= \"10\";",
                  "                    break; ",
                  "                } ",
                  "            }",
                  "        } ",
                  "    }",
                  "    postman.setNextRequest(\"[00003]Delete data\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{PRO_ACG_01_PCE_TNR_SGGUR1133A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('SGGUR1133A') and jour_gazier= TO_DATE('27/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and lstime >= sysdate-1/24\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_01_PCE_TNR_SGGUR1133A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where lstime >=(sysdate-1/24/4) and prec_processid='{{PRO_ACG_01_PCE_TNR_SGGUR1133A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_01_PCE_TNR_SGGUR1133A_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('27/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('28/02/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('SGGUR1133A') and type_grandeur in ('VOLPEC','ENEPEC','PCSMOY') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPubPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from PUB_POINT  inner join grandeur on pub_point.uidgrandeur = grandeur.uidgrandeur  where  horodate between TO_DATE('2017-02-27 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-28 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and date_modif >= (sysdate-1/24/4) and idgrandeur like '%SGGUR1133A%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckEtrMeteringDataData\",\r\n         \"requestContent\":\"select count(*) as COUNT from ETR_METERING_DATA  where  gas_day between TO_DATE('2017-02-27 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-28 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and insertion_date >= (sysdate-1/24/4) and pce_code like '%SGGUR1133A%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_01_PCE_TNR_SGGUR1133A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_01_PCE_TNR_SGGUR1133A_processid}}')\"\r\n         \r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAlerte\",\r\n         \"requestContent\":\"select count(*) as count from alerte, pce where  alerte.uidgrandeurs_objet=pce.uidgrandeurs_objet and IDPCE='SGGUR1133A'and alerte.lstime>=(sysdate-1/24/4) order by horodate desc, uidtest_ref desc,alerte.LSTIME DESC \"\r\n         \r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "21dcf168-4823-92b5-0837-638b5ced0893",
      "name": "[00004]PRO_ACG_39_PCE_TNR_VERTEST2A",
      "description": "",
      "item": [
        {
          "_postman_id": "ab3afc23-dae5-a3f1-6570-0be2e3e00cc8",
          "name": "[00004]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "            case \"DeletePubPointData\":",
                  "                tests[\"Delete Pub_Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteEtrMeteringDataData\":",
                  "                tests[\"Delete Etr_Metering_Data Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if (tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"] && tests[\"Delete Pub_Point Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[00004]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "postman.setNextRequest(\"[00003]Drop file PCE\");"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('16/06/2016 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('17/06/2016 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('VERTEST2A'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('VERTEST2A') and jour_gazier= TO_DATE('16/06/2016 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeletePubPointData\",\r\n         \"requestContent\":\"delete from pub_point where uidgrandeur in (select pp.uidgrandeur from pub_point pp, pce p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idpce='VERTEST2A' and horodate between TO_DATE('2016-06-16 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2016-06-17 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteEtrMeteringDataData\",\r\n         \"requestContent\":\"delete from ETR_METERING_DATA  where  gas_day between TO_DATE('2016-06-16 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2016-06-16 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and insertion_date >= (sysdate-1/24/4) and pce_code like '%VERTEST2A%'\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "85c7d665-699f-80b9-7c90-d69eaefca29c",
          "name": "[00004]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"PRO_ACG_39_PCE_TNR_VERTEST2A_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"PRO_ACG_39_PCE_TNR_VERTEST2A_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[00004]Check process cal end\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"EDHOUARD_PCE_FGA\",\"fileName\":\"H20160616_PCE_20160616163547_CHR01_EDHOUARD_240-1F.xml.gz\",\"wait\":\"false\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "b6493348-ab6b-9e62-bcea-9a022fce8207",
          "name": "[00004]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "       postman.setNextRequest(\"[00004]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{PRO_ACG_39_PCE_TNR_VERTEST2A_sourceProcessId}}\",\"waitTimeout\":\"10\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "6cc113c3-0ea6-029e-9db9-33f5e17b73c5",
          "name": "[00004]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult != null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results != null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessus\":",
                  "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckAcqPceConservee\":",
                  "                    tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckStockAcquisition2\":",
                  "                    tests[\"Check STOCK_ACQUISITION2\"] = sqlResult[i].results[0].COUNT == \"104\";",
                  "                    break;",
                  "                case \"CheckDmdCalcul\":",
                  "                    tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                    break;",
                  "                case \"CheckStockAcquisitionCal\":",
                  "                    tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"176\";",
                  "                    break;",
                  "                case \"CheckPointData\":",
                  "                    tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"24\";",
                  "                    break;",
                  "                case \"CheckPubPointData\":",
                  "                    tests[\"Check PUB_POINT data\"] = sqlResult[i].results[0].COUNT == \"248\";",
                  "                    break;",
                  "                case \"CheckEtrMeteringDataData\":",
                  "                    tests[\"Check ETR_METERING_DATA data\"] = sqlResult[i].results[0].COUNT == \"39\";",
                  "                    break;",
                  "                case \"CheckStockAcquisitionForAcq\":",
                  "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break;   ",
                  "                case \"CheckStockAcquisitionForCal\":",
                  "                    tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                    break; ",
                  "                } ",
                  "            }",
                  "        } ",
                  "    }",
                  "",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{PRO_ACG_39_PCE_TNR_VERTEST2A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('VERTEST2A') and jour_gazier= TO_DATE('16/06/2016 06:00:00','DD/MM/YYYY HH24:MI:SS') and lstime >= sysdate-1/24\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_39_PCE_TNR_VERTEST2A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where lstime >=(sysdate-1/24/4) and prec_processid='{{PRO_ACG_39_PCE_TNR_VERTEST2A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_39_PCE_TNR_VERTEST2A_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('16/06/2016 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('17/06/2016 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('VERTEST2A') and type_grandeur in ('VOLPEC','ENEPEC','PCSMOY') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPubPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from PUB_POINT  inner join grandeur on pub_point.uidgrandeur = grandeur.uidgrandeur  where  horodate between TO_DATE('2016-06-16 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2016-06-17 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and date_modif >= (sysdate-1/24/4) and idgrandeur like '%VERTEST2A%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckEtrMeteringDataData\",\r\n         \"requestContent\":\"select count(*) as COUNT from ETR_METERING_DATA  where  gas_day between TO_DATE('2016-06-16 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2016-06-17 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and insertion_date >= (sysdate-1/24/4) and pce_code like '%VERTEST2A%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_39_PCE_TNR_VERTEST2A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_39_PCE_TNR_VERTEST2A_processid}}')\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "5054b9d2-90e5-d606-e3bf-da67797d2a5e",
      "name": "[00003]PRO_ACG_03_PCE_TNR_METNEEPS1",
      "description": "",
      "item": [
        {
          "_postman_id": "002eb9f5-8da0-1c62-6f28-5521055aaa60",
          "name": "[00003]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePointData\":",
                  "                tests[\"Delete Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteAcqPceData\":",
                  "                tests[\"Delete Acq_Pce Data\"] = true;",
                  "                break;",
                  "            case \"DeletePubPointData\":",
                  "                tests[\"Delete Pub_Point Data\"] = true;",
                  "                break;",
                  "            case \"DeleteEtrMeteringDataData\":",
                  "                tests[\"Delete Etr_Metering_Data Data\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if (tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"] && tests[\"Delete Pub_Point Data\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[00003]Drop file PCE\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data\"] = fase; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "postman.setNextRequest(\"[00004]Drop file PCE\");"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('20/01/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('METNEEPS1'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('RCA_102') and jour_gazier= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeletePubPointData\",\r\n         \"requestContent\":\"delete from pub_point where uidgrandeur in (select pp.uidgrandeur from pub_point pp, pce p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idpce='METNEEPS1' and horodate between TO_DATE('2017-01-19 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-01-20 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteEtrMeteringDataData\",\r\n         \"requestContent\":\"delete from ETR_METERING_DATA  where  gas_day between TO_DATE('2017-01-19 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-01-20 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and insertion_date >= (sysdate-1/24/4) and pce_code like '%METNEEPS1%'\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "0c6e21ea-58c0-bef7-9de2-ae2aad50f40d",
          "name": "[00003]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"PRO_ACG_03_PCE_TNR_METNEEPS1_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"PRO_ACG_03_PCE_TNR_METNEEPS1_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[00003]Check process cal end\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"PI-SEC\",\"fileName\":\"H20170119_PISEC_20170119711406_CHR09_DH.xml\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "9f4c7084-a912-6551-410d-3c0384281112",
          "name": "[00003]Check process cal end",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check process cal end\"] = true; ",
                  "       postman.setNextRequest(\"[00003]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check process cal end\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{PRO_ACG_03_PCE_TNR_METNEEPS1_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "34e221b3-1ff6-cdd0-7700-7c6e3a3938e4",
          "name": "[00003]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "console.log(tests[\"Status code is 200\"]);",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    console.log(sqlResult)",
                  "    if(sqlResult != null){",
                  "        for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            console.log(sqlResult.results)",
                  "            if(sqlResult[i].results != null){",
                  "                switch (sqlResult[i].requestId) {",
                  "                    case \"CheckStatutOrcProcessus\":",
                  "                        tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                        break;",
                  "                    case \"CheckAcqPceConservee\":",
                  "                        tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                        break;",
                  "                    case \"CheckStockAcquisition2\":",
                  "                        tests[\"Check STOCK_ACQUISITION2\"] = sqlResult[i].results[0].COUNT == \"478\";",
                  "                        break;",
                  "                    case \"CheckDmdCalcul\":",
                  "                        tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                        break;",
                  "                    case \"CheckStockAcquisitionCal\":",
                  "                        tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"525\";",
                  "                        break;",
                  "                    case \"CheckPointData\":",
                  "                        tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"75\";",
                  "                        break;",
                  "                    case \"CheckPubPointData\":",
                  "                        tests[\"Check PUB_POINT data\"] = sqlResult[i].results[0].COUNT == \"623\";",
                  "                        break;",
                  "                    case \"CheckEtrMeteringDataData\":",
                  "                        tests[\"Check ETR_METERING_DATA data\"] = sqlResult[i].results[0].COUNT == \"90\";",
                  "                        break;",
                  "                    case \"CheckStockAcquisitionForAcq\":",
                  "                        tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                        break;   ",
                  "                    case \"CheckStockAcquisitionForCal\":",
                  "                        tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                  "                        break; ",
                  "                }",
                  "            }",
                  "        }",
                  "    }",
                  "    postman.setNextRequest(\"[00004]Delete data\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);"
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{PRO_ACG_03_PCE_TNR_METNEEPS1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('RCA_102') and jour_gazier= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and lstime >= sysdate-1/24\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_03_PCE_TNR_METNEEPS1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where lstime >=(sysdate-1/24/4) and prec_processid='{{PRO_ACG_03_PCE_TNR_METNEEPS1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_03_PCE_TNR_METNEEPS1_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('20/01/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('METNEEPS1') and type_grandeur in ('VOLPEC','ENEPEC','PCSMOY') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPubPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from PUB_POINT  inner join grandeur on pub_point.uidgrandeur = grandeur.uidgrandeur  where  horodate between TO_DATE('2017-01-19 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-01-20 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and date_modif >= (sysdate-1/24/4) and idgrandeur like '%METNEEPS1%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckEtrMeteringDataData\",\r\n         \"requestContent\":\"select count(*) as COUNT from ETR_METERING_DATA  where  gas_day between TO_DATE('2017-01-19 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-01-20 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and insertion_date >= (sysdate-1/24/4) and pce_code like '%METNEEPS1%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_03_PCE_TNR_METNEEPS1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_03_PCE_TNR_METNEEPS1_processid}}')\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "31918c2d-6d24-5b3a-db74-a1f836a8b832",
      "name": "[00005]PRO_ACG_05_PCE_TNR_SGPCETVPEC",
      "description": "",
      "item": [
        {
          "_postman_id": "de5d98d9-3a3b-af45-7283-3d568653d231",
          "name": "[00005]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult != null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results != null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessusNew\":",
                  "                    tests[\"Check status in ORC_PROCESSUS New\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckAcqPceConserveeOld\":",
                  "                    tests[\"Check status in ORC_PROCESSUS Old\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckPointData\":",
                  "                    tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT >= \"48\";",
                  "                    break;",
                  "                } ",
                  "            }",
                  "        } ",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessusNew\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{PRO_ACG_05_PCE_TNR_SGPCETVPEC_processid}}'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStatutOrcProcessusOld\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where date_lancement_processus<= (sysdate-1/24/4) and code_technique_processus='PRO_ACG_05'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('13/04/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('14/04/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('SGPCETVPEC') and type_grandeur in ('ENEPRV','VOLPRV') and po.lstime >= (sysdate-1/24/4)\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "148b4d25-0166-128a-3e4f-c61d984edc72",
          "name": "[00005]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"PRO_ACG_05_PCE_TNR_SGPCETVPEC_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"PRO_ACG_05_PCE_TNR_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[00005]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"PRECO\",\"fileName\":\"PREV_PCE_20170413_20170414_130027.csv\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "2dabeacd-8d46-6bca-564f-11a61eb18e55",
      "name": "[00006]PRO_ARF_01_PCE_TNR_PCEVER15",
      "description": "",
      "item": [
        {
          "_postman_id": "01508522-7c53-9bca-3a45-b547cbf82e68",
          "name": "[00006]Drop file PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"PRO_ARF_01_PCE_TNR_PCEVER15_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"PRO_ARF_01_PCE_TNR_PCEVER15_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "   //Waiting that the status,processid and source_processid are given for this type of file. So we are direcly moving to the next step.",
                  "   /*if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[00006]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }*/",
                  "    postman.setNextRequest(\"[00006]Check data\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"TRANSACTION\",\"fileName\":\"J20160828_PCR_20160829015703_REF31_CAM_01.xml\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "b243d56e-6d63-02e5-9a37-69420afd9377",
          "name": "[00006]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult != null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results != null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessusOld\":",
                  "                    tests[\"Check status in ORC_PROCESSUS Old\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                } ",
                  "            }",
                  "        } ",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"CheckStatutOrcProcessusOld\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where date_lancement_processus>= (sysdate - 1/24/6) and code_technique_processus='PRO_ARF_01' order by date_lancement_processus desc fetch first 1 rows only\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a744a6ae-54a1-2807-00cc-eb73052461e7",
          "name": "[00006]Check data copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult != null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results != null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessusNew\":",
                  "                    tests[\"Check status in ORC_PROCESSUS New\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckAcqPceConserveeOld\":",
                  "                    tests[\"Check status in ORC_PROCESSUS Old\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                } ",
                  "            }",
                  "        } ",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessusNew\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{PRO_ARF_01_PCE_TNR_PCEVER15_processid}}' and code_technique_processus='PRO_ARF_01'\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckStatutOrcProcessusOld\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where date_lancement_processus>= (sysdate - 1/24/6) and code_technique_processus='PRO_ARF_01' order by date_lancement_processus desc fetch first 1 rows only\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    }
  ]
}