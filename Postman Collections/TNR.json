{
  "variables": [],
  "info": {
    "name": "TNR",
    "_postman_id": "02f4a671-0bd2-eaab-74f6-f1f6cc5fa4ca",
    "description": "Check the cases of ACG-024 for FGA",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "a59dd9c5-8958-e253-9654-913beecefe29",
      "name": "[00012]PRO_ARF_03_PCE_TNR_ - To do",
      "description": "",
      "item": [
        {
          "_postman_id": "5a3dd147-ac61-be44-1afd-be7c0911531d",
          "name": "TRV",
          "description": "",
          "item": [],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "ff3f479b-de52-b77f-d3d2-5b7cbb4a55b1",
          "name": "[00012]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeleteLienGrpCalcul\":",
                  "                tests[\"Delete Lien Grp_Calcul\"] = true;",
                  "                break;",
                  "            case \"DeleteGrpCalcul\":",
                  "                tests[\"Delete Grp_Calcul\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if (tests[\"Delete Lien Grp_Calcul\"] && tests[\"Delete Grp_Calcul\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[00011]Drop file Avignon\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeleteLienGrpCalcul\",\r\n         \"requestContent\":\"delete from  LIEN_GRC_PCE where uidgrp_calcul_pere in (select uidgrp_calcul from GRP_CALCUL where IDGRP_CALCUL='TSTCACHE2')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteGrpCalcul\",\r\n         \"requestContent\":\"delete from grp_calcul where uidgrp_calcul in (select uidgrp_calcul from GRP_CALCUL where IDGRP_CALCUL='TSTCACHE2')\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "76c9b354-b8be-a5c9-0f65-ab62aedeec1d",
          "name": "[00012]Drop file RFO PCE",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"PRO_ARF_02_PCE_TNR_PCEVER15_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"PRO_ARF_02_PCE_TNR_PCEVER15_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "   //Waiting that the status,processid and source_processid are given for this type of file. So we are direcly moving to the next step.",
                  "   /*if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[00007]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }*/",
                  "    postman.setNextRequest(\"[00011]Check data\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"AVIGNON\",\"fileName\":\"M20161201_PAP_20161205144223_REF51_AVI_01.xml\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "7e02c1b5-e548-49d6-a8ea-b04d9260a0a8",
          "name": "[00012]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult != null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results != null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessusOld\":",
                  "                    tests[\"Check status in ORC_PROCESSUS Old way\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckGrpCalculCreation\":",
                  "                     tests[\"Check status in GRP_CALCUL Creation\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "                } ",
                  "            }",
                  "        } ",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n        {  \r\n         \"requestId\":\"CheckStatutOrcProcessusOld\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where date_lancement_processus>= (sysdate - 1/24/6) and code_technique_processus='PRO_ARF_02' order by date_lancement_processus desc fetch first 1 rows only\"\r\n\t\t},\r\n\t\t{  \r\n        \t\"requestId\":\"CheckGrpCalculCreation\",\r\n        \t\"requestContent\":\"select count(*) as COUNT from GRP_CALCUL where IDGRP_CALCUL='TSTCACHE2' and lstime>= (sysdate - 1/24/6)\"\r\n\t\t}\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "45f0bffa-7d8e-e56f-f9f0-1e4f3665e5d8",
      "name": "[00013]PRO_ARF_03_FGA_TNR_ - To do",
      "description": "",
      "item": [
        {
          "_postman_id": "49495e6c-059b-9ed7-190e-8642dedb4a36",
          "name": "[00013]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeleteLienGrpCalcul\":",
                  "                tests[\"Delete Lien Grp_Calcul\"] = true;",
                  "                break;",
                  "            case \"DeleteGrpCalcul\":",
                  "                tests[\"Delete Grp_Calcul\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if (tests[\"Delete Lien Grp_Calcul\"] && tests[\"Delete Grp_Calcul\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[00011]Drop file Avignon\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeleteLienGrpCalcul\",\r\n         \"requestContent\":\"delete from  LIEN_GRC_PCE where uidgrp_calcul_pere in (select uidgrp_calcul from GRP_CALCUL where IDGRP_CALCUL='TSTCACHE2')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteGrpCalcul\",\r\n         \"requestContent\":\"delete from grp_calcul where uidgrp_calcul in (select uidgrp_calcul from GRP_CALCUL where IDGRP_CALCUL='TSTCACHE2')\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "8271a6a1-3fac-066f-45da-ccc7feb4536c",
          "name": "[00013]Drop file RFO FGA",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"PRO_ARF_02_PCE_TNR_PCEVER15_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"PRO_ARF_02_PCE_TNR_PCEVER15_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "   //Waiting that the status,processid and source_processid are given for this type of file. So we are direcly moving to the next step.",
                  "   /*if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[00007]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }*/",
                  "    postman.setNextRequest(\"[00011]Check data\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"AVIGNON\",\"fileName\":\"M20161201_PAP_20161205144223_REF51_AVI_01.xml\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "62c81770-0ad4-6d29-8fae-9469a512e584",
          "name": "[00013]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult != null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results != null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessusOld\":",
                  "                    tests[\"Check status in ORC_PROCESSUS Old way\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckGrpCalculCreation\":",
                  "                     tests[\"Check status in GRP_CALCUL Creation\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "                } ",
                  "            }",
                  "        } ",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n        {  \r\n         \"requestId\":\"CheckStatutOrcProcessusOld\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where date_lancement_processus>= (sysdate - 1/24/6) and code_technique_processus='PRO_ARF_02' order by date_lancement_processus desc fetch first 1 rows only\"\r\n\t\t},\r\n\t\t{  \r\n        \t\"requestId\":\"CheckGrpCalculCreation\",\r\n        \t\"requestContent\":\"select count(*) as COUNT from GRP_CALCUL where IDGRP_CALCUL='TSTCACHE2' and lstime>= (sysdate - 1/24/6)\"\r\n\t\t}\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "85dcfc85-08cd-41b5-ed54-1299d5df082c",
      "name": "[00014]PRO_ARF_04_PCE_TNR_ - To do",
      "description": "",
      "item": [
        {
          "_postman_id": "68e62e8c-2bb2-12b0-679a-5c0498065791",
          "name": "[00014]Delete data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeleteLienGrpCalcul\":",
                  "                tests[\"Delete Lien Grp_Calcul\"] = true;",
                  "                break;",
                  "            case \"DeleteGrpCalcul\":",
                  "                tests[\"Delete Grp_Calcul\"] = true;",
                  "                break;",
                  "        }",
                  "    }",
                  "    if (tests[\"Delete Lien Grp_Calcul\"] && tests[\"Delete Grp_Calcul\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[00011]Drop file Avignon\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeleteLienGrpCalcul\",\r\n         \"requestContent\":\"delete from  LIEN_GRC_PCE where uidgrp_calcul_pere in (select uidgrp_calcul from GRP_CALCUL where IDGRP_CALCUL='TSTCACHE2')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteGrpCalcul\",\r\n         \"requestContent\":\"delete from grp_calcul where uidgrp_calcul in (select uidgrp_calcul from GRP_CALCUL where IDGRP_CALCUL='TSTCACHE2')\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "176b40c1-5bef-e08e-d0b6-1a15c3bf90fc",
          "name": "[00014]Drop file MCI",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"PRO_ARF_02_PCE_TNR_PCEVER15_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"PRO_ARF_02_PCE_TNR_PCEVER15_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "   //Waiting that the status,processid and source_processid are given for this type of file. So we are direcly moving to the next step.",
                  "   /*if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[00007]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }*/",
                  "    postman.setNextRequest(\"[00011]Check data\");",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"AVIGNON\",\"fileName\":\"M20161201_PAP_20161205144223_REF51_AVI_01.xml\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "dca62477-0b93-d2c8-0b3c-a86ef11d2a0d",
          "name": "[00014]Check data",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    if(sqlResult != null){",
                  "       for(var i= 0; i < sqlResult.length; i++)",
                  "        {",
                  "            if(sqlResult[i].results != null){",
                  "               switch (sqlResult[i].requestId) {",
                  "                case \"CheckStatutOrcProcessusOld\":",
                  "                    tests[\"Check status in ORC_PROCESSUS Old way\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                  "                    break;",
                  "                case \"CheckGrpCalculCreation\":",
                  "                     tests[\"Check status in GRP_CALCUL Creation\"] = sqlResult[i].results[0].COUNT == \"1\";",
                  "                break;",
                  "                } ",
                  "            }",
                  "        } ",
                  "    }",
                  "    postman.setNextRequest(null);",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//postman.setNextRequest(null);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                "description": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n        {  \r\n         \"requestId\":\"CheckStatutOrcProcessusOld\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where date_lancement_processus>= (sysdate - 1/24/6) and code_technique_processus='PRO_ARF_02' order by date_lancement_processus desc fetch first 1 rows only\"\r\n\t\t},\r\n\t\t{  \r\n        \t\"requestId\":\"CheckGrpCalculCreation\",\r\n        \t\"requestContent\":\"select count(*) as COUNT from GRP_CALCUL where IDGRP_CALCUL='TSTCACHE2' and lstime>= (sysdate - 1/24/6)\"\r\n\t\t}\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "af17dbf6-b7a9-e710-607f-b229fd5ab1e5",
      "name": "ACG",
      "description": "",
      "item": [
        {
          "_postman_id": "c63572e6-7c2a-95ae-833e-9fff5180c84d",
          "name": "[00001]PRO_ACG_01_FGA_TNR_SGTUH97A",
          "description": "",
          "item": [
            {
              "_postman_id": "f073997d-7283-dc99-b964-07564066a943",
              "name": "[00001]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeletePointData\":",
                      "                tests[\"Delete Point Data\"] = true;",
                      "                break;",
                      "            case \"DeleteAcqFgaData\":",
                      "                tests[\"Delete Acq_Fga Data\"] = true;",
                      "                break;",
                      "            case \"DeletePubPointJmnFgaData\":",
                      "                tests[\"Delete Pub_Point_Jmn_Fga Data\"] = true;",
                      "                break;",
                      "        }",
                      "    }",
                      "    if (tests[\"Delete Point Data\"] && tests[\"Delete Acq_Fga Data\"] && tests[\"Delete Pub_Point_Jmn_Fga Data\"]){",
                      "        tests[\"Delete data Sum up\"] = true; ",
                      "        postman.setNextRequest(\"[00001]Drop file FGA\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data\"] = fase; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('20/01/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idfga in ('SGTUH97A'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqFgaData\",\r\n         \"requestContent\":\"delete from acq_fga_conservee where uidacq_fga_conservee in (select uidacq_fga_conservee from acq_fga_conservee where code_acquisition in ('SGTUH97A') and jour_gazier= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeletePubPointJmnFgaData\",\r\n         \"requestContent\":\"delete from pub_point_jmn_fga where uidgrandeur in (select pp.uidgrandeur from pub_point_jmn_fga pp, fga p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idfga='SGTUH97A' and horodate between TO_DATE('2017-01-19 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-01-20 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "e6545e6f-c178-8a7a-6d3f-9e47748a0e6e",
              "name": "[00001]Drop file FGA",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_01_FGA_TNR_SGTUH97A_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_01_FGA_TNR_SGTUH97A_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file FGA\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file FGA\"] = true; ",
                      "       postman.setNextRequest(\"[00001]Check process cal end\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file FGA\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170119_FGA_20170119185806_CHR02_SCALA_5-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"120\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "3d8130c3-77eb-cc94-22d1-f7d0e4ebdf2d",
              "name": "[00001]Check process cal end",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check process cal end\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check process cal end\"] = true; ",
                      "       postman.setNextRequest(\"[00001]Check data\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check process cal end\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"processCode\":\"PRO_CAL_01\",\"processId\":\"{{PRO_ACG_01_FGA_TNR_SGTUH97A_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "98d2e7e2-ab2a-c654-6fd2-f7572880ec76",
              "name": "[00001]Check data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult !== null){",
                      "        for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results !== null){",
                      "                switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessus\":",
                      "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckAcqFgaConservee\":",
                      "                    tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                case \"CheckStockAcquisition2\":",
                      "                    tests[\"Check STOCK_ACQUISITION2\"] = sqlResult[i].results[0].COUNT >= \"338\";",
                      "                    break;",
                      "                case \"CheckDmdCalcul\":",
                      "                    tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                case \"CheckStockAcquisitionCal\":",
                      "                    tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                    break;",
                      "                case \"CheckPointData\":",
                      "                    tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"338\";",
                      "                    break;",
                      "                case \"CheckPubPointJmnFgaData\":",
                      "                    tests[\"Check PUB_POINT_JMN_FGA data\"] = sqlResult[i].results[0].COUNT == \"338\";",
                      "                    break;",
                      "                case \"CheckStockAcquisitionForAcq\":",
                      "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                    break;   ",
                      "                case \"CheckStockAcquisitionForCal\":",
                      "                    tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                    break; ",
                      "                }",
                      "            }",
                      "        }",
                      "    }",
                      "    postman.setNextRequest(\"[00002]Delete data\");",
                      "",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('SGTUH97A') and jour_gazier= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and lstime >= sysdate-1/24\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where prec_processid='{{PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('20/01/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idfga in ('SGTUH97A') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPubPointJmnFgaData\",\r\n         \"requestContent\":\"select count(*) as COUNT from PUB_POINT_jmn_fga pp  inner join grandeur on pp.uidgrandeur = grandeur.uidgrandeur  where  horodate between TO_DATE('2017-01-19 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-01-20 05:00:00', 'YYYY-MM-DD HH24:MI:SS')  and idgrandeur like '%SGTUH97A%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}')\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "47cf9466-6b4b-7dff-c925-a77f827cb95c",
          "name": "[00002]PRO_ACG_01_PCE_TNR_SGGUR1133A",
          "description": "",
          "item": [
            {
              "_postman_id": "5ab7708d-c016-22b7-3dfc-4045e9f41698",
              "name": "[00002]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeletePointData\":",
                      "                tests[\"Delete Point Data\"] = true;",
                      "                break;",
                      "            case \"DeleteAcqPceData\":",
                      "                tests[\"Delete Acq_Pce Data\"] = true;",
                      "                break;",
                      "            case \"DeletePubPointData\":",
                      "                tests[\"Delete Pub_Point Data\"] = true;",
                      "                break;",
                      "            case \"DeleteEtrMeteringDataData\":",
                      "                tests[\"Delete Etr_Metering_Data Data\"] = true;",
                      "                break;",
                      "            case \"DeleteAlerte\":",
                      "                tests[\"Delete Alerte\"] = true;",
                      "                break;",
                      "        }",
                      "    }",
                      "    if (tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"] && tests[\"Delete Pub_Point Data\"] && tests[\"Delete Alerte\"]){",
                      "        tests[\"Delete data Sum up\"] = true; ",
                      "        postman.setNextRequest(\"[00002]Drop file PCE\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data\"] = fase; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setNextRequest(\"[00002]Drop file PCE\");"
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('27/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('28/02/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('SGGUR1133A'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('SGGUR1133A') and jour_gazier= TO_DATE('27/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeletePubPointData\",\r\n         \"requestContent\":\"delete from pub_point where uidgrandeur in (select pp.uidgrandeur from pub_point pp, pce p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idpce='SGGUR1133A' and horodate between TO_DATE('2017-02-27 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-28 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteEtrMeteringDataData\",\r\n         \"requestContent\":\"delete from ETR_METERING_DATA  where  gas_day between TO_DATE('2017-02-27 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-28 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and insertion_date >= (sysdate-1/24/4) and pce_code like '%SGGUR1133A%'\"\r\n      },\r\n      {  \r\n      \"requestId\":\"DeleteAlerte\",\r\n         \"requestContent\":\"delete from Alerte where  uidalerte in (select uidalerte from alerte, pce where  alerte.uidgrandeurs_objet=pce.uidgrandeurs_objet and IDPCE='SGGUR1133A' and horodate between TO_DATE('2017-02-27 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-28 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n     }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "8695b685-6006-67aa-e894-8b7a338d7d00",
              "name": "[00002]Drop file PCE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_01_PCE_TNR_SGGUR1133A_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_01_PCE_TNR_SGGUR1133A_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file PCE\"] = true; ",
                      "       postman.setNextRequest(\"[00002]Check process cal end\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170227_PCE_20170227131828_CHR02_SCALA_12-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"120\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "70048394-0e1a-0dd4-45c2-75b31c7c15c6",
              "name": "[00002]Check process cal end",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check process cal end\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check process cal end\"] = true; ",
                      "       postman.setNextRequest(\"[00002]Check data\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check process cal end\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"processCode\":\"PRO_CAL_01\",\"processId\":\"{{PRO_ACG_01_PCE_TNR_SGGUR1133A_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "bc8107c0-0ade-d35d-923b-a90a5a3f08bc",
              "name": "[00002]Check data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult != null){",
                      "       for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results != null){",
                      "               switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessus\":",
                      "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckAcqPceConservee\":",
                      "                    tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                case \"CheckStockAcquisition2\":",
                      "                    tests[\"Check STOCK_ACQUISITION2\"] = sqlResult[i].results[0].COUNT >= \"104\";",
                      "                    break;",
                      "                case \"CheckDmdCalcul\":",
                      "                    tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                case \"CheckStockAcquisitionCal\":",
                      "                    tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"176\";",
                      "                    break;",
                      "                case \"CheckPointData\":",
                      "                    tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"24\";",
                      "                    break;",
                      "                case \"CheckPubPointData\":",
                      "                    tests[\"Check PUB_POINT data\"] = sqlResult[i].results[0].COUNT == \"248\";",
                      "                    break;",
                      "                case \"CheckEtrMeteringDataData\":",
                      "                    tests[\"Check ETR_METERING_DATA data\"] = sqlResult[i].results[0].COUNT == \"39\";",
                      "                    break;",
                      "                case \"CheckStockAcquisitionForAcq\":",
                      "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                    break;   ",
                      "                case \"CheckStockAcquisitionForCal\":",
                      "                    tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                    break; ",
                      "                case \"CheckAlerte\" :",
                      "                    tests[\"Check Alerte\"] = sqlResult[i].results[0].COUNT >= \"10\";",
                      "                    break; ",
                      "                } ",
                      "            }",
                      "        } ",
                      "    }",
                      "    postman.setNextRequest(\"[00003]Delete data\");",
                      "    ",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult != null){",
                      "       for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results != null){",
                      "               switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessus\":",
                      "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckAcqPceConservee\":",
                      "                    tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                case \"CheckStockAcquisition2\":",
                      "                    tests[\"Check STOCK_ACQUISITION2\"] = sqlResult[i].results[0].COUNT == \"104\";",
                      "                    break;",
                      "                case \"CheckDmdCalcul\":",
                      "                    tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                case \"CheckStockAcquisitionCal\":",
                      "                    tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"176\";",
                      "                    break;",
                      "                case \"CheckPointData\":",
                      "                    tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"24\";",
                      "                    break;",
                      "                case \"CheckPubPointData\":",
                      "                    tests[\"Check PUB_POINT data\"] = sqlResult[i].results[0].COUNT == \"248\";",
                      "                    break;",
                      "                case \"CheckEtrMeteringDataData\":",
                      "                    tests[\"Check ETR_METERING_DATA data\"] = sqlResult[i].results[0].COUNT == \"39\";",
                      "                    break;",
                      "                case \"CheckStockAcquisitionForAcq\":",
                      "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                    break;   ",
                      "                case \"CheckStockAcquisitionForCal\":",
                      "                    tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                    break; ",
                      "                case \"CheckAlerte\" :",
                      "                    tests[\"Check Alerte\"] = sqlResult[i].results[0].COUNT >= \"10\";",
                      "                    break; ",
                      "                } ",
                      "            }",
                      "        } ",
                      "    }",
                      "    postman.setNextRequest(\"[00003]Delete data\");",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);"
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{PRO_ACG_01_PCE_TNR_SGGUR1133A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('SGGUR1133A') and jour_gazier= TO_DATE('27/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and lstime >= sysdate-1/24\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_01_PCE_TNR_SGGUR1133A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where lstime >=(sysdate-1/24/4) and prec_processid='{{PRO_ACG_01_PCE_TNR_SGGUR1133A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_01_PCE_TNR_SGGUR1133A_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('27/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('28/02/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('SGGUR1133A') and type_grandeur in ('VOLPEC','ENEPEC','PCSMOY') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPubPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from PUB_POINT  inner join grandeur on pub_point.uidgrandeur = grandeur.uidgrandeur  where  horodate between TO_DATE('2017-02-27 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-28 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and date_modif >= (sysdate-1/24/4) and idgrandeur like '%SGGUR1133A%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckEtrMeteringDataData\",\r\n         \"requestContent\":\"select count(*) as COUNT from ETR_METERING_DATA  where  gas_day between TO_DATE('2017-02-27 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-28 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and insertion_date >= (sysdate-1/24/4) and pce_code like '%SGGUR1133A%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_01_PCE_TNR_SGGUR1133A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_01_PCE_TNR_SGGUR1133A_processid}}')\"\r\n         \r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAlerte\",\r\n         \"requestContent\":\"select count(*) as count from alerte, pce where  alerte.uidgrandeurs_objet=pce.uidgrandeurs_objet and IDPCE='SGGUR1133A'and alerte.lstime>=(sysdate-1/24/4) order by horodate desc, uidtest_ref desc,alerte.LSTIME DESC \"\r\n         \r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "f5c7a9f7-b48a-9cb4-be9c-4069040cf846",
          "name": "[00007]PRO_ACG_20_REL_TNR_SGPCETPEC2",
          "description": "0 - Meter reading is rejected\n1 - Meter reading is saved",
          "item": [
            {
              "_postman_id": "61ad37b3-2285-e8ac-2024-52f79f73760d",
              "name": "[00007]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeleteCaractComptageData\":",
                      "                tests[\"Delete CaractComptage Data\"] = true;",
                      "                break;",
                      "            case \"DeleteReleveData\":",
                      "                tests[\"Delete Releve Data\"] = true;",
                      "                break;",
                      "            case \"DeleteReleveRejeteeData\":",
                      "                tests[\"Delete Releve_Rejetee Data\"] = true;",
                      "                break;",
                      "        }",
                      "    }",
                      "    if (tests[\"Delete CaractComptage Data\"] && tests[\"Delete Releve Data\"] && tests[\"Delete Releve_Rejetee Data\"] ){",
                      "        tests[\"Delete data Sum up\"] = true; ",
                      "        postman.setNextRequest(\"[00007]Drop file REL 1\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data\"] = fase; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setNextRequest(\"[00002]Drop file PCE\");"
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeleteCaractComptageData\",\r\n         \"requestContent\":\"delete from CARACT_COMPTAGE where uidcaract_comptage in (select c.uidcaract_comptage from releve r, pce p, CARACT_COMPTAGE c where r.UIDPCE=p.uidpce and c.uidreleve=r.uidreleve and p.idpce in ('SGPCETPEC2'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteReleveData\",\r\n         \"requestContent\":\"delete from releve where uidreleve in (select uidreleve from releve r, pce p where r.UIDPCE=p.uidpce and idpce in ('SGPCETPEC2'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteReleveRejeteeData\",\r\n         \"requestContent\":\"delete from RELEVE_REJETEE where uidreleve_rejetee in (select uidreleve_rejetee  from RELEVE_REJETEE rr, pce p where p.UIDPCE=rr.uidpce and idpce in ('SGPCETPEC2'))\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "80e211bf-5067-4b15-23f6-5e1c58dd0fb1",
              "name": "[00007]Drop file REL 1",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"[00007]PRO_ACG_20_REL_TNR_SGPCETPEC2_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"[00007]PRO_ACG_20_REL_TNR_SGPCETPEC2_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file REL\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file REL\"] = true; ",
                      "       postman.setNextRequest(\"[00007]Check data REL 1\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file REL\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"NOMADE\",\"fileName\":\"J20170515_IDX_20170515165921_CHR15_NOM_01.xml\",\"wait\":\"true\",\"waitTimeout\":\"120\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "b472356d-b114-ed36-baa1-6829f0d926e1",
              "name": "[00007]Check data REL 1",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult != null){",
                      "       for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results != null){",
                      "               switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessus\":",
                      "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckReleveRejeteeData\":",
                      "                    tests[\"Check RELEVE REJETEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                } ",
                      "            }",
                      "        } ",
                      "    }",
                      "    postman.setNextRequest(\"[00007]Drop file REL 2\");",
                      "    ",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);"
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[00007]PRO_ACG_20_REL_TNR_SGPCETPEC2_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckReleveRejeteeData\",\r\n         \"requestContent\":\"select count(*) as count from RELEVE_REJETEE RR, pce P where RR.UIDPCE=p.uidpce and p.idpce in ('SGPCETPEC2') and rr.lstime >= sysdate-1/24\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "945b2678-6cbb-6ddd-a3c3-33b4621f2756",
              "name": "[00007]Drop file REL 2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"[00007]PRO_ACG_20_REL_TNR_SGPCETPEC2_2_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"[00007]PRO_ACG_20_REL_TNR_SGPCETPEC2_2_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file REL\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file REL\"] = true; ",
                      "       postman.setNextRequest(\"[00007]Check data REL 2\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file REL\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"NOMADE\",\"fileName\":\"J20170515_IDX_20170515165922_CHR15_NOM_01.xml\",\"wait\":\"true\",\"waitTimeout\":\"120\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "7cdc9d30-bb37-4301-f41b-e20617fc7bdf",
              "name": "[00007]Check data REL 2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult != null){",
                      "       for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results != null){",
                      "               switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessus\":",
                      "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckReleveData\":",
                      "                    tests[\"Check RELEVE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                case \"CheckCaractComptageData\":",
                      "                    tests[\"Check CARACT COMPTAGE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                } ",
                      "            }",
                      "        } ",
                      "    }",
                      "    postman.setNextRequest(null);",
                      "    ",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);"
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{[00007]PRO_ACG_20_REL_TNR_SGPCETPEC2_2_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckReleveData\",\r\n         \"requestContent\":\"select count(*) as count from releve, pce where releve.UIDPCE=pce.uidpce and idpce in ('SGPCETPEC2') and releve.lstime >= sysdate-1/24\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckCaractComptageData\",\r\n         \"requestContent\":\"select count(*) as count from releve, pce, CARACT_COMPTAGE where releve.UIDPCE=pce.uidpce and caract_comptage.uidreleve=releve.uidreleve and idpce in ('SGPCETPEC2') and CARACT_COMPTAGE.lstime >= sysdate-1/24\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "8cbdae2a-2235-6649-784e-e64f58546fc3",
          "name": "[00003]PRO_ACG_03_PCE_TNR_METNEEPS1",
          "description": "",
          "item": [
            {
              "_postman_id": "5341ecfd-5722-b7a2-5e31-f978d7576b84",
              "name": "[00003]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeletePointData\":",
                      "                tests[\"Delete Point Data\"] = true;",
                      "                break;",
                      "            case \"DeleteAcqPceData\":",
                      "                tests[\"Delete Acq_Pce Data\"] = true;",
                      "                break;",
                      "            case \"DeletePubPointData\":",
                      "                tests[\"Delete Pub_Point Data\"] = true;",
                      "                break;",
                      "            case \"DeleteEtrMeteringDataData\":",
                      "                tests[\"Delete Etr_Metering_Data Data\"] = true;",
                      "                break;",
                      "        }",
                      "    }",
                      "    if (tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"] && tests[\"Delete Pub_Point Data\"]){",
                      "        tests[\"Delete data Sum up\"] = true; ",
                      "        postman.setNextRequest(\"[00003]Drop file PCE\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data\"] = fase; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setNextRequest(\"[00004]Drop file PCE\");"
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('20/01/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('METNEEPS1'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('RCA_102') and jour_gazier= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeletePubPointData\",\r\n         \"requestContent\":\"delete from pub_point where uidgrandeur in (select pp.uidgrandeur from pub_point pp, pce p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idpce='METNEEPS1' and horodate between TO_DATE('2017-01-19 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-01-20 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteEtrMeteringDataData\",\r\n         \"requestContent\":\"delete from ETR_METERING_DATA  where  gas_day between TO_DATE('2017-01-19 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-01-20 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and insertion_date >= (sysdate-1/24/4) and pce_code like '%METNEEPS1%'\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "1499a04f-4d3d-338e-2b1b-36d5ce9154ed",
              "name": "[00003]Drop file PCE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_03_PCE_TNR_METNEEPS1_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_03_PCE_TNR_METNEEPS1_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file PCE\"] = true; ",
                      "       postman.setNextRequest(\"[00003]Check process cal end\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"PI-SEC\",\"fileName\":\"H20170119_PISEC_20170119711406_CHR09_DH.xml\",\"wait\":\"true\",\"waitTimeout\":\"180\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "c4c22380-944c-6c66-cbaf-a31473394632",
              "name": "[00003]Check process cal end",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check process cal end\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check process cal end\"] = true; ",
                      "       postman.setNextRequest(\"[00003]Check data\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check process cal end\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"processCode\":\"PRO_CAL_01\",\"processId\":\"{{PRO_ACG_03_PCE_TNR_METNEEPS1_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "1ba9a903-d99e-63f5-9ec5-294774ca462b",
              "name": "[00003]Check data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "console.log(tests[\"Status code is 200\"]);",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    console.log(sqlResult)",
                      "    if(sqlResult != null){",
                      "        for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            console.log(sqlResult.results)",
                      "            if(sqlResult[i].results != null){",
                      "                switch (sqlResult[i].requestId) {",
                      "                    case \"CheckStatutOrcProcessus\":",
                      "                        tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                        break;",
                      "                    case \"CheckAcqPceConservee\":",
                      "                        tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                        break;",
                      "                    case \"CheckStockAcquisition2\":",
                      "                        tests[\"Check STOCK_ACQUISITION2\"] = sqlResult[i].results[0].COUNT == \"554\";",
                      "                        break;",
                      "                    case \"CheckDmdCalcul\":",
                      "                        tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                        break;",
                      "                    case \"CheckStockAcquisitionCal\":",
                      "                        tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"525\";",
                      "                        break;",
                      "                    case \"CheckPointData\":",
                      "                        tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"75\";",
                      "                        break;",
                      "                    case \"CheckPubPointData\":",
                      "                        tests[\"Check PUB_POINT data\"] = sqlResult[i].results[0].COUNT == \"623\";",
                      "                        break;",
                      "                    case \"CheckEtrMeteringDataData\":",
                      "                        tests[\"Check ETR_METERING_DATA data\"] = sqlResult[i].results[0].COUNT == \"90\";",
                      "                        break;",
                      "                    case \"CheckStockAcquisitionForAcq\":",
                      "                        tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                        break;   ",
                      "                    case \"CheckStockAcquisitionForCal\":",
                      "                        tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                        break; ",
                      "                }",
                      "            }",
                      "        }",
                      "    }",
                      "    postman.setNextRequest(\"[00004]Delete data\");",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);"
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{PRO_ACG_03_PCE_TNR_METNEEPS1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('RCA_102') and jour_gazier= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and lstime >= sysdate-1/24\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_03_PCE_TNR_METNEEPS1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where lstime >=(sysdate-1/24/4) and prec_processid='{{PRO_ACG_03_PCE_TNR_METNEEPS1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_03_PCE_TNR_METNEEPS1_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('20/01/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('METNEEPS1') and type_grandeur in ('VOLPEC','ENEPEC','PCSMOY') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPubPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from PUB_POINT  inner join grandeur on pub_point.uidgrandeur = grandeur.uidgrandeur  where  horodate between TO_DATE('2017-01-19 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-01-20 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and date_modif >= (sysdate-1/24/4) and idgrandeur like '%METNEEPS1%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckEtrMeteringDataData\",\r\n         \"requestContent\":\"select count(*) as COUNT from ETR_METERING_DATA  where  gas_day between TO_DATE('2017-01-19 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-01-20 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and insertion_date >= (sysdate-1/24/4) and pce_code like '%METNEEPS1%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_03_PCE_TNR_METNEEPS1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_03_PCE_TNR_METNEEPS1_processid}}')\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "c9fa6dfb-ace8-4fc3-007e-9885a5fb89ed",
          "name": "[00004]PRO_ACG_39_PCE_TNR_VERTEST2A",
          "description": "",
          "item": [
            {
              "_postman_id": "00ed7202-a030-9df2-0468-1488ac3aacf3",
              "name": "[00004]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeletePointData\":",
                      "                tests[\"Delete Point Data\"] = true;",
                      "                break;",
                      "            case \"DeleteAcqPceData\":",
                      "                tests[\"Delete Acq_Pce Data\"] = true;",
                      "                break;",
                      "            case \"DeletePubPointData\":",
                      "                tests[\"Delete Pub_Point Data\"] = true;",
                      "                break;",
                      "            case \"DeleteEtrMeteringDataData\":",
                      "                tests[\"Delete Etr_Metering_Data Data\"] = true;",
                      "                break;",
                      "        }",
                      "    }",
                      "    if (tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"] && tests[\"Delete Pub_Point Data\"]){",
                      "        tests[\"Delete data Sum up\"] = true; ",
                      "        postman.setNextRequest(\"[00004]Drop file PCE\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data\"] = fase; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setNextRequest(\"[00003]Drop file PCE\");"
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('16/06/2016 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('17/06/2016 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('VERTEST2A'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('VERTEST2A') and jour_gazier= TO_DATE('16/06/2016 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeletePubPointData\",\r\n         \"requestContent\":\"delete from pub_point where uidgrandeur in (select pp.uidgrandeur from pub_point pp, pce p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idpce='VERTEST2A' and horodate between TO_DATE('2016-06-16 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2016-06-17 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteEtrMeteringDataData\",\r\n         \"requestContent\":\"delete from ETR_METERING_DATA  where  gas_day between TO_DATE('2016-06-16 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2016-06-16 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and insertion_date >= (sysdate-1/24/4) and pce_code like '%VERTEST2A%'\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "b49cad17-cdff-40b1-1d70-64e9cb2d6748",
              "name": "[00004]Drop file PCE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_39_PCE_TNR_VERTEST2A_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_39_PCE_TNR_VERTEST2A_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file PCE\"] = true; ",
                      "       postman.setNextRequest(\"[00004]Check process cal end\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"EDHOUARD_PCE\",\"fileName\":\"H20160616_PCE_20160616163547_CHR01_EDHOUARD_240-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"120\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "c82b20cf-db76-37c2-2c02-c7ffdc9bc18a",
              "name": "[00004]Check process cal end",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check process cal end\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check process cal end\"] = true; ",
                      "       postman.setNextRequest(\"[00004]Check data\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check process cal end\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"processCode\":\"PRO_CAL_01\",\"processId\":\"{{PRO_ACG_39_PCE_TNR_VERTEST2A_sourceProcessId}}\",\"waitTimeout\":\"60\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "f1819f74-e08c-0f00-2190-51e5427344a5",
              "name": "[00004]Check data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult != null){",
                      "       for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results != null){",
                      "               switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessus\":",
                      "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckAcqPceConservee\":",
                      "                    tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                case \"CheckStockAcquisition2\":",
                      "                    tests[\"Check STOCK_ACQUISITION2\"] = sqlResult[i].results[0].COUNT == \"143\";",
                      "                    break;",
                      "                case \"CheckDmdCalcul\":",
                      "                    tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                case \"CheckStockAcquisitionCal\":",
                      "                    tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"242\";",
                      "                    break;",
                      "                case \"CheckPointData\":",
                      "                    tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"33\";",
                      "                    break;",
                      "                case \"CheckPubPointData\":",
                      "                    tests[\"Check PUB_POINT data\"] = sqlResult[i].results[0].COUNT == \"341\";",
                      "                    break;",
                      "                case \"CheckEtrMeteringDataData\":",
                      "                    tests[\"Check ETR_METERING_DATA data\"] = sqlResult[i].results[0].COUNT == \"48\";",
                      "                    break;",
                      "                case \"CheckStockAcquisitionForAcq\":",
                      "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                    break;   ",
                      "                case \"CheckStockAcquisitionForCal\":",
                      "                    tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                    break; ",
                      "                } ",
                      "            }",
                      "        } ",
                      "    }",
                      "    postman.setNextRequest(\"[00005]Delete data\");",
                      "}",
                      "else{",
                      "    postman.setNextRequest(\"[00005]Delete data\");",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{PRO_ACG_39_PCE_TNR_VERTEST2A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('VERTEST2A') and jour_gazier= TO_DATE('16/06/2016 06:00:00','DD/MM/YYYY HH24:MI:SS') and lstime >= sysdate-1/24\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_39_PCE_TNR_VERTEST2A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where lstime >=(sysdate-1/24/4) and prec_processid='{{PRO_ACG_39_PCE_TNR_VERTEST2A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_39_PCE_TNR_VERTEST2A_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('16/06/2016 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('17/06/2016 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('VERTEST2A') and type_grandeur in ('VOLPEC','ENEPEC','PCSMOY') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPubPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from PUB_POINT  inner join grandeur on pub_point.uidgrandeur = grandeur.uidgrandeur  where  horodate between TO_DATE('2016-06-16 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2016-06-17 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and date_modif >= (sysdate-1/24/4) and idgrandeur like '%VERTEST2A%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckEtrMeteringDataData\",\r\n         \"requestContent\":\"select count(*) as COUNT from ETR_METERING_DATA  where  gas_day between TO_DATE('2016-06-16 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2016-06-17 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and insertion_date >= (sysdate-1/24/4) and pce_code like '%VERTEST2A%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_39_PCE_TNR_VERTEST2A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_39_PCE_TNR_VERTEST2A_processid}}')\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "c027bd1f-bb3e-4818-a099-697fb269d3b3",
          "name": "[00005]PRO_ACG_05_PCE_TNR_SGPCETVPEC",
          "description": "",
          "item": [
            {
              "_postman_id": "e103110c-c967-d7a3-8951-ed2c1d0f661b",
              "name": "[00005]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeletePoint\":",
                      "                tests[\"Delete Point\"] = true;",
                      "                break;",
                      "",
                      "        }",
                      "    }",
                      "    if (tests[\"Delete Point\"]){",
                      "        tests[\"Delete data Sum up\"] = true; ",
                      "        postman.setNextRequest(\"[00005]Drop file PCE\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data Sum up\"] = false; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePoint\",\r\n         \"requestContent\":\"delete from POINT where uidpoint in (select uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('13/04/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('14/04/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('SGPCETVPEC') and type_grandeur in ('ENEPRV','VOLPRV'))\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "8c453f30-e85a-3c22-d4a4-4ef975a64082",
              "name": "[00005]Drop file PCE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_05_PCE_TNR_SGPCETVPEC_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_05_PCE_TNR_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "    //Waiting that the status,processid and source_processid are given for this type of file. So we are direcly moving to the next step.",
                      "    /*if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file PCE\"] = true; ",
                      "       postman.setNextRequest(\"[00005]Check data\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }*/",
                      "    postman.setNextRequest(\"[00005]Check data\");",
                      "    ",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"PRECO\",\"fileName\":\"PREV_PCE_20170413_20170414_130027.csv\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "69da1b13-d01a-2d7f-5db2-4d60cacc475c",
              "name": "[00005]Check data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult != null){",
                      "       for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results != null){",
                      "               switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessusOld\":",
                      "                    tests[\"Check status in ORC_PROCESSUS Old way\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckPointData\":",
                      "                    tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT >= \"48\";",
                      "                    break;",
                      "                } ",
                      "            }",
                      "        } ",
                      "    }",
                      "    postman.setNextRequest(\"[00010]Delete data\");",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"CheckStatutOrcProcessusOld\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where date_lancement_processus>= (sysdate-1/24/4) and code_technique_processus='PRO_ACG_05' order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('13/04/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('14/04/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('SGPCETVPEC') and type_grandeur in ('ENEPRV','VOLPRV') and po.lstime >= (sysdate-1/24/4)\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "65df62ea-cdb7-d561-1320-99cec6855c3a",
          "name": "[00006]PRO_ACG_04_STM_TNR_ 12",
          "description": "",
          "item": [
            {
              "_postman_id": "1659b646-bc9a-98eb-c1db-c54175868e66",
              "name": "[00006]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeletePoint\":",
                      "                tests[\"Delete Point\"] = true;",
                      "                break;",
                      "",
                      "        }",
                      "    }",
                      "    if (tests[\"Delete Point\"]){",
                      "        tests[\"Delete data Sum up\"] = true; ",
                      "        postman.setNextRequest(\"[00006]Drop file STM\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data Sum up\"] = false; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePoint\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select uidpoint from STATION_METEO p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('17/12/2015 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('18/12/2015 05:00:00','DD/MM/YYYY HH24:MI:SS') and IDSTATION in ('12') )\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "013bb854-b694-1a42-0400-9d370fb74018",
              "name": "[00006]Drop file STM",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"[00006]PRO_ACG_04_STM_TNR_12_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"[00006]PRO_ACG_04_STM_TNR_12_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "    //Waiting that the status,processid and source_processid are given for this type of file. So we are direcly moving to the next step.",
                      "    /*if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file PCE\"] = true; ",
                      "       postman.setNextRequest(\"[00005]Check data\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }*/",
                      "    postman.setNextRequest(\"[00006]Check data\");",
                      "    ",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"STM\",\"fileName\":\"STMChronique_20151217T114559_CHR41_METEOH_01.xml\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "cc445c48-5731-d43f-e830-a6825525658e",
              "name": "[00006]Check data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult != null){",
                      "       for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results != null){",
                      "               switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessus\":",
                      "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckPointData\":",
                      "                    tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT >= \"2\";",
                      "                    break;",
                      "                } ",
                      "            }",
                      "        } ",
                      "    }",
                      "    postman.setNextRequest(null);",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where date_lancement_processus>= (sysdate-1/24/4) and code_technique_processus='PRO_ACG_04' and id_correlation='{{[00006]PRO_ACG_04_STM_TNR_12_processid}}'order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from STATION_METEO p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('17/12/2015 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('18/12/2015 05:00:00','DD/MM/YYYY HH24:MI:SS') and IDSTATION in ('12') and po.lstime >=(sysdate-1/24/4) order by g.idgrandeur, po.horodate asc,po.lstime desc\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "ce385f72-26fc-140c-3c4b-f7c5bd3d073b",
          "name": "TRV",
          "description": "",
          "item": [],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "d7e954d7-9b5b-2dd9-5814-5da0ed705a37",
      "name": "ARF",
      "description": "",
      "item": [
        {
          "_postman_id": "1be93998-51d3-e2a8-8cdf-6897fc5ce608",
          "name": "[00010]PRO_ARF_01_PCE_TNR_SGGUR1133A",
          "description": "",
          "item": [
            {
              "_postman_id": "fa0c3966-02ad-e517-7cd0-c040fadc662c",
              "name": "[00010]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeleteLienGrpCalcul\":",
                      "                tests[\"Delete Lien Grp_Calcul\"] = true;",
                      "                break;",
                      "            case \"DeleteGrpCalcul\":",
                      "                tests[\"Delete Grp_Calcul\"] = true;",
                      "                break;",
                      "        }",
                      "    }",
                      "    if (tests[\"Delete Lien Grp_Calcul\"] && tests[\"Delete Grp_Calcul\"]){",
                      "        tests[\"Delete data Sum up\"] = true; ",
                      "        postman.setNextRequest(\"[00010]Drop file Transaction\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data Sum up\"] = false; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeleteLienGrpCalcul\",\r\n         \"requestContent\":\"delete from  LIEN_GRC_PCE where uidgrp_calcul_pere in (select uidgrp_calcul from GRP_CALCUL where IDGRP_CALCUL='513TEST90')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteGrpCalcul\",\r\n         \"requestContent\":\"delete from grp_calcul where uidgrp_calcul in (select uidgrp_calcul from GRP_CALCUL where IDGRP_CALCUL='513TEST90')\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "25b6ec61-b5c7-e2d2-f350-422fe76d16a1",
              "name": "[00010]Drop file Transaction",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"PRO_ARF_01_PCE_TNR_SGGUR1133A_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"PRO_ARF_01_PCE_TNR_SGGUR1133A_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "   //Waiting that the status,processid and source_processid are given for this type of file. So we are direcly moving to the next step.",
                      "   /*if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file PCE\"] = true; ",
                      "       postman.setNextRequest(\"[00006]Check data\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }*/",
                      "    postman.setNextRequest(\"[00010]Check process cal end\");",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"TRANSACTION\",\"fileName\":\"J20160828_PCR_20160829015704_REF31_CAM_01.xml\",\"wait\":\"true\",\"waitTimeout\":\"120\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "462b084f-6bf2-cc32-5652-6f8ba369a901",
              "name": "[00010]Check process cal end",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check process cal end\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check process cal end\"] = true; ",
                      "       postman.setNextRequest(\"[00010]Check data\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check process cal end\"] = true;",
                      "        postman.setNextRequest(\"[00010]Check data\");  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"processCode\":\"PRO_CAL_01\",\"processId\":\"{{PRO_ARF_01_PCE_TNR_SGGUR1133A_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "39132586-59fd-5294-caf1-5f618cff14a3",
              "name": "[00010]Check data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult != null){",
                      "       for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results != null){",
                      "               switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessusOld\":",
                      "                    tests[\"Check status in ORC_PROCESSUS Old way\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckGrpCalculCreation\":",
                      "                     tests[\"Check status in GRP_CALCUL Creation\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                break;",
                      "                } ",
                      "            }",
                      "        } ",
                      "    }",
                      "    postman.setNextRequest(\"[00011]Delete data\");",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"CheckStatutOrcProcessusOld\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where date_lancement_processus>= (sysdate - 1/24/6) and code_technique_processus='PRO_ARF_01' order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n    {  \r\n          \"requestId\":\"CheckGrpCalculCreation\",\r\n          \"requestContent\":\"select count(*) as COUNT from GRP_CALCUL where IDGRP_CALCUL='513TEST90' and lstime>= (sysdate - 1/24/4)\"\r\n    }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "1dce2ecc-273e-897f-4f58-a8e5982a7336",
          "name": "[00011]PRO_ARF_02_PCE_TNR_PCEVER15_TSTCACHE2",
          "description": "",
          "item": [
            {
              "_postman_id": "34f49b34-cff9-45a7-bd81-8148d8441c1d",
              "name": "[00015]PRO_ARF_05_PCE_TNR_SGPCETVPEC copy",
              "description": "",
              "item": [
                {
                  "_postman_id": "86f6f4ea-f5bb-2953-89f2-9215a7aeb004",
                  "name": "[00015]Delete data",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "if (tests[\"Status code is 200\"]){",
                          "    var jsonData = JSON.parse(responseBody);",
                          "    var sqlResult = jsonData.sqlResult;",
                          "    for(var i= 0; i < sqlResult.length; i++)",
                          "    {",
                          "        switch (sqlResult[i].requestId) {",
                          "            case \"DeleteBTFiche\":",
                          "                tests[\"Delete BT Fiche\"] = true;",
                          "                break;",
                          "        }",
                          "    }",
                          "    if ( tests[\"Delete BT Fiche\"] ){",
                          "        tests[\"Delete data Sum up\"]  = true; ",
                          "        postman.setNextRequest(\"[00015]Drop file BT_Fiche PCE Add\");",
                          "    }",
                          "    else {",
                          "       tests[\"Delete data Sum up\"] = fase; ",
                          "       //postman.setNextRequest(null);",
                          "    }",
                          "}",
                          "else{",
                          "    postman.setNextRequest(null);",
                          "}",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                    "method": "POST",
                    "header": [
                      {
                        "description": "",
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeleteBTFiche\",\r\n         \"requestContent\":\"delete from bt_fiche where UIDFICHE in ('PJR-F03')\"\r\n      }\r\n   ]\r\n}"
                    },
                    "description": ""
                  },
                  "response": []
                },
                {
                  "_postman_id": "18f44066-e28c-780b-65a3-526a95db6dc4",
                  "name": "[00015]Drop file BT_Fiche PCE Add",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "if (tests[\"Status code is 200\"]){",
                          "    var jsonData = JSON.parse(responseBody);",
                          "    postman.setEnvironmentVariable(\"[00015]PRO_ARF_10_PCE_ARF_015_SGPCETVPEC_processid\",jsonData.processId);",
                          "    postman.setEnvironmentVariable(\"[00015]PRO_ARF_10_PCE_ARF_015_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                          "    ",
                          "    if (jsonData.statusProcess === \"2\"){",
                          "        tests[\"Check drop file BTFiche\"] = false;",
                          "        //postman.setNextRequest(null);",
                          "    }",
                          "    else if (jsonData.statusProcess === \"4\"){",
                          "       tests[\"Check drop file BTFiche\"] = true; ",
                          "       postman.setNextRequest(\"[00015]Check data BT_Fiche Add\");",
                          "    }",
                          "    else {",
                          "        tests[\"Check drop file BTFiche\"] = true;",
                          "        postman.setNextRequest(\"[00015]Check data BT_Fiche Add\");",
                          "}",
                          "}",
                          "else{",
                          "    postman.setNextRequest(null);",
                          "}",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                    "method": "POST",
                    "header": [
                      {
                        "description": "",
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"alias\":\"BASET\",\"fileName\":\"J20161222_BASET_20161222093500_REF21_ETR.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
                    },
                    "description": ""
                  },
                  "response": []
                },
                {
                  "_postman_id": "5865d3ca-0d11-c654-67d6-b22c6fedd4ad",
                  "name": "[00015]Check data BT_Fiche Add",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "if (tests[\"Status code is 200\"]){",
                          "    var jsonData = JSON.parse(responseBody);",
                          "    var sqlResult = jsonData.sqlResult;",
                          "    if(sqlResult !== null){",
                          "        for(var i= 0; i < sqlResult.length; i++)",
                          "        {",
                          "            if(sqlResult[i].results !== null){",
                          "                switch (sqlResult[i].requestId) {",
                          "                case \"CheckStatutOrcProcessus\":",
                          "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                          "                    break;",
                          "                case \"CheckBTFicheUpdate\":",
                          "                    tests[\"Check BT_Fiche Update\"] = sqlResult[i].results[0].COUNT == \"1\";",
                          "                    break;",
                          "                ",
                          "                }",
                          "            }",
                          "        }",
                          "    }",
                          "    postman.setNextRequest(null);",
                          "}",
                          "else{",
                          "    postman.setNextRequest(null);",
                          "}",
                          "",
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "//postman.setNextRequest(null);",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                    "method": "POST",
                    "header": [
                      {
                        "description": "",
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_ARF_05' and date_lancement_processus >=(sysdate-1/24/10) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckBTFicheUpdate\",\r\n         \"requestContent\":\"select count(*) as COUNT from PWRLINE.BT_FICHE where BT_FICHE.UIDFICHE='PJR-F03' and BT_FICHE.DATE_DE_MODIFICATION>(sysdate-1/24/10)\"\r\n      }\r\n   ]\r\n}"
                    },
                    "description": ""
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "74cda746-db36-ecd2-dc87-01f04cf98b3f",
              "name": "[00015]PRO_ARF_05_PCE_TNR_SGPCETVPEC copy",
              "description": "",
              "item": [
                {
                  "_postman_id": "c2564c2a-1a59-2f5b-ef40-e16211bb35cc",
                  "name": "[00015]Delete data",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "if (tests[\"Status code is 200\"]){",
                          "    var jsonData = JSON.parse(responseBody);",
                          "    var sqlResult = jsonData.sqlResult;",
                          "    for(var i= 0; i < sqlResult.length; i++)",
                          "    {",
                          "        switch (sqlResult[i].requestId) {",
                          "            case \"DeleteBTFiche\":",
                          "                tests[\"Delete BT Fiche\"] = true;",
                          "                break;",
                          "        }",
                          "    }",
                          "    if ( tests[\"Delete BT Fiche\"] ){",
                          "        tests[\"Delete data Sum up\"]  = true; ",
                          "        postman.setNextRequest(\"[00015]Drop file BT_Fiche PCE Add\");",
                          "    }",
                          "    else {",
                          "       tests[\"Delete data Sum up\"] = fase; ",
                          "       //postman.setNextRequest(null);",
                          "    }",
                          "}",
                          "else{",
                          "    postman.setNextRequest(null);",
                          "}",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                    "method": "POST",
                    "header": [
                      {
                        "description": "",
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeleteBTFiche\",\r\n         \"requestContent\":\"delete from bt_fiche where UIDFICHE in ('PJR-F03')\"\r\n      }\r\n   ]\r\n}"
                    },
                    "description": ""
                  },
                  "response": []
                },
                {
                  "_postman_id": "138936c2-b96f-2dca-2779-0dc9689c86b4",
                  "name": "[00015]Drop file BT_Fiche PCE Add",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "if (tests[\"Status code is 200\"]){",
                          "    var jsonData = JSON.parse(responseBody);",
                          "    postman.setEnvironmentVariable(\"[00015]PRO_ARF_10_PCE_ARF_015_SGPCETVPEC_processid\",jsonData.processId);",
                          "    postman.setEnvironmentVariable(\"[00015]PRO_ARF_10_PCE_ARF_015_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                          "    ",
                          "    if (jsonData.statusProcess === \"2\"){",
                          "        tests[\"Check drop file BTFiche\"] = false;",
                          "        //postman.setNextRequest(null);",
                          "    }",
                          "    else if (jsonData.statusProcess === \"4\"){",
                          "       tests[\"Check drop file BTFiche\"] = true; ",
                          "       postman.setNextRequest(\"[00015]Check data BT_Fiche Add\");",
                          "    }",
                          "    else {",
                          "        tests[\"Check drop file BTFiche\"] = true;",
                          "        postman.setNextRequest(\"[00015]Check data BT_Fiche Add\");",
                          "}",
                          "}",
                          "else{",
                          "    postman.setNextRequest(null);",
                          "}",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                    "method": "POST",
                    "header": [
                      {
                        "description": "",
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"alias\":\"BASET\",\"fileName\":\"J20161222_BASET_20161222093500_REF21_ETR.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
                    },
                    "description": ""
                  },
                  "response": []
                },
                {
                  "_postman_id": "0cceddac-3b55-dd3a-7cde-b44ff547ac4b",
                  "name": "[00015]Check data BT_Fiche Add",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "if (tests[\"Status code is 200\"]){",
                          "    var jsonData = JSON.parse(responseBody);",
                          "    var sqlResult = jsonData.sqlResult;",
                          "    if(sqlResult !== null){",
                          "        for(var i= 0; i < sqlResult.length; i++)",
                          "        {",
                          "            if(sqlResult[i].results !== null){",
                          "                switch (sqlResult[i].requestId) {",
                          "                case \"CheckStatutOrcProcessus\":",
                          "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                          "                    break;",
                          "                case \"CheckBTFicheUpdate\":",
                          "                    tests[\"Check BT_Fiche Update\"] = sqlResult[i].results[0].COUNT == \"1\";",
                          "                    break;",
                          "                ",
                          "                }",
                          "            }",
                          "        }",
                          "    }",
                          "    postman.setNextRequest(null);",
                          "}",
                          "else{",
                          "    postman.setNextRequest(null);",
                          "}",
                          "",
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "//postman.setNextRequest(null);",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                    "method": "POST",
                    "header": [
                      {
                        "description": "",
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_ARF_05' and date_lancement_processus >=(sysdate-1/24/10) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckBTFicheUpdate\",\r\n         \"requestContent\":\"select count(*) as COUNT from PWRLINE.BT_FICHE where BT_FICHE.UIDFICHE='PJR-F03' and BT_FICHE.DATE_DE_MODIFICATION>(sysdate-1/24/10)\"\r\n      }\r\n   ]\r\n}"
                    },
                    "description": ""
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "f670dfbf-15ed-dda6-5bfa-14b216c3265f",
              "name": "[00015]PRO_ARF_05_PCE_TNR_SGPCETVPEC copy",
              "description": "",
              "item": [
                {
                  "_postman_id": "7a408d7f-fcd1-fcfc-bfb8-103c2538081c",
                  "name": "[00015]Delete data",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "if (tests[\"Status code is 200\"]){",
                          "    var jsonData = JSON.parse(responseBody);",
                          "    var sqlResult = jsonData.sqlResult;",
                          "    for(var i= 0; i < sqlResult.length; i++)",
                          "    {",
                          "        switch (sqlResult[i].requestId) {",
                          "            case \"DeleteBTFiche\":",
                          "                tests[\"Delete BT Fiche\"] = true;",
                          "                break;",
                          "        }",
                          "    }",
                          "    if ( tests[\"Delete BT Fiche\"] ){",
                          "        tests[\"Delete data Sum up\"]  = true; ",
                          "        postman.setNextRequest(\"[00015]Drop file BT_Fiche PCE Add\");",
                          "    }",
                          "    else {",
                          "       tests[\"Delete data Sum up\"] = fase; ",
                          "       //postman.setNextRequest(null);",
                          "    }",
                          "}",
                          "else{",
                          "    postman.setNextRequest(null);",
                          "}",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                    "method": "POST",
                    "header": [
                      {
                        "description": "",
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeleteBTFiche\",\r\n         \"requestContent\":\"delete from bt_fiche where UIDFICHE in ('PJR-F03')\"\r\n      }\r\n   ]\r\n}"
                    },
                    "description": ""
                  },
                  "response": []
                },
                {
                  "_postman_id": "38547935-ef2e-89a9-9d95-f423fb441380",
                  "name": "[00015]Drop file BT_Fiche PCE Add",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "if (tests[\"Status code is 200\"]){",
                          "    var jsonData = JSON.parse(responseBody);",
                          "    postman.setEnvironmentVariable(\"[00015]PRO_ARF_10_PCE_ARF_015_SGPCETVPEC_processid\",jsonData.processId);",
                          "    postman.setEnvironmentVariable(\"[00015]PRO_ARF_10_PCE_ARF_015_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                          "    ",
                          "    if (jsonData.statusProcess === \"2\"){",
                          "        tests[\"Check drop file BTFiche\"] = false;",
                          "        //postman.setNextRequest(null);",
                          "    }",
                          "    else if (jsonData.statusProcess === \"4\"){",
                          "       tests[\"Check drop file BTFiche\"] = true; ",
                          "       postman.setNextRequest(\"[00015]Check data BT_Fiche Add\");",
                          "    }",
                          "    else {",
                          "        tests[\"Check drop file BTFiche\"] = true;",
                          "        postman.setNextRequest(\"[00015]Check data BT_Fiche Add\");",
                          "}",
                          "}",
                          "else{",
                          "    postman.setNextRequest(null);",
                          "}",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                    "method": "POST",
                    "header": [
                      {
                        "description": "",
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"alias\":\"BASET\",\"fileName\":\"J20161222_BASET_20161222093500_REF21_ETR.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
                    },
                    "description": ""
                  },
                  "response": []
                },
                {
                  "_postman_id": "399c0632-4356-03f2-0f76-85d655f9f37c",
                  "name": "[00015]Check data BT_Fiche Add",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "if (tests[\"Status code is 200\"]){",
                          "    var jsonData = JSON.parse(responseBody);",
                          "    var sqlResult = jsonData.sqlResult;",
                          "    if(sqlResult !== null){",
                          "        for(var i= 0; i < sqlResult.length; i++)",
                          "        {",
                          "            if(sqlResult[i].results !== null){",
                          "                switch (sqlResult[i].requestId) {",
                          "                case \"CheckStatutOrcProcessus\":",
                          "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                          "                    break;",
                          "                case \"CheckBTFicheUpdate\":",
                          "                    tests[\"Check BT_Fiche Update\"] = sqlResult[i].results[0].COUNT == \"1\";",
                          "                    break;",
                          "                ",
                          "                }",
                          "            }",
                          "        }",
                          "    }",
                          "    postman.setNextRequest(null);",
                          "}",
                          "else{",
                          "    postman.setNextRequest(null);",
                          "}",
                          "",
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "//postman.setNextRequest(null);",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                    "method": "POST",
                    "header": [
                      {
                        "description": "",
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_ARF_05' and date_lancement_processus >=(sysdate-1/24/10) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckBTFicheUpdate\",\r\n         \"requestContent\":\"select count(*) as COUNT from PWRLINE.BT_FICHE where BT_FICHE.UIDFICHE='PJR-F03' and BT_FICHE.DATE_DE_MODIFICATION>(sysdate-1/24/10)\"\r\n      }\r\n   ]\r\n}"
                    },
                    "description": ""
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "4cefc1e3-4e2f-c42f-cb79-fa8b982ca165",
              "name": "[00011]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeleteLienGrpCalcul\":",
                      "                tests[\"Delete Lien Grp_Calcul\"] = true;",
                      "                break;",
                      "            case \"DeleteGrpCalcul\":",
                      "                tests[\"Delete Grp_Calcul\"] = true;",
                      "                break;",
                      "        }",
                      "    }",
                      "    if (tests[\"Delete Lien Grp_Calcul\"] && tests[\"Delete Grp_Calcul\"]){",
                      "        tests[\"Delete data Sum up\"] = true; ",
                      "        postman.setNextRequest(\"[00011]Drop file Avignon\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data Sum up\"] = false; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeleteLienGrpCalcul\",\r\n         \"requestContent\":\"delete from  LIEN_GRC_PCE where uidgrp_calcul_pere in (select uidgrp_calcul from GRP_CALCUL where IDGRP_CALCUL='TSTCACHE2')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteGrpCalcul\",\r\n         \"requestContent\":\"delete from grp_calcul where uidgrp_calcul in (select uidgrp_calcul from GRP_CALCUL where IDGRP_CALCUL='TSTCACHE2')\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "34b2c131-0e25-8aea-6be0-3b2b618eeb26",
              "name": "[00011]Drop file Avignon",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"PRO_ARF_02_PCE_TNR_PCEVER15_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"PRO_ARF_02_PCE_TNR_PCEVER15_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "   //Waiting that the status,processid and source_processid are given for this type of file. So we are direcly moving to the next step.",
                      "   /*if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file PCE\"] = true; ",
                      "       postman.setNextRequest(\"[00007]Check data\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }*/",
                      "    postman.setNextRequest(\"[00011]Check data\");",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"AVIGNON\",\"fileName\":\"M20161201_PAP_20161205144223_REF51_AVI_01.xml\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "9b17e484-bb50-d8f3-48c8-e991b77f6dc1",
              "name": "[00011]Check data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult !== null){",
                      "       for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results !== null){",
                      "               switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessusOld\":",
                      "                    tests[\"Check status in ORC_PROCESSUS Old way\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckGrpCalculCreation\":",
                      "                     tests[\"Check status in GRP_CALCUL Creation\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                break;",
                      "                } ",
                      "            }",
                      "        } ",
                      "    }",
                      "    postman.setNextRequest(null);",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n        {  \r\n         \"requestId\":\"CheckStatutOrcProcessusOld\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where date_lancement_processus>= (sysdate - 1/24/6) and code_technique_processus='PRO_ARF_02' order by date_lancement_processus desc fetch first 1 rows only\"\r\n    },\r\n    {  \r\n          \"requestId\":\"CheckGrpCalculCreation\",\r\n          \"requestContent\":\"select count(*) as COUNT from GRP_CALCUL where IDGRP_CALCUL='TSTCACHE2' and lstime>= (sysdate - 1/24/6)\"\r\n    }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "b0911cb4-dc59-d930-f579-16a3ec26fee8",
          "name": "[00015]PRO_ARF_05_PCE_TNR_SGPCETVPEC",
          "description": "",
          "item": [
            {
              "_postman_id": "298897e2-6749-ccb0-2a2b-7059cbe3a67e",
              "name": "[00015]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeleteBTFiche\":",
                      "                tests[\"Delete BT Fiche\"] = true;",
                      "                break;",
                      "        }",
                      "    }",
                      "    if ( tests[\"Delete BT Fiche\"] ){",
                      "        tests[\"Delete data Sum up\"]  = true; ",
                      "        postman.setNextRequest(\"[00015]Drop file BT_Fiche PCE Add\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data Sum up\"] = fase; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeleteBTFiche\",\r\n         \"requestContent\":\"delete from bt_fiche where UIDFICHE in ('PJR-F03')\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "7e813eb3-6312-bcf7-d312-40fbc88ccaeb",
              "name": "[00015]Drop file BT_Fiche PCE Add",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"[00015]PRO_ARF_10_PCE_ARF_015_SGPCETVPEC_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"[00015]PRO_ARF_10_PCE_ARF_015_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file BTFiche\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file BTFiche\"] = true; ",
                      "       postman.setNextRequest(\"[00015]Check data BT_Fiche Add\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file BTFiche\"] = true;",
                      "        postman.setNextRequest(\"[00015]Check data BT_Fiche Add\");",
                      "}",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"BASET\",\"fileName\":\"J20161222_BASET_20161222093500_REF21_ETR.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "963c059a-a2fa-c775-fd07-0f5529b554ca",
              "name": "[00015]Check data BT_Fiche Add",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult !== null){",
                      "        for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results !== null){",
                      "                switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessus\":",
                      "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckBTFicheUpdate\":",
                      "                    tests[\"Check BT_Fiche Update\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                ",
                      "                }",
                      "            }",
                      "        }",
                      "    }",
                      "    postman.setNextRequest(null);",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "description": "",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_ARF_05' and date_lancement_processus >=(sysdate-1/24/10) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckBTFicheUpdate\",\r\n         \"requestContent\":\"select count(*) as COUNT from PWRLINE.BT_FICHE where BT_FICHE.UIDFICHE='PJR-F03' and BT_FICHE.DATE_DE_MODIFICATION>(sysdate-1/24/10)\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "1bed5287-555b-c1c7-c566-3fec97ec312c",
      "name": "Old",
      "description": "",
      "item": [
        {
          "_postman_id": "d1862db7-282a-45d8-d3c7-2b758fc30440",
          "name": "[00001]PRO_ACG_01_FGA_TNR_SGTUH97A",
          "description": "",
          "item": [
            {
              "_postman_id": "0a9f0e9d-a58d-9d82-c8ae-c0d5a6b1eea7",
              "name": "[00001]Drop file FGA",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_01_FGA_TNR_SGTUH97A_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_01_FGA_TNR_SGTUH97A_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file FGA\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file FGA\"] = true; ",
                      "       postman.setNextRequest(\"[00001]Check process cal end\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file FGA\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"SCALA_FGA\",\"fileName\":\"H20170119_FGA_20170119185806_CHR02_SCALA_5-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "3d287fb1-a054-9799-f78b-fea303a742d7",
              "name": "[00001]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeletePointData\":",
                      "                tests[\"Delete Point Data\"] = true;",
                      "                break;",
                      "            case \"DeleteAcqFgaData\":",
                      "                tests[\"Delete Acq_Fga Data\"] = true;",
                      "                break;",
                      "            case \"DeletePubPointJmnFgaData\":",
                      "                tests[\"Delete Pub_Point_Jmn_Fga Data\"] = true;",
                      "                break;",
                      "        }",
                      "    }",
                      "    if (tests[\"Delete Point Data\"] && tests[\"Delete Acq_Fga Data\"] && tests[\"Delete Pub_Point_Jmn_Fga Data\"]){",
                      "        tests[\"Delete data Sum up\"] = true; ",
                      "        postman.setNextRequest(\"[00001]Drop file FGA\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data\"] = fase; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('20/01/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idfga in ('SGTUH97A'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqFgaData\",\r\n         \"requestContent\":\"delete from acq_fga_conservee where uidacq_fga_conservee in (select uidacq_fga_conservee from acq_fga_conservee where code_acquisition in ('SGTUH97A') and jour_gazier= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeletePubPointJmnFgaData\",\r\n         \"requestContent\":\"delete from pub_point_jmn_fga where uidgrandeur in (select pp.uidgrandeur from pub_point_jmn_fga pp, fga p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idfga='SGTUH97A' and horodate between TO_DATE('2017-01-19 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-01-20 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "cd39ab8e-f11a-768a-5891-4dd27b33902f",
              "name": "[00001]Check process cal end",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check process cal end\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check process cal end\"] = true; ",
                      "       postman.setNextRequest(\"[00001]Check data\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check process cal end\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{PRO_ACG_01_FGA_TNR_SGTUH97A_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "e41b00d0-1d40-8db5-25f7-9feb33a267c8",
              "name": "[00001]Check data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult !== null){",
                      "        for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results !== null){",
                      "                switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessus\":",
                      "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckAcqFgaConservee\":",
                      "                    tests[\"Check ACQ_FGA_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                case \"CheckStockAcquisition2\":",
                      "                    tests[\"Check STOCK_ACQUISITION2\"] = sqlResult[i].results[0].COUNT == \"338\";",
                      "                    break;",
                      "                case \"CheckDmdCalcul\":",
                      "                    tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                case \"CheckStockAcquisitionCal\":",
                      "                    tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                    break;",
                      "                case \"CheckPointData\":",
                      "                    tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"338\";",
                      "                    break;",
                      "                case \"CheckPubPointJmnFgaData\":",
                      "                    tests[\"Check PUB_POINT_JMN_FGA data\"] = sqlResult[i].results[0].COUNT == \"338\";",
                      "                    break;",
                      "                case \"CheckStockAcquisitionForAcq\":",
                      "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                    break;   ",
                      "                case \"CheckStockAcquisitionForCal\":",
                      "                    tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                    break; ",
                      "                }",
                      "            }",
                      "        }",
                      "    }",
                      "    postman.setNextRequest(\"[00002]Delete data\");",
                      "",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqFgaConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_fga_conservee where code_acquisition in ('SGTUH97A') and jour_gazier= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and lstime >= sysdate-1/24\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where prec_processid='{{PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from fga p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('20/01/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idfga in ('SGTUH97A') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPubPointJmnFgaData\",\r\n         \"requestContent\":\"select count(*) as COUNT from PUB_POINT_jmn_fga pp  inner join grandeur on pp.uidgrandeur = grandeur.uidgrandeur  where  horodate between TO_DATE('2017-01-19 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-01-20 05:00:00', 'YYYY-MM-DD HH24:MI:SS')  and idgrandeur like '%SGTUH97A%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_01_FGA_TNR_SGTUH97A_processid}}')\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "41c4d5fe-4a18-1509-8b8c-8457910d18d6",
          "name": "[00002]PRO_ACG_01_PCE_TNR_SGGUR1133A",
          "description": "",
          "item": [
            {
              "_postman_id": "2c437969-ddbb-4524-193d-9d003085db1c",
              "name": "[00002]Check process cal end",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check process cal end\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check process cal end\"] = true; ",
                      "       postman.setNextRequest(\"[00002]Check data\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check process cal end\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{PRO_ACG_01_PCE_TNR_SGGUR1133A_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "b8106c52-3db4-1f47-7ff9-6fd31b62578e",
              "name": "[00002]Drop file PCE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_01_PCE_TNR_SGGUR1133A_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_01_PCE_TNR_SGGUR1133A_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file PCE\"] = true; ",
                      "       postman.setNextRequest(\"[00002]Check process cal end\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"SCALA_PCE\",\"fileName\":\"H20170227_PCE_20170227131828_CHR02_SCALA_12-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "c66cce13-f48c-b01b-a986-6df00f7b8cb2",
              "name": "[00002]Check data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult != null){",
                      "       for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results != null){",
                      "               switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessus\":",
                      "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckAcqPceConservee\":",
                      "                    tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                case \"CheckStockAcquisition2\":",
                      "                    tests[\"Check STOCK_ACQUISITION2\"] = sqlResult[i].results[0].COUNT == \"104\";",
                      "                    break;",
                      "                case \"CheckDmdCalcul\":",
                      "                    tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                case \"CheckStockAcquisitionCal\":",
                      "                    tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"176\";",
                      "                    break;",
                      "                case \"CheckPointData\":",
                      "                    tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"24\";",
                      "                    break;",
                      "                case \"CheckPubPointData\":",
                      "                    tests[\"Check PUB_POINT data\"] = sqlResult[i].results[0].COUNT == \"248\";",
                      "                    break;",
                      "                case \"CheckEtrMeteringDataData\":",
                      "                    tests[\"Check ETR_METERING_DATA data\"] = sqlResult[i].results[0].COUNT == \"39\";",
                      "                    break;",
                      "                case \"CheckStockAcquisitionForAcq\":",
                      "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                    break;   ",
                      "                case \"CheckStockAcquisitionForCal\":",
                      "                    tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                    break; ",
                      "                case \"CheckAlerte\" :",
                      "                    tests[\"Check Alerte\"] = sqlResult[i].results[0].COUNT >= \"10\";",
                      "                    break; ",
                      "                } ",
                      "            }",
                      "        } ",
                      "    }",
                      "    postman.setNextRequest(\"[00003]Delete data\");",
                      "    ",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult != null){",
                      "       for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results != null){",
                      "               switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessus\":",
                      "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckAcqPceConservee\":",
                      "                    tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                case \"CheckStockAcquisition2\":",
                      "                    tests[\"Check STOCK_ACQUISITION2\"] = sqlResult[i].results[0].COUNT == \"104\";",
                      "                    break;",
                      "                case \"CheckDmdCalcul\":",
                      "                    tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                case \"CheckStockAcquisitionCal\":",
                      "                    tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"176\";",
                      "                    break;",
                      "                case \"CheckPointData\":",
                      "                    tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"24\";",
                      "                    break;",
                      "                case \"CheckPubPointData\":",
                      "                    tests[\"Check PUB_POINT data\"] = sqlResult[i].results[0].COUNT == \"248\";",
                      "                    break;",
                      "                case \"CheckEtrMeteringDataData\":",
                      "                    tests[\"Check ETR_METERING_DATA data\"] = sqlResult[i].results[0].COUNT == \"39\";",
                      "                    break;",
                      "                case \"CheckStockAcquisitionForAcq\":",
                      "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                    break;   ",
                      "                case \"CheckStockAcquisitionForCal\":",
                      "                    tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                    break; ",
                      "                case \"CheckAlerte\" :",
                      "                    tests[\"Check Alerte\"] = sqlResult[i].results[0].COUNT >= \"10\";",
                      "                    break; ",
                      "                } ",
                      "            }",
                      "        } ",
                      "    }",
                      "    postman.setNextRequest(\"[00003]Delete data\");",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);"
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{PRO_ACG_01_PCE_TNR_SGGUR1133A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('SGGUR1133A') and jour_gazier= TO_DATE('27/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and lstime >= sysdate-1/24\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_01_PCE_TNR_SGGUR1133A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where lstime >=(sysdate-1/24/4) and prec_processid='{{PRO_ACG_01_PCE_TNR_SGGUR1133A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_01_PCE_TNR_SGGUR1133A_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('27/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('28/02/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('SGGUR1133A') and type_grandeur in ('VOLPEC','ENEPEC','PCSMOY') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPubPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from PUB_POINT  inner join grandeur on pub_point.uidgrandeur = grandeur.uidgrandeur  where  horodate between TO_DATE('2017-02-27 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-28 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and date_modif >= (sysdate-1/24/4) and idgrandeur like '%SGGUR1133A%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckEtrMeteringDataData\",\r\n         \"requestContent\":\"select count(*) as COUNT from ETR_METERING_DATA  where  gas_day between TO_DATE('2017-02-27 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-28 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and insertion_date >= (sysdate-1/24/4) and pce_code like '%SGGUR1133A%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_01_PCE_TNR_SGGUR1133A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_01_PCE_TNR_SGGUR1133A_processid}}')\"\r\n         \r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAlerte\",\r\n         \"requestContent\":\"select count(*) as count from alerte, pce where  alerte.uidgrandeurs_objet=pce.uidgrandeurs_objet and IDPCE='SGGUR1133A'and alerte.lstime>=(sysdate-1/24/4) order by horodate desc, uidtest_ref desc,alerte.LSTIME DESC \"\r\n         \r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "fc67aefe-6477-79f5-ef80-e4cbfe172e9a",
              "name": "[00002]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeletePointData\":",
                      "                tests[\"Delete Point Data\"] = true;",
                      "                break;",
                      "            case \"DeleteAcqPceData\":",
                      "                tests[\"Delete Acq_Pce Data\"] = true;",
                      "                break;",
                      "            case \"DeletePubPointData\":",
                      "                tests[\"Delete Pub_Point Data\"] = true;",
                      "                break;",
                      "            case \"DeleteEtrMeteringDataData\":",
                      "                tests[\"Delete Etr_Metering_Data Data\"] = true;",
                      "                break;",
                      "            case \"DeleteAlerte\":",
                      "                tests[\"Delete Alerte\"] = true;",
                      "                break;",
                      "        }",
                      "    }",
                      "    if (tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"] && tests[\"Delete Pub_Point Data\"] && tests[\"Delete Alerte\"]){",
                      "        tests[\"Delete data Sum up\"] = true; ",
                      "        postman.setNextRequest(\"[00002]Drop file PCE\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data\"] = fase; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setNextRequest(\"[00002]Drop file PCE\");"
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('27/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('28/02/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('SGGUR1133A'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('SGGUR1133A') and jour_gazier= TO_DATE('27/02/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeletePubPointData\",\r\n         \"requestContent\":\"delete from pub_point where uidgrandeur in (select pp.uidgrandeur from pub_point pp, pce p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idpce='SGGUR1133A' and horodate between TO_DATE('2017-02-27 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-28 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteEtrMeteringDataData\",\r\n         \"requestContent\":\"delete from ETR_METERING_DATA  where  gas_day between TO_DATE('2017-02-27 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-28 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and insertion_date >= (sysdate-1/24/4) and pce_code like '%SGGUR1133A%'\"\r\n      },\r\n      {  \r\n      \"requestId\":\"DeleteAlerte\",\r\n         \"requestContent\":\"delete from Alerte where  uidalerte in (select uidalerte from alerte, pce where  alerte.uidgrandeurs_objet=pce.uidgrandeurs_objet and IDPCE='SGGUR1133A' and horodate between TO_DATE('2017-02-27 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-02-28 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n     }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "5054b9d2-90e5-d606-e3bf-da67797d2a5e",
          "name": "[00003]PRO_ACG_03_PCE_TNR_METNEEPS1",
          "description": "",
          "item": [
            {
              "_postman_id": "002eb9f5-8da0-1c62-6f28-5521055aaa60",
              "name": "[00003]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeletePointData\":",
                      "                tests[\"Delete Point Data\"] = true;",
                      "                break;",
                      "            case \"DeleteAcqPceData\":",
                      "                tests[\"Delete Acq_Pce Data\"] = true;",
                      "                break;",
                      "            case \"DeletePubPointData\":",
                      "                tests[\"Delete Pub_Point Data\"] = true;",
                      "                break;",
                      "            case \"DeleteEtrMeteringDataData\":",
                      "                tests[\"Delete Etr_Metering_Data Data\"] = true;",
                      "                break;",
                      "        }",
                      "    }",
                      "    if (tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"] && tests[\"Delete Pub_Point Data\"]){",
                      "        tests[\"Delete data Sum up\"] = true; ",
                      "        postman.setNextRequest(\"[00003]Drop file PCE\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data\"] = fase; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setNextRequest(\"[00004]Drop file PCE\");"
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('20/01/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('METNEEPS1'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('RCA_102') and jour_gazier= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeletePubPointData\",\r\n         \"requestContent\":\"delete from pub_point where uidgrandeur in (select pp.uidgrandeur from pub_point pp, pce p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idpce='METNEEPS1' and horodate between TO_DATE('2017-01-19 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-01-20 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteEtrMeteringDataData\",\r\n         \"requestContent\":\"delete from ETR_METERING_DATA  where  gas_day between TO_DATE('2017-01-19 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-01-20 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and insertion_date >= (sysdate-1/24/4) and pce_code like '%METNEEPS1%'\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "0c6e21ea-58c0-bef7-9de2-ae2aad50f40d",
              "name": "[00003]Drop file PCE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_03_PCE_TNR_METNEEPS1_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_03_PCE_TNR_METNEEPS1_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file PCE\"] = true; ",
                      "       postman.setNextRequest(\"[00003]Check process cal end\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"PI-SEC\",\"fileName\":\"H20170119_PISEC_20170119711406_CHR09_DH.xml\",\"wait\":\"true\",\"waitTimeout\":\"180\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "9f4c7084-a912-6551-410d-3c0384281112",
              "name": "[00003]Check process cal end",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check process cal end\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check process cal end\"] = true; ",
                      "       postman.setNextRequest(\"[00003]Check data\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check process cal end\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{PRO_ACG_03_PCE_TNR_METNEEPS1_sourceProcessId}}\",\"waitTimeout\":\"90\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "34e221b3-1ff6-cdd0-7700-7c6e3a3938e4",
              "name": "[00003]Check data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "console.log(tests[\"Status code is 200\"]);",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    console.log(sqlResult)",
                      "    if(sqlResult != null){",
                      "        for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            console.log(sqlResult.results)",
                      "            if(sqlResult[i].results != null){",
                      "                switch (sqlResult[i].requestId) {",
                      "                    case \"CheckStatutOrcProcessus\":",
                      "                        tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                        break;",
                      "                    case \"CheckAcqPceConservee\":",
                      "                        tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                        break;",
                      "                    case \"CheckStockAcquisition2\":",
                      "                        tests[\"Check STOCK_ACQUISITION2\"] = sqlResult[i].results[0].COUNT == \"554\";",
                      "                        break;",
                      "                    case \"CheckDmdCalcul\":",
                      "                        tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                        break;",
                      "                    case \"CheckStockAcquisitionCal\":",
                      "                        tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"525\";",
                      "                        break;",
                      "                    case \"CheckPointData\":",
                      "                        tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"75\";",
                      "                        break;",
                      "                    case \"CheckPubPointData\":",
                      "                        tests[\"Check PUB_POINT data\"] = sqlResult[i].results[0].COUNT == \"623\";",
                      "                        break;",
                      "                    case \"CheckEtrMeteringDataData\":",
                      "                        tests[\"Check ETR_METERING_DATA data\"] = sqlResult[i].results[0].COUNT == \"90\";",
                      "                        break;",
                      "                    case \"CheckStockAcquisitionForAcq\":",
                      "                        tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                        break;   ",
                      "                    case \"CheckStockAcquisitionForCal\":",
                      "                        tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                        break; ",
                      "                }",
                      "            }",
                      "        }",
                      "    }",
                      "    postman.setNextRequest(\"[00004]Delete data\");",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);"
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{PRO_ACG_03_PCE_TNR_METNEEPS1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('RCA_102') and jour_gazier= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and lstime >= sysdate-1/24\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_03_PCE_TNR_METNEEPS1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where lstime >=(sysdate-1/24/4) and prec_processid='{{PRO_ACG_03_PCE_TNR_METNEEPS1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_03_PCE_TNR_METNEEPS1_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('19/01/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('20/01/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('METNEEPS1') and type_grandeur in ('VOLPEC','ENEPEC','PCSMOY') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPubPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from PUB_POINT  inner join grandeur on pub_point.uidgrandeur = grandeur.uidgrandeur  where  horodate between TO_DATE('2017-01-19 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-01-20 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and date_modif >= (sysdate-1/24/4) and idgrandeur like '%METNEEPS1%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckEtrMeteringDataData\",\r\n         \"requestContent\":\"select count(*) as COUNT from ETR_METERING_DATA  where  gas_day between TO_DATE('2017-01-19 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2017-01-20 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and insertion_date >= (sysdate-1/24/4) and pce_code like '%METNEEPS1%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_03_PCE_TNR_METNEEPS1_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_03_PCE_TNR_METNEEPS1_processid}}')\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "21dcf168-4823-92b5-0837-638b5ced0893",
          "name": "[00004]PRO_ACG_39_PCE_TNR_VERTEST2A",
          "description": "",
          "item": [
            {
              "_postman_id": "6cc113c3-0ea6-029e-9db9-33f5e17b73c5",
              "name": "[00004]Check data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult != null){",
                      "       for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results != null){",
                      "               switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessus\":",
                      "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckAcqPceConservee\":",
                      "                    tests[\"Check ACQ_PCE_CONSERVEE\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                case \"CheckStockAcquisition2\":",
                      "                    tests[\"Check STOCK_ACQUISITION2\"] = sqlResult[i].results[0].COUNT == \"143\";",
                      "                    break;",
                      "                case \"CheckDmdCalcul\":",
                      "                    tests[\"Check DMD_CALCUL\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                    break;",
                      "                case \"CheckStockAcquisitionCal\":",
                      "                    tests[\"Check STOCK_ACQUISITION_CAL\"] = sqlResult[i].results[0].COUNT == \"242\";",
                      "                    break;",
                      "                case \"CheckPointData\":",
                      "                    tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT == \"33\";",
                      "                    break;",
                      "                case \"CheckPubPointData\":",
                      "                    tests[\"Check PUB_POINT data\"] = sqlResult[i].results[0].COUNT == \"341\";",
                      "                    break;",
                      "                case \"CheckEtrMeteringDataData\":",
                      "                    tests[\"Check ETR_METERING_DATA data\"] = sqlResult[i].results[0].COUNT == \"48\";",
                      "                    break;",
                      "                case \"CheckStockAcquisitionForAcq\":",
                      "                    tests[\"Check STOCK_ACQUISITION for Acq\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                    break;   ",
                      "                case \"CheckStockAcquisitionForCal\":",
                      "                    tests[\"Check STOCK_ACQUISITION For Cal\"] = sqlResult[i].results[0].COUNT == \"0\";",
                      "                    break; ",
                      "                } ",
                      "            }",
                      "        } ",
                      "    }",
                      "    postman.setNextRequest(\"[00005]Delete data\");",
                      "}",
                      "else{",
                      "    postman.setNextRequest(\"[00005]Delete data\");",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where id_correlation='{{PRO_ACG_39_PCE_TNR_VERTEST2A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckAcqPceConservee\",\r\n         \"requestContent\":\"select count(*) as COUNT from acq_pce_conservee where code_acquisition in ('VERTEST2A') and jour_gazier= TO_DATE('16/06/2016 06:00:00','DD/MM/YYYY HH24:MI:SS') and lstime >= sysdate-1/24\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisition2\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition2 where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_39_PCE_TNR_VERTEST2A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckDmdCalcul\",\r\n         \"requestContent\":\"select count(*) as COUNT from dmd_calcul where lstime >=(sysdate-1/24/4) and prec_processid='{{PRO_ACG_39_PCE_TNR_VERTEST2A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition_cal where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_39_PCE_TNR_VERTEST2A_processid}}')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('16/06/2016 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('17/06/2016 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('VERTEST2A') and type_grandeur in ('VOLPEC','ENEPEC','PCSMOY') and po.lstime >= (sysdate-1/24/4)\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPubPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from PUB_POINT  inner join grandeur on pub_point.uidgrandeur = grandeur.uidgrandeur  where  horodate between TO_DATE('2016-06-16 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2016-06-17 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and date_modif >= (sysdate-1/24/4) and idgrandeur like '%VERTEST2A%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckEtrMeteringDataData\",\r\n         \"requestContent\":\"select count(*) as COUNT from ETR_METERING_DATA  where  gas_day between TO_DATE('2016-06-16 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2016-06-17 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and insertion_date >= (sysdate-1/24/4) and pce_code like '%VERTEST2A%'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForAcq\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where lstime >=(sysdate-1/24) and processid='{{PRO_ACG_39_PCE_TNR_VERTEST2A_processid}}'\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckStockAcquisitionForCal\",\r\n         \"requestContent\":\"select count(*) as COUNT from stock_acquisition where processid in (select courant_processid from dmd_calcul where prec_processid='{{PRO_ACG_39_PCE_TNR_VERTEST2A_processid}}')\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "85c7d665-699f-80b9-7c90-d69eaefca29c",
              "name": "[00004]Drop file PCE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_39_PCE_TNR_VERTEST2A_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_39_PCE_TNR_VERTEST2A_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file PCE\"] = true; ",
                      "       postman.setNextRequest(\"[00004]Check process cal end\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"EDHOUARD_PCE\",\"fileName\":\"H20160616_PCE_20160616163547_CHR01_EDHOUARD_240-1F.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "ab3afc23-dae5-a3f1-6570-0be2e3e00cc8",
              "name": "[00004]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeletePointData\":",
                      "                tests[\"Delete Point Data\"] = true;",
                      "                break;",
                      "            case \"DeleteAcqPceData\":",
                      "                tests[\"Delete Acq_Pce Data\"] = true;",
                      "                break;",
                      "            case \"DeletePubPointData\":",
                      "                tests[\"Delete Pub_Point Data\"] = true;",
                      "                break;",
                      "            case \"DeleteEtrMeteringDataData\":",
                      "                tests[\"Delete Etr_Metering_Data Data\"] = true;",
                      "                break;",
                      "        }",
                      "    }",
                      "    if (tests[\"Delete Point Data\"] && tests[\"Delete Acq_Pce Data\"] && tests[\"Delete Pub_Point Data\"]){",
                      "        tests[\"Delete data Sum up\"] = true; ",
                      "        postman.setNextRequest(\"[00004]Drop file PCE\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data\"] = fase; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setNextRequest(\"[00003]Drop file PCE\");"
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePointData\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select po.uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('16/06/2016 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('17/06/2016 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('VERTEST2A'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteAcqPceData\",\r\n         \"requestContent\":\"delete from acq_pce_conservee where uidacq_pce_conservee in (select uidacq_pce_conservee from acq_pce_conservee where code_acquisition in ('VERTEST2A') and jour_gazier= TO_DATE('16/06/2016 06:00:00','DD/MM/YYYY HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeletePubPointData\",\r\n         \"requestContent\":\"delete from pub_point where uidgrandeur in (select pp.uidgrandeur from pub_point pp, pce p, grandeur g, GRANDEURS_OBJET go where  pp.uidgrandeur=g.UIDGRANDEUR and g.UIDGRANDEURS_OBJET=go.UIDGRANDEURS_OBJET and go.uidgrandeurs_objet=p.uidgrandeurs_objet and p.idpce='VERTEST2A' and horodate between TO_DATE('2016-06-16 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2016-06-17 05:00:00', 'YYYY-MM-DD HH24:MI:SS'))\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteEtrMeteringDataData\",\r\n         \"requestContent\":\"delete from ETR_METERING_DATA  where  gas_day between TO_DATE('2016-06-16 06:00:00', 'YYYY-MM-DD HH24:MI:SS')and TO_DATE('2016-06-16 05:00:00', 'YYYY-MM-DD HH24:MI:SS') and insertion_date >= (sysdate-1/24/4) and pce_code like '%VERTEST2A%'\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "b6493348-ab6b-9e62-bcea-9a022fce8207",
              "name": "[00004]Check process cal end",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check process cal end\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check process cal end\"] = true; ",
                      "       postman.setNextRequest(\"[00004]Check data\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check process cal end\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/checkProcess/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"processCode\":\"PRO_CAL_02\",\"processId\":\"{{PRO_ACG_39_PCE_TNR_VERTEST2A_sourceProcessId}}\",\"waitTimeout\":\"60\"}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "31918c2d-6d24-5b3a-db74-a1f836a8b832",
          "name": "[00005]PRO_ACG_05_PCE_TNR_SGPCETVPEC",
          "description": "",
          "item": [
            {
              "_postman_id": "148b4d25-0166-128a-3e4f-c61d984edc72",
              "name": "[00005]Drop file PCE",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_05_PCE_TNR_SGPCETVPEC_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"PRO_ACG_05_PCE_TNR_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "    //Waiting that the status,processid and source_processid are given for this type of file. So we are direcly moving to the next step.",
                      "    /*if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file PCE\"] = true; ",
                      "       postman.setNextRequest(\"[00005]Check data\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }*/",
                      "    postman.setNextRequest(\"[00005]Check data\");",
                      "    ",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"PRECO\",\"fileName\":\"PREV_PCE_20170413_20170414_130027.csv\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "7ef8276b-ef2d-84e0-b829-ad27152b5f7d",
              "name": "[00005]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeletePoint\":",
                      "                tests[\"Delete Point\"] = true;",
                      "                break;",
                      "",
                      "        }",
                      "    }",
                      "    if (tests[\"Delete Point\"]){",
                      "        tests[\"Delete data Sum up\"] = true; ",
                      "        postman.setNextRequest(\"[00005]Drop file PCE\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data Sum up\"] = false; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePoint\",\r\n         \"requestContent\":\"delete from POINT where uidpoint in (select uidpoint from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('13/04/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('14/04/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('SGPCETVPEC') and type_grandeur in ('ENEPRV','VOLPRV'))\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "de5d98d9-3a3b-af45-7283-3d568653d231",
              "name": "[00005]Check data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult != null){",
                      "       for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results != null){",
                      "               switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessusOld\":",
                      "                    tests[\"Check status in ORC_PROCESSUS Old way\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckPointData\":",
                      "                    tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT >= \"48\";",
                      "                    break;",
                      "                } ",
                      "            }",
                      "        } ",
                      "    }",
                      "    postman.setNextRequest(\"[00010]Delete data\");",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"CheckStatutOrcProcessusOld\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where date_lancement_processus>= (sysdate-1/24/4) and code_technique_processus='PRO_ACG_05' order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from pce p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and ((po.HORODATE >= TO_DATE('13/04/2017 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('14/04/2017 05:00:00','DD/MM/YYYY HH24:MI:SS') )) and Idpce in ('SGPCETVPEC') and type_grandeur in ('ENEPRV','VOLPRV') and po.lstime >= (sysdate-1/24/4)\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "93169307-447a-59a2-e552-d7f663f8aa3c",
          "name": "[00006]PRO_ACG_04_STM_TNR_ 12",
          "description": "",
          "item": [
            {
              "_postman_id": "01493c9b-9d69-d9b3-234a-415cf32212d8",
              "name": "[00006]Check data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult != null){",
                      "       for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results != null){",
                      "               switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessus\":",
                      "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckPointData\":",
                      "                    tests[\"Check POINT data\"] = sqlResult[i].results[0].COUNT >= \"2\";",
                      "                    break;",
                      "                } ",
                      "            }",
                      "        } ",
                      "    }",
                      "    postman.setNextRequest(null);",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where date_lancement_processus>= (sysdate-1/24/4) and code_technique_processus='PRO_ACG_04' and id_correlation='{{[00006]PRO_ACG_04_STM_TNR_12_processid}}'order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckPointData\",\r\n         \"requestContent\":\"select count(*) as COUNT from STATION_METEO p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('17/12/2015 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('18/12/2015 05:00:00','DD/MM/YYYY HH24:MI:SS') and IDSTATION in ('12') and po.lstime >=(sysdate-1/24/4) order by g.idgrandeur, po.horodate asc,po.lstime desc\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "5d1a83b7-ce8f-24f1-7822-c42cbcc996ce",
              "name": "[00006]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeletePoint\":",
                      "                tests[\"Delete Point\"] = true;",
                      "                break;",
                      "",
                      "        }",
                      "    }",
                      "    if (tests[\"Delete Point\"]){",
                      "        tests[\"Delete data Sum up\"] = true; ",
                      "        postman.setNextRequest(\"[00006]Drop file STM\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data Sum up\"] = false; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePoint\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select uidpoint from STATION_METEO p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('17/12/2015 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('18/12/2015 05:00:00','DD/MM/YYYY HH24:MI:SS') and IDSTATION in ('12') )\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "b648119a-7e85-2d89-af06-53dad52181b9",
              "name": "[00006]Drop file STM",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"[00006]PRO_ACG_04_STM_TNR_12_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"[00006]PRO_ACG_04_STM_TNR_12_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "    //Waiting that the status,processid and source_processid are given for this type of file. So we are direcly moving to the next step.",
                      "    /*if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file PCE\"] = true; ",
                      "       postman.setNextRequest(\"[00005]Check data\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }*/",
                      "    postman.setNextRequest(\"[00006]Check data\");",
                      "    ",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"STM\",\"fileName\":\"STMChronique_20151217T114559_CHR41_METEOH_01.xml\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "f758d5d0-2d7e-9c7c-aef7-3eaba310539a",
          "name": "[00007]PRO_ACG_15_SGGU0707A",
          "description": "",
          "item": [
            {
              "_postman_id": "ca1aacdb-7341-a228-c92c-4dca3d122515",
              "name": "[00007] Call of PRO_ACG_15",
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_PRO_ACG_15/ws ",
                "method": "POST",
                "header": [
                  {
                    "key": "Content",
                    "value": "application/json",
                    "description": ""
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"historiqueAcquisitionsDetailsFichierDto\": {\"code\":\"SGGU0707A\",\"typeObject\":\"PCE\",\"uidacq\":\"98516899\"}}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "2dabeacd-8d46-6bca-564f-11a61eb18e55",
          "name": "[00010]PRO_ARF_01_PCE_TNR_SGGUR1133A",
          "description": "",
          "item": [
            {
              "_postman_id": "57972383-a145-fcdf-ebe4-6900afb72040",
              "name": "[00010]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeleteLienGrpCalcul\":",
                      "                tests[\"Delete Lien Grp_Calcul\"] = true;",
                      "                break;",
                      "            case \"DeleteGrpCalcul\":",
                      "                tests[\"Delete Grp_Calcul\"] = true;",
                      "                break;",
                      "        }",
                      "    }",
                      "    if (tests[\"Delete Lien Grp_Calcul\"] && tests[\"Delete Grp_Calcul\"]){",
                      "        tests[\"Delete data Sum up\"] = true; ",
                      "        postman.setNextRequest(\"[00010]Drop file Transaction\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data Sum up\"] = false; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeleteLienGrpCalcul\",\r\n         \"requestContent\":\"delete from  LIEN_GRC_PCE where uidgrp_calcul_pere in (select uidgrp_calcul from GRP_CALCUL where IDGRP_CALCUL='513TEST90')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteGrpCalcul\",\r\n         \"requestContent\":\"delete from grp_calcul where uidgrp_calcul in (select uidgrp_calcul from GRP_CALCUL where IDGRP_CALCUL='513TEST90')\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "01508522-7c53-9bca-3a45-b547cbf82e68",
              "name": "[00010]Drop file Transaction",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"PRO_ARF_01_PCE_TNR_SGGUR1133A_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"PRO_ARF_01_PCE_TNR_SGGUR1133A_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "   //Waiting that the status,processid and source_processid are given for this type of file. So we are direcly moving to the next step.",
                      "   /*if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file PCE\"] = true; ",
                      "       postman.setNextRequest(\"[00006]Check data\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }*/",
                      "    postman.setNextRequest(\"[00010]Check data\");",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"TRANSACTION\",\"fileName\":\"J20160828_PCR_20160829015704_REF31_CAM_01.xml\",\"wait\":\"true\",\"waitTimeout\":\"30\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "b243d56e-6d63-02e5-9a37-69420afd9377",
              "name": "[00010]Check data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult != null){",
                      "       for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results != null){",
                      "               switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessusOld\":",
                      "                    tests[\"Check status in ORC_PROCESSUS Old way\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckGrpCalculCreation\":",
                      "                     tests[\"Check status in GRP_CALCUL Creation\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                break;",
                      "                } ",
                      "            }",
                      "        } ",
                      "    }",
                      "    postman.setNextRequest(\"[00011]Delete data\");",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n            {  \r\n         \"requestId\":\"CheckStatutOrcProcessusOld\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where date_lancement_processus>= (sysdate - 1/24/6) and code_technique_processus='PRO_ARF_01' order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n\t\t{  \r\n        \t\"requestId\":\"CheckGrpCalculCreation\",\r\n        \t\"requestContent\":\"select count(*) as COUNT from GRP_CALCUL where IDGRP_CALCUL='513TEST90' and lstime>= (sysdate - 1/24/6)\"\r\n\t\t}\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "927d37d3-f7fc-8cbb-5014-2939915147f8",
          "name": "[00011]PRO_ARF_02_PCE_TNR_PCEVER15_TSTCACHE2",
          "description": "",
          "item": [
            {
              "_postman_id": "b5c8ad39-eab8-031a-bc81-03df2b9a26a2",
              "name": "[00011]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeleteLienGrpCalcul\":",
                      "                tests[\"Delete Lien Grp_Calcul\"] = true;",
                      "                break;",
                      "            case \"DeleteGrpCalcul\":",
                      "                tests[\"Delete Grp_Calcul\"] = true;",
                      "                break;",
                      "        }",
                      "    }",
                      "    if (tests[\"Delete Lien Grp_Calcul\"] && tests[\"Delete Grp_Calcul\"]){",
                      "        tests[\"Delete data Sum up\"] = true; ",
                      "        postman.setNextRequest(\"[00011]Drop file Avignon\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data Sum up\"] = false; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeleteLienGrpCalcul\",\r\n         \"requestContent\":\"delete from  LIEN_GRC_PCE where uidgrp_calcul_pere in (select uidgrp_calcul from GRP_CALCUL where IDGRP_CALCUL='TSTCACHE2')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteGrpCalcul\",\r\n         \"requestContent\":\"delete from grp_calcul where uidgrp_calcul in (select uidgrp_calcul from GRP_CALCUL where IDGRP_CALCUL='TSTCACHE2')\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "f2737530-07e8-1526-38fb-fc4fbf82d736",
              "name": "[00011]Drop file Avignon",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"PRO_ARF_02_PCE_TNR_PCEVER15_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"PRO_ARF_02_PCE_TNR_PCEVER15_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "   //Waiting that the status,processid and source_processid are given for this type of file. So we are direcly moving to the next step.",
                      "   /*if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file PCE\"] = true; ",
                      "       postman.setNextRequest(\"[00007]Check data\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }*/",
                      "    postman.setNextRequest(\"[00011]Check data\");",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"AVIGNON\",\"fileName\":\"M20161201_PAP_20161205144223_REF51_AVI_01.xml\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "0f38c4a8-8bdf-0fa4-6117-42057548a224",
              "name": "[00011]Check data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult !== null){",
                      "       for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results !== null){",
                      "               switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessusOld\":",
                      "                    tests[\"Check status in ORC_PROCESSUS Old way\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckGrpCalculCreation\":",
                      "                     tests[\"Check status in GRP_CALCUL Creation\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                break;",
                      "                } ",
                      "            }",
                      "        } ",
                      "    }",
                      "    postman.setNextRequest(null);",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n        {  \r\n         \"requestId\":\"CheckStatutOrcProcessusOld\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where date_lancement_processus>= (sysdate - 1/24/6) and code_technique_processus='PRO_ARF_02' order by date_lancement_processus desc fetch first 1 rows only\"\r\n\t\t},\r\n\t\t{  \r\n        \t\"requestId\":\"CheckGrpCalculCreation\",\r\n        \t\"requestContent\":\"select count(*) as COUNT from GRP_CALCUL where IDGRP_CALCUL='TSTCACHE2' and lstime>= (sysdate - 1/24/6)\"\r\n\t\t}\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "e4fbcf5a-8de6-7112-9498-fdb49b381d84",
          "name": "[00015]PRO_ARF_05_PCE_TNR_SGPCETVPEC",
          "description": "",
          "item": [
            {
              "_postman_id": "66041e7c-67d8-8e71-1eea-60e25d62dc94",
              "name": "[00015]Delete data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    for(var i= 0; i < sqlResult.length; i++)",
                      "    {",
                      "        switch (sqlResult[i].requestId) {",
                      "            case \"DeleteLienGrpCalcul\":",
                      "                tests[\"Delete Lien Grp_Calcul\"] = true;",
                      "                break;",
                      "            case \"DeleteGrpCalcul\":",
                      "                tests[\"Delete Grp_Calcul\"] = true;",
                      "                break;",
                      "        }",
                      "    }",
                      "    if (tests[\"Delete Lien Grp_Calcul\"] && tests[\"Delete Grp_Calcul\"]){",
                      "        tests[\"Delete data Sum up\"] = true; ",
                      "        postman.setNextRequest(\"[00011]Drop file Avignon\");",
                      "    }",
                      "    else {",
                      "       tests[\"Delete data Sum up\"] = false; ",
                      "       //postman.setNextRequest(null);",
                      "    }",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeleteLienGrpCalcul\",\r\n         \"requestContent\":\"delete from  LIEN_GRC_PCE where uidgrp_calcul_pere in (select uidgrp_calcul from GRP_CALCUL where IDGRP_CALCUL='TSTCACHE2')\"\r\n      },\r\n      {  \r\n         \"requestId\":\"DeleteGrpCalcul\",\r\n         \"requestContent\":\"delete from grp_calcul where uidgrp_calcul in (select uidgrp_calcul from GRP_CALCUL where IDGRP_CALCUL='TSTCACHE2')\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "c231c7fe-b604-3fab-8b31-26e6a1ee912b",
              "name": "[00015]Drop file Baset",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    postman.setEnvironmentVariable(\"PRO_ARF_02_PCE_TNR_PCEVER15_processid\",jsonData.processId);",
                      "    postman.setEnvironmentVariable(\"PRO_ARF_02_PCE_TNR_PCEVER15_sourceProcessId\",jsonData.sourceProcessId);",
                      "    ",
                      "   //Waiting that the status,processid and source_processid are given for this type of file. So we are direcly moving to the next step.",
                      "   /*if (jsonData.statusProcess === \"2\"){",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);",
                      "    }",
                      "    else if (jsonData.statusProcess === \"4\"){",
                      "       tests[\"Check drop file PCE\"] = true; ",
                      "       postman.setNextRequest(\"[00007]Check data\");",
                      "    }",
                      "    else {",
                      "        tests[\"Check drop file PCE\"] = false;",
                      "        //postman.setNextRequest(null);  ",
                      "    }*/",
                      "    postman.setNextRequest(\"[00011]Check data\");",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"AVIGNON\",\"fileName\":\"M20161201_PAP_20161205144223_REF51_AVI_01.xml\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "4be31d40-6965-d18d-f624-ef983607dd29",
              "name": "[00015]Check data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult != null){",
                      "       for(var i= 0; i < sqlResult.length; i++)",
                      "        {",
                      "            if(sqlResult[i].results != null){",
                      "               switch (sqlResult[i].requestId) {",
                      "                case \"CheckStatutOrcProcessusOld\":",
                      "                    tests[\"Check status in ORC_PROCESSUS Old way\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
                      "                    break;",
                      "                case \"CheckGrpCalculCreation\":",
                      "                     tests[\"Check status in GRP_CALCUL Creation\"] = sqlResult[i].results[0].COUNT == \"1\";",
                      "                break;",
                      "                } ",
                      "            }",
                      "        } ",
                      "    }",
                      "    postman.setNextRequest(null);",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//postman.setNextRequest(null);",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic QWRtaW5pc3RyYXRvcjptYW5hZ2U=",
                    "description": ""
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n        {  \r\n         \"requestId\":\"CheckStatutOrcProcessusOld\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where date_lancement_processus>= (sysdate - 1/24/6) and code_technique_processus='PRO_ARF_02' order by date_lancement_processus desc fetch first 1 rows only\"\r\n\t\t},\r\n\t\t{  \r\n        \t\"requestId\":\"CheckGrpCalculCreation\",\r\n        \t\"requestContent\":\"select count(*) as COUNT from GRP_CALCUL where IDGRP_CALCUL='TSTCACHE2' and lstime>= (sysdate - 1/24/6)\"\r\n\t\t}\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "221d9550-f90c-ebd9-83b7-1c81b597810d",
      "name": "TRV",
      "description": "",
      "item": [
        {
          "_postman_id": "313c2a45-f681-6534-e5d4-d2f85ba3af57",
          "name": "[00016]PRO_TRV_008",
          "description": "",
          "item": [
            {
              "_postman_id": "a708a972-88b2-d94a-ab9b-ae85e1db06dd",
              "name": "[00016]Launch process",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "function pausecomp(millis)",
                      "         {",
                      "          var date = new Date();",
                      "          var curDate = null;",
                      "          do { curDate = new Date(); }",
                      "          while(curDate-date < millis);",
                      "        }",
                      "pausecomp(20000);",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "if (tests[\"Status code is 200\"]){",
                      "        ",
                      "        ",
                      "        ",
                      "       postman.setNextRequest(\"[080100100]Check data\");",
                      "    }",
                      "",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/process/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"alias\":\"TRV_08\"}"
                },
                "description": ""
              },
              "response": []
            },
            {
              "_postman_id": "5f693ff7-f186-bec2-437d-022e715ae7a7",
              "name": "[00016]Check data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "if (tests[\"Status code is 200\"]){",
                      "    var jsonData = JSON.parse(responseBody);",
                      "    var sqlResult = jsonData.sqlResult;",
                      "    if(sqlResult !== null){",
                      "            if(sqlResult[0].results !== null){",
                      "                    tests[\"Check Somme VOLPEC\"] = (sqlResult[0].results[0].SUMVOLPEC == sqlResult[1].results[0].SUMPOINT);",
                      "                    console.log (sqlResult[1].results[0].SUMPOINT);",
                      "                    console.log (sqlResult[0].results[0].SUMVOLPEC);",
                      "                }",
                      "            }",
                      "        ",
                      "    ",
                      "}",
                      "else{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "",
                      "",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "description": ""
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckSumVolpec\",\r\n         \"requestContent\":\"select sum(SUM) AS SUMVOLPEC from sum_volpec\"\r\n      },\r\n      {  \r\n         \"requestId\":\"CheckSumPoint\",\r\n         \"requestContent\":\"select sum(P.VALEUR) AS SUMPOINT from POINT P inner join grandeur G on G.UIDGRANDEUR = P.UIDGRANDEUR INNER JOIN PCE ON PCE.UIDGRANDEURS_OBJET = G.UIDGRANDEURS_OBJET WHERE G.TYPE_GRANDEUR = 'VOLPEC' AND G.PAS = '86400' AND P.HORODATE >= TRUNC(sysdate-1/4)+1/4-(select val from factor inner join factorvalue on factor.uidfactor = factorvalue.uidfactor where factor.factorcode = 'NbJSumVolpec') AND P.HORODATE < TRUNC(sysdate-1/4)+1/4\"\r\n      }\r\n   ]\r\n}"
                },
                "description": ""
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "523108e5-4488-c644-d795-4a59931f4bf5",
          "name": "[00017]PRO_TRV_09",
          "description": "",
          "item": [],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "279a4619-a6ee-166f-9a7f-d31bde295203",
      "name": "[00015]Delete data",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "if (tests[\"Status code is 200\"]){",
              "    var jsonData = JSON.parse(responseBody);",
              "    var sqlResult = jsonData.sqlResult;",
              "    for(var i= 0; i < sqlResult.length; i++)",
              "    {",
              "        switch (sqlResult[i].requestId) {",
              "            case \"DeleteBTFiche\":",
              "                tests[\"Delete BT Fiche\"] = true;",
              "                break;",
              "        }",
              "    }",
              "    if ( tests[\"Delete BT Fiche\"] ){",
              "        tests[\"Delete data Sum up\"]  = true; ",
              "        postman.setNextRequest(\"[00015]Drop file BT_Fiche PCE Add\");",
              "    }",
              "    else {",
              "       tests[\"Delete data Sum up\"] = fase; ",
              "       //postman.setNextRequest(null);",
              "    }",
              "}",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeleteBTFiche\",\r\n         \"requestContent\":\"delete from bt_fiche where UIDFICHE in ('PJR-F03')\"\r\n      }\r\n   ]\r\n}"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "94d2be3f-9e1a-8317-f45e-1523a5c69059",
      "name": "[00015]Drop file BT_Fiche PCE Add",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "if (tests[\"Status code is 200\"]){",
              "    var jsonData = JSON.parse(responseBody);",
              "    postman.setEnvironmentVariable(\"[00015]PRO_ARF_10_PCE_ARF_015_SGPCETVPEC_processid\",jsonData.processId);",
              "    postman.setEnvironmentVariable(\"[00015]PRO_ARF_10_PCE_ARF_015_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
              "    ",
              "    if (jsonData.statusProcess === \"2\"){",
              "        tests[\"Check drop file BTFiche\"] = false;",
              "        //postman.setNextRequest(null);",
              "    }",
              "    else if (jsonData.statusProcess === \"4\"){",
              "       tests[\"Check drop file BTFiche\"] = true; ",
              "       postman.setNextRequest(\"[00015]Check data BT_Fiche Add\");",
              "    }",
              "    else {",
              "        tests[\"Check drop file BTFiche\"] = true;",
              "        postman.setNextRequest(\"[00015]Check data BT_Fiche Add\");",
              "}",
              "}",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"alias\":\"BASET\",\"fileName\":\"J20161222_BASET_20161222093500_REF21_ETR.xml.gz\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
        },
        "description": ""
      },
      "response": []
    },
    {
      "_postman_id": "b5c2bfc7-025a-29ac-6791-8c2c6cabf266",
      "name": "[00015]Check data BT_Fiche Add",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "tests[\"Status code is 200\"] = responseCode.code === 200;",
              "if (tests[\"Status code is 200\"]){",
              "    var jsonData = JSON.parse(responseBody);",
              "    var sqlResult = jsonData.sqlResult;",
              "    if(sqlResult !== null){",
              "        for(var i= 0; i < sqlResult.length; i++)",
              "        {",
              "            if(sqlResult[i].results !== null){",
              "                switch (sqlResult[i].requestId) {",
              "                case \"CheckStatutOrcProcessus\":",
              "                    tests[\"Check status in ORC_PROCESSUS\"] = sqlResult[i].results[0].ID_STATUT_PROCESSUS == \"4\";",
              "                    break;",
              "                case \"CheckBTFicheUpdate\":",
              "                    tests[\"Check BT_Fiche Update\"] = sqlResult[i].results[0].COUNT == \"1\";",
              "                    break;",
              "                ",
              "                }",
              "            }",
              "        }",
              "    }",
              "    postman.setNextRequest(null);",
              "}",
              "else{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              ""
            ]
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              "//postman.setNextRequest(null);",
              "",
              ""
            ]
          }
        }
      ],
      "request": {
        "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"CheckStatutOrcProcessus\",\r\n         \"requestContent\":\"select id_statut_processus from orc_processus where code_technique_processus='PRO_ARF_05' and date_lancement_processus >=(sysdate-1/24/10) order by date_lancement_processus desc fetch first 1 rows only\"\r\n      },\r\n            {  \r\n         \"requestId\":\"CheckBTFicheUpdate\",\r\n         \"requestContent\":\"select count(*) as COUNT from PWRLINE.BT_FICHE where BT_FICHE.UIDFICHE='PJR-F03' and BT_FICHE.DATE_DE_MODIFICATION>(sysdate-1/24/10)\"\r\n      }\r\n   ]\r\n}"
        },
        "description": ""
      },
      "response": []
    }
  ]
}