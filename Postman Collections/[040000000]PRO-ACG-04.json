{
  "variables": [],
  "info": {
    "name": "[040000000]PRO-ACG-04",
    "_postman_id": "8e810119-e57b-defd-66dc-cc3ad4feacd9",
    "description": "",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "6bffd7e2-f1c8-3665-c978-e9a4a3d5d523",
      "name": "[041303000STM]PRO_ACG_13_ACG_030_9009_2_5_9_10_11",
      "description": "",
      "item": [
        {
          "_postman_id": "87d38b06-b4fb-6386-3bca-01a1d3e9d220",
          "name": "[00006]Delete data copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    var sqlResult = jsonData.sqlResult;",
                  "    for(var i= 0; i < sqlResult.length; i++)",
                  "    {",
                  "        switch (sqlResult[i].requestId) {",
                  "            case \"DeletePoint\":",
                  "                tests[\"Delete Point\"] = true;",
                  "                break;",
                  "",
                  "        }",
                  "    }",
                  "    if (tests[\"Delete Point\"]){",
                  "        tests[\"Delete data Sum up\"] = true; ",
                  "        postman.setNextRequest(\"[00006]Drop file STM\");",
                  "    }",
                  "    else {",
                  "       tests[\"Delete data Sum up\"] = false; ",
                  "       //postman.setNextRequest(null);",
                  "    }",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/customSQL/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{  \r\n   \"sqlRequest\":[  \r\n      {  \r\n         \"requestId\":\"DeletePoint\",\r\n         \"requestContent\":\"delete from point where uidpoint in (select uidpoint from STATION_METEO p,grandeurs_objet gr,grandeur g,point po,qualite_point qpo where p.UIDGRANDEURS_OBJET=gr.UIDGRANDEURS_OBJET and gr.UIDGRANDEURS_OBJET=g.UIDGRANDEURS_OBJET and g.UIDGRANDEUR=po.UIDGRANDEUR and po.UIDQUALITE_POINT=qpo.UIDQUALITE_POINT and po.HORODATE >= TO_DATE('17/12/2015 06:00:00','DD/MM/YYYY HH24:MI:SS') and po.HORODATE <= TO_DATE('18/12/2015 05:00:00','DD/MM/YYYY HH24:MI:SS') and IDSTATION in ('11') )\"\r\n      }\r\n   ]\r\n}"
            },
            "description": ""
          },
          "response": []
        },
        {
          "_postman_id": "a30bd494-bd01-4579-6f6f-ce8b52c7441c",
          "name": "[00006]Drop file STM copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;",
                  "if (tests[\"Status code is 200\"]){",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    postman.setEnvironmentVariable(\"PRO_ACG_05_PCE_TNR_SGPCETVPEC_processid\",jsonData.processId);",
                  "    postman.setEnvironmentVariable(\"PRO_ACG_05_PCE_TNR_SGPCETVPEC_sourceProcessId\",jsonData.sourceProcessId);",
                  "    ",
                  "    //Waiting that the status,processid and source_processid are given for this type of file. So we are direcly moving to the next step.",
                  "    /*if (jsonData.statusProcess === \"2\"){",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);",
                  "    }",
                  "    else if (jsonData.statusProcess === \"4\"){",
                  "       tests[\"Check drop file PCE\"] = true; ",
                  "       postman.setNextRequest(\"[00005]Check data\");",
                  "    }",
                  "    else {",
                  "        tests[\"Check drop file PCE\"] = false;",
                  "        //postman.setNextRequest(null);  ",
                  "    }*/",
                  "    postman.setNextRequest(\"[00006]Check data\");",
                  "    ",
                  "}",
                  "else{",
                  "    postman.setNextRequest(null);",
                  "}",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "url": "http://{{user}}:{{password}}@{{ipPort}}/rest/ETR_FRMK_ADMIN/ws/tests/files/",
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": ""
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"alias\":\"STM\",\"fileName\":\"STMChronique_20151217T114556_CHR41_METEOH_01.xml\",\"wait\":\"true\",\"waitTimeout\":\"90\"}"
            },
            "description": ""
          },
          "response": []
        }
      ]
    }
  ]
}